{"version":3,"file":"js/_rvm_gems_ruby-3_0_2_gems_decidim-admin-0_27_3_app_packs_entrypoints_decidim_admin_js.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACrFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AChDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5CA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACjFA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;ACVA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACbA;AACA;AAEA;AAKA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;AC/BA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACRA","sources":["webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/entrypoints/decidim_admin.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/admin_autocomplete.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/application.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/budget_rule_toggler.component.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/choose_language.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/draggable-list.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/external_domain_whitelist.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/form.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/managed_users.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/moderations.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/newsletters.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/officializations.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/proposal_infinite_edit.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/resources_permissions.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/scope_picker_enabler.component.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/sortable.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/subform_multi_toggler.component.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/subform_toggler.component.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/tab_focus.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/toggle_nav.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/src/decidim/admin/welcome_notification.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/slug_form.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-admin-0.27.3/app/packs/entrypoints/decidim_admin.scss?7258"],"sourcesContent":["/* eslint no-unused-vars: 0 */\n/* eslint id-length: [\"error\", { \"exceptions\": [\"$\"] }] */\n\nimport \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nimport $ from \"jquery\"\nimport Quill from \"quill\"\nimport Rails from \"@rails/ujs\"\n\nimport \"foundation-sites\"\nimport \"src/decidim/vendor/foundation-datepicker\"\nimport \"src/decidim/foundation_datepicker_locales\"\nimport \"jquery-serializejson\"\n\nimport \"src/decidim/admin/tab_focus\"\nimport initLanguageChangeSelect from \"src/decidim/admin/choose_language\"\nimport \"src/decidim/admin/application\"\nimport \"src/decidim/admin/resources_permissions\"\nimport \"src/decidim/admin/welcome_notification\"\nimport \"src/decidim/admin/newsletters\"\nimport \"src/decidim/admin/form\"\nimport \"src/decidim/admin/external_domain_whitelist\"\nimport \"src/decidim/confirm\"\nimport \"src/decidim/admin/draggable-list\"\nimport \"src/decidim/admin/sortable\"\nimport \"src/decidim/gallery\"\nimport \"src/decidim/admin/moderations\"\nimport \"src/decidim/input_tags\"\nimport \"src/decidim/input_hashtags\"\nimport \"src/decidim/input_mentions\"\nimport \"src/decidim/vizzs\"\nimport \"src/decidim/ajax_modals\"\nimport \"src/decidim/admin/officializations\"\nimport \"src/decidim/session_timeouter\"\nimport \"src/decidim/slug_form\"\nimport \"src/decidim/direct_uploads/upload_field\"\nimport \"src/decidim/admin/admin_autocomplete\"\n\n// CSS\nimport \"entrypoints/decidim_admin.scss\";\n\n// This needs to be loaded after confirm dialog to bind properly\nRails.start()\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  initLanguageChangeSelect(document.querySelectorAll(\"select.language-change\"));\n});\n","import AutoComplete from \"src/decidim/autocomplete\";\n\n/**\n * This function can be used to create an autocomplete input automatically\n * from the following kind of div:\n *   <div data-autocomplete=\"{...}\"></div>\n *\n * The data-autocomplete attribute should contain the following configuration\n * as an encoded JSON, which is used to generate the AutoComplete options:\n * - name: assembly_member[user_id],\n * - options: [],\n * - placeholder: \"Select a participant\",\n * - searchURL: \"http://...\"\n * - selected: \"\",\n *\n * @param {HTMLElement} el The element to generate the autocomplete for.\n * @returns {AutoComplete} An instance of the AutoComplete class.\n */\nconst autoConfigure = (el) => {\n  const config = JSON.parse(el.dataset.autocomplete);\n  const searchUrl = new URL(config.searchURL);\n  const textInput = document.createElement(\"input\");\n  textInput.type = \"text\";\n  textInput.className = \"autocomplete-input\";\n  el.appendChild(textInput);\n  let mode = config.mode || \"sticky\"\n  let selected = null;\n  if (config.selected) {\n    switch (mode) {\n    case \"multi\":\n      selected = config.selected.map((item) => (\n        {\n          key: \"label\",\n          value: {\n            value: item.value,\n            label: item.label\n          }\n        }\n      ));\n      break;\n    case \"sticky\":\n      selected = { key: \"label\", value: config.options[config.options.length - 1] };\n      break;\n    default:\n      selected = config.selected;\n    }\n  }\n\n  const dataSource = (query, callback) => {\n    const params = new URLSearchParams({\n      ...Object.fromEntries(searchUrl.searchParams),\n      term: query\n    });\n    fetch(`${searchUrl.origin}${searchUrl.pathname}?${params.toString()}`, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" }\n    }).then((response) => response.json()).then((data) => {\n      callback(data)\n    });\n  };\n\n  const ac = new AutoComplete(textInput, {\n    name: config.name,\n    placeholder: config.placeholder,\n    selected: selected,\n    mode: mode,\n    searchPrompt: true,\n    searchPromptText: config.searchPromptText,\n    threshold: 3,\n    dataMatchKeys: [\"label\"],\n    dataSource\n  });\n\n  return ac;\n}\n\n$(() => {\n  const $autocompleteDiv = $(\"[data-autocomplete]\");\n  if ($autocompleteDiv.length < 1) {\n    return;\n  }\n\n  $autocompleteDiv.each((_index, element) => {\n    autoConfigure(element);\n  })\n})\n","/* eslint-disable no-invalid-this */\n\nimport toggleNav from \"src/decidim/admin/toggle_nav\"\nimport createSortList from \"src/decidim/admin/sort_list.component\"\nimport createQuillEditor from \"src/decidim/editor\"\nimport formDatePicker from \"src/decidim/form_datepicker\"\nimport DataPicker from \"src/decidim/data_picker\"\nimport FormFilterComponent from \"src/decidim/form_filter\"\nimport Configuration from \"src/decidim/configuration\"\nimport InputCharacterCounter from \"src/decidim/input_character_counter\"\nimport managedUsersForm from \"src/decidim/admin/managed_users\"\n\nwindow.Decidim = window.Decidim || {};\nwindow.Decidim.managedUsersForm = managedUsersForm\nwindow.Decidim.config = new Configuration()\nwindow.Decidim.InputCharacterCounter = InputCharacterCounter;\n\n$(() => {\n  window.theDataPicker = new DataPicker($(\".data-picker\"));\n\n  $(document).foundation();\n\n  toggleNav();\n\n  createSortList(\"#steps tbody\", {\n    placeholder: $('<tr style=\"border-style: dashed; border-color: #000\"><td colspan=\"4\">&nbsp;</td></tr>')[0],\n    onSortUpdate: ($children) => {\n      const sortUrl = $(\"#steps tbody\").data(\"sort-url\")\n      const order = $children.map((index, child) => $(child).data(\"id\")).toArray();\n\n      $.ajax({\n        method: \"POST\",\n        url: sortUrl,\n        contentType: \"application/json\",\n        data: JSON.stringify({ items_ids: order }) }, // eslint-disable-line camelcase\n      );\n    }\n  })\n\n  formDatePicker();\n\n  $(\".editor-container\").each((_idx, container) => {\n    createQuillEditor(container);\n  });\n\n  $(\"form.new_filter\").each(function () {\n    const formFilter = new FormFilterComponent($(this));\n\n    formFilter.mountComponent();\n  })\n});\n\n","export default class BudgetRuleTogglerComponent {\n  constructor(options = {}) {\n    this.ruleCheckboxes = options.ruleCheckboxes;\n    this._runAll();\n  }\n\n  _runAll() {\n    this.ruleCheckboxes.each((_i, checkbox) => {\n      this._bindEvent(checkbox);\n      this.run(checkbox);\n    });\n  }\n\n  _bindEvent(target) {\n    $(target).on(\"change\", (event) => {\n      this.run(event.target);\n    });\n  }\n\n  run(target) {\n    this.toggleTextInput(target);\n\n    if ($(target).prop(\"checked\")) {\n      this.ruleCheckboxes.filter(\n        (_i, checkbox) => {\n          return checkbox !== target;\n        }).prop(\"checked\", false).each(\n        (_i, checkbox) => {\n          this.toggleTextInput(checkbox);\n        });\n    }\n  }\n\n  toggleTextInput(target) {\n    const container = $(target).closest(\"div\");\n    if (container.length < 1) {\n      return;\n    }\n    const containerClassPrefix = container.attr(\"class\").\n      replace(/^vote_rule_/, \"vote_\").\n      replace(/_enabled_container$/, \"\");\n    const input = $(`[class^=\"${containerClassPrefix}\"][class$=\"_container\"]`);\n\n    if ($(target).prop(\"checked\")) {\n      input.slideDown();\n    } else {\n      input.slideUp();\n    }\n  }\n}\n","/* eslint-disable no-invalid-this */\n/* eslint-disable require-jsdoc */\n\nexport default function initLanguageChangeSelect(elements) {\n  elements.forEach((select) => {\n    select.addEventListener(\"change\", () => {\n      let targetTabPaneSelector = select.value;\n      let tabsContent = select.parentElement.parentElement.nextElementSibling;\n\n      tabsContent.querySelector(\".is-active\").classList.remove(\"is-active\");\n      tabsContent.querySelector(targetTabPaneSelector).classList.add(\"is-active\");\n    })\n  });\n}\n","/* eslint-disable require-jsdoc */\nimport createSortList from \"src/decidim/admin/sort_list.component\"\n\nexport default function createSortableList(lists) {\n  createSortList(lists, {\n    handle: \"li\",\n    forcePlaceholderSize: true,\n    acceptFrom: \".js-connect\"\n  })\n}\n\n// Once in DOM\n$(() => {\n  const $draggables = $(\".draggable-list\")\n  let draggablesClassNames = []\n\n  $draggables.each((index, elem) => {\n    draggablesClassNames = [...draggablesClassNames, `.${elem.className.split(\" \").filter((name) => (/js-list.*/).test(name))[0]}`]\n  })\n\n  document.addEventListener(\"drag\", function (event) {\n    $draggables.not(event.target.parentElement).addClass(\"dragging\")\n  })\n\n  document.addEventListener(\"dragend\", function() {\n    $draggables.removeClass(\"dragging\")\n  })\n\n  createSortableList(draggablesClassNames.join(\", \"))\n})\n","import AutoButtonsByPositionComponent from \"src/decidim/admin/auto_buttons_by_position.component\"\nimport AutoLabelByPositionComponent from \"src/decidim/admin/auto_label_by_position.component\"\nimport createDynamicFields from \"src/decidim/admin/dynamic_fields.component\"\nimport createSortList from \"src/decidim/admin/sort_list.component\"\n\n$(() => {\n  const dynamicFieldDefinitions = [\n    {\n      placeHolderId: \"external-domain-id\",\n      wrapperSelector: \".external-domains\",\n      fieldSelector: \".external-domain\",\n      addFieldSelector: \".add-external-domain\"\n    }\n  ];\n\n  dynamicFieldDefinitions.forEach((section) => {\n    const fieldSelectorSuffix = section.fieldSelector.replace(\".\", \"\");\n\n    const autoButtonsByPosition = new AutoButtonsByPositionComponent({\n      listSelector: `${section.fieldSelector}:not(.hidden)`,\n      hideOnFirstSelector: \".move-up-question\",\n      hideOnLastSelector: \".move-down-question\"\n    });\n\n    const autoLabelByPosition = new AutoLabelByPositionComponent({\n      listSelector: `${section.fieldSelector}:not(.hidden)`,\n      labelSelector: \".card-title span:first\",\n      onPositionComputed: (el, idx) => {\n        $(el).find(\"input[name$=\\\\[position\\\\]]\").val(idx);\n      }\n    });\n\n    const createSortableList = () => {\n      createSortList(\".external-domains-list:not(.published)\", {\n        handle: \".external-domain-divider\",\n        placeholder: '<div style=\"border-style: dashed; border-color: #000\"></div>',\n        forcePlaceholderSize: true,\n        onSortUpdate: () => {\n          autoLabelByPosition.run();\n          autoButtonsByPosition.run();\n        }\n      });\n    };\n\n    const hideDeletedItem = ($target) => {\n      const inputDeleted = $target.find(\"input[name$=\\\\[deleted\\\\]]\").val();\n\n      if (inputDeleted === \"true\") {\n        $target.addClass(\"hidden\");\n        $target.hide();\n\n        // Allows re-submitting of the form\n        $(\"input\", $target).removeAttr(\"required\");\n      }\n    };\n\n    createDynamicFields({\n      placeholderId: section.placeHolderId,\n      wrapperSelector: section.wrapperSelector,\n      containerSelector: `${section.wrapperSelector}-list`,\n      fieldSelector: section.fieldSelector,\n      addFieldButtonSelector: section.addFieldSelector,\n      removeFieldButtonSelector: `.remove-${fieldSelectorSuffix}`,\n      moveUpFieldButtonSelector: \".move-up-question\",\n      moveDownFieldButtonSelector: \".move-down-question\",\n      onAddField: () => {\n        createSortableList();\n\n        autoLabelByPosition.run();\n        autoButtonsByPosition.run();\n      },\n      onRemoveField: ($field) => {\n        autoLabelByPosition.run();\n        autoButtonsByPosition.run();\n\n        // Allows re-submitting of the form\n        $(\"input\", $field).removeAttr(\"required\");\n      },\n      onMoveUpField: () => {\n        autoLabelByPosition.run();\n        autoButtonsByPosition.run();\n      },\n      onMoveDownField: () => {\n        autoLabelByPosition.run();\n        autoButtonsByPosition.run();\n      }\n    });\n\n    createSortableList();\n\n    $(section.fieldSelector).each((_idx, el) => {\n      const $target = $(el);\n\n      hideDeletedItem($target);\n    });\n\n    autoLabelByPosition.run();\n    autoButtonsByPosition.run();\n  });\n});\n","import \"src/decidim/admin/scope_picker_enabler.component\"\nimport \"src/decidim/admin/proposal_infinite_edit\"\n\nimport BudgetRuleTogglerComponent from \"src/decidim/admin/budget_rule_toggler.component\"\n\n// Checks if the form contains fields with special CSS classes added in\n// Decidim::Admin::SettingsHelper and acts accordingly.\n$(() => {\n  const budgetRuleToggler = new BudgetRuleTogglerComponent({\n    ruleCheckboxes: $(\"input[id^='component_settings_vote_rule_']\")\n  });\n\n  budgetRuleToggler.run();\n\n  // Prevents readonly containers from being modified.\n  const $readonlyContainer = $(\".readonly_container input\");\n\n  $readonlyContainer.click((event) => {\n    event.preventDefault();\n    return false;\n  });\n\n  // Target fields:\n  // - amendments_wizard_help_text\n  // - amendments_visibility\n  // - amendment_creation_enabled\n  // - amendment_reaction_enabled\n  // - amendment_promotion_enabled\n\n  // (1) Hides target fields if amendments_enabled component setting is NOT checked.\n  // (2) Toggles visibilty of target fields when amendments_enabled component setting is clicked.\n  const $amendmentsEnabled = $(\"input#component_settings_amendments_enabled\");\n\n  if ($amendmentsEnabled.length > 0) {\n    const $amendmentStepSettings = $(\".amendments_wizard_help_text_container, .amendments_visibility_container, .amendment_creation_enabled_container, .amendment_reaction_enabled_container, .amendment_promotion_enabled_container\");\n\n    if ($amendmentsEnabled.is(\":not(:checked)\")) {\n      $amendmentStepSettings.hide();\n    }\n\n    $amendmentsEnabled.click(() => {\n      $amendmentStepSettings.toggle();\n    });\n  }\n});\n","/* eslint-disable require-jsdoc */\n\nimport SubformTogglerComponent from \"src/decidim/admin/subform_toggler.component\"\n\nexport default function managedUsersForm() {\n  const subformToggler = new SubformTogglerComponent({\n    controllerSelect: $(\"select#impersonate_user_authorization_handler_name\"),\n    subformWrapperClass: \"authorization-handler\",\n    globalWrapperSelector: \"form\"\n  });\n\n  subformToggler.run();\n}\n","$(() => {\n  const $moderationDetails = $(\".moderation-details\");\n  const $toggleContentButton = $moderationDetails.find(\".toggle-content\");\n  const $reportedContent = $moderationDetails.find(\".reported-content\");\n  const $currentContent = $reportedContent.find(\".current\");\n  const $originalContent = $reportedContent.find(\".original\");\n\n  $originalContent.hide();\n\n  $toggleContentButton.on(\"click\", () => {\n    $currentContent.toggle();\n    $originalContent.toggle();\n\n    if ($currentContent.is(\":hidden\")) {\n      $toggleContentButton.html($toggleContentButton.data(\"see-current-button-label\"));\n    } else {\n      $toggleContentButton.html($toggleContentButton.data(\"see-original-button-label\"));\n    }\n  })\n})\n","$(() => {\n  const $form = $(\".form.newsletter_deliver\");\n\n  if ($form.length > 0) {\n    const $sendNewsletterToAllUsers = $form.find(\"#send_newsletter_to_all_users\");\n    const $sendNewsletterToFollowers = $form.find(\"#send_newsletter_to_followers\");\n    const $sendNewsletterToParticipants = $form.find(\"#send_newsletter_to_participants\");\n    const $participatorySpacesForSelect = $form.find(\"#participatory_spaces_for_select\");\n\n    const checkSelectiveNewsletterFollowers = $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\");\n    const checkSelectiveNewsletterParticipants = $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\");\n\n    $sendNewsletterToAllUsers.on(\"change\", (event) => {\n      const checked = event.target.checked;\n      if (checked) {\n        $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.hide();\n      } else {\n        $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      }\n    })\n\n    $sendNewsletterToFollowers.on(\"change\", (event) => {\n      const checked = event.target.checked;\n      const selectiveNewsletterParticipants = $sendNewsletterToParticipants.find(\"input[type='checkbox']\").prop(\"checked\");\n\n      if (checked) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      } else if (!selectiveNewsletterParticipants) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", true);\n        $participatorySpacesForSelect.hide();\n      }\n    })\n\n    $sendNewsletterToParticipants.on(\"change\", (event) => {\n      const checked = event.target.checked;\n      const selectiveNewsletterFollowers = $sendNewsletterToFollowers.find(\"input[type='checkbox']\").prop(\"checked\");\n      if (checked) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", !checked);\n        $participatorySpacesForSelect.show();\n      } else if (!selectiveNewsletterFollowers) {\n        $sendNewsletterToAllUsers.find(\"input[type='checkbox']\").prop(\"checked\", true);\n        $participatorySpacesForSelect.hide();\n      }\n    })\n\n    if (checkSelectiveNewsletterFollowers || checkSelectiveNewsletterParticipants) {\n      $participatorySpacesForSelect.show();\n    } else {\n      $participatorySpacesForSelect.hide();\n    }\n\n    $(\".form .spaces-block-tag\").each(function(_i, blockTag) {\n      const selectTag = $(blockTag).find(\".chosen-select\")\n      selectTag.change(function() {\n        let optionSelected = selectTag.find(\"option:selected\").val()\n        if (optionSelected === \"all\") {\n          selectTag.find(\"option\").not(\":first\").prop(\"selected\", true);\n          selectTag.find(\"option[value='all']\").prop(\"selected\", false);\n        } else if (optionSelected === \"\") {\n          selectTag.find(\"option\").not(\":first\").prop(\"selected\", false);\n        }\n      });\n    })\n\n    $form.on(\"change\", function() {\n      let $data = $form.serializeJSON().newsletter;\n      let $url = $form.data(\"recipients-count-newsletter-path\");\n      const $modal = $(\"#recipients_count_spinner\");\n      $modal.removeClass(\"hide\");\n      $.get($url, {data: $data}, function(recipientsCount) {\n        $(\"#recipients_count\").text(recipientsCount);\n      }).always(function() {\n        $modal.addClass(\"hide\");\n      });\n    })\n  }\n});\n","$(() => {\n  const $modal = $(\"#show-email-modal\");\n\n  if ($modal.length === 0) {\n    return\n  }\n\n  const $button = $(\"[data-open=user_email]\", $modal);\n  const $email = $(\"#user_email\", $modal);\n  const $fullName = $(\"#user_full_name\", $modal);\n\n  $(\"[data-toggle=show-email-modal]\").on(\"click\", (event) => {\n    event.preventDefault()\n\n    $button.show()\n    $button.attr(\"data-open-url\", event.currentTarget.href)\n    $fullName.text($(event.currentTarget).data(\"full-name\"))\n    $email.html(\"\")\n  })\n})\n","$(() => {\n  const $limitiedTimeLabel = $(\"label[for='component_settings_proposal_edit_time_limited']\")\n  const $limitedTimeRadioButton = $(\"#component_settings_proposal_edit_time_limited\")\n  const $infiniteTimeRadioButton = $(\"#component_settings_proposal_edit_time_infinite\")\n  const $editTimeContainer = $(\".proposal_edit_before_minutes_container\")\n\n  $editTimeContainer.detach().appendTo($limitiedTimeLabel)\n\n  if ($infiniteTimeRadioButton.is(\":checked\")) {\n    $editTimeContainer.hide();\n  }\n\n  $limitedTimeRadioButton.on(\"click\", () => {\n    $editTimeContainer.show();\n  })\n\n  $infiniteTimeRadioButton.on(\"click\", () => {\n    $editTimeContainer.hide();\n  })\n})\n","import SubformMultiTogglerComponent from \"src/decidim/admin/subform_multi_toggler.component\"\n\n$(() => {\n  const subformMultiToggler = new SubformMultiTogglerComponent({\n    controllerSelect: $(\"input[name$=\\\\[authorization_handlers\\\\]\\\\[\\\\]]\"),\n    subformWrapperClass: \"authorization-handler\",\n    globalWrapperSelector: \"fieldset\"\n  });\n\n  subformMultiToggler.run();\n})\n","$(() => {\n  const $ComponentScopeEnabled = $(\"#component_settings_scopes_enabled\");\n  const $ComponentScopeId = $(\"#component_settings_scope_id\");\n\n  if ($(\".edit_component, .new_component\").length > 0) {\n    $ComponentScopeEnabled.on(\"change\", (event) => {\n      const checked = event.target.checked;\n      window.theDataPicker.enabled($ComponentScopeId, checked);\n    })\n    window.theDataPicker.enabled($ComponentScopeId, $ComponentScopeEnabled.prop(\"checked\"));\n  }\n});\n","/* eslint-disable no-ternary */\n\nimport createSortList from \"src/decidim/admin/sort_list.component\"\n\n// Once in DOM\n$(() => {\n  const selector = \".js-sortable\"\n  const $sortable = $(selector)\n\n  $sortable.each((index, elem) => {\n    const item = (elem.id)\n      ? `#${elem.id}`\n      : selector\n\n    createSortList(item, {\n      handle: \"li\",\n      forcePlaceholderSize: true,\n      placeholderClass: \"sort-placeholder\"\n    })\n  })\n})\n","export default class SubformMultiTogglerComponent {\n  constructor(options = {}) {\n    this.controllerSelect = options.controllerSelect;\n    this.subformWrapperClass = options.subformWrapperClass;\n    this.globalWrapperSelector = options.globalWrapperSelector;\n    this._bindEvent();\n    this._runAll();\n  }\n\n  _runAll() {\n    this.controllerSelect.each((idx, el) => {\n      this.run(el);\n    });\n  }\n\n  run(target) {\n    let $target = $(target);\n    let subformWrapperClass = this.subformWrapperClass;\n    let value = $target.val();\n\n    let $form = $target.parents(this.globalWrapperSelector);\n    let $selectedSubform = $form.find(`#${subformWrapperClass}-${value}`)\n\n    if ($target.prop(\"checked\")) {\n      $selectedSubform.find(\"input,textarea,select\").prop(\"disabled\", false);\n      $selectedSubform.show();\n    } else {\n      $selectedSubform.find(\"input,textarea,select\").prop(\"disabled\", true);\n      $selectedSubform.hide();\n    }\n  }\n\n  _bindEvent() {\n    this.controllerSelect.on(\"change\", (event) => {\n      this.run(event.target);\n    });\n  }\n}\n","export default class SubformTogglerComponent {\n  constructor(options = {}) {\n    this.controllerSelect = options.controllerSelect;\n    this.subformWrapperClass = options.subformWrapperClass;\n    this.globalWrapperSelector = options.globalWrapperSelector;\n    this._bindEvent();\n    this._runAll();\n  }\n\n  _runAll() {\n    this.controllerSelect.each((idx, el) => {\n      this.run(el);\n    });\n  }\n\n  run(target) {\n    let $target = $(target);\n    let subformWrapperClass = this.subformWrapperClass;\n    let value = $target.val();\n\n    let $form = $target.parents(this.globalWrapperSelector);\n    let $subforms = $form.find(`.${subformWrapperClass}`);\n    let $selectedSubform = $subforms.filter(`#${subformWrapperClass}-${value}`)\n\n    $subforms.find(\"input,textarea,select\").prop(\"disabled\", true);\n    $subforms.hide();\n\n    $selectedSubform.find(\"input,textarea,select\").prop(\"disabled\", false);\n    $selectedSubform.show();\n  }\n\n  _bindEvent() {\n    this.controllerSelect.on(\"change\", (event) => {\n      this.run(event.target);\n    });\n  }\n}\n\n","/**\n * When switching tabs in i18n fields, autofocus on the input to save clicks #212\n */\n$(() => {\n  // Event launched by foundation\n  $(\"[data-tabs]\").on(\"change.zf.tabs\", (event) => {\n    const $container = $(event.target).next(\".tabs-content .tabs-panel.is-active\");\n    // Detect quilljs editor inside the tabs-panel\n    let $content = $container.find(\".editor .ql-editor\");\n    if ($content.length > 0) {\n      $content.focus();\n    // Detect if inside the tabs-panel have an input\n    } else {\n      $content = $container.find(\"input:first\");\n      if ($content.length > 0) {\n        $content.focus();\n      }\n    }\n  });\n});\n","/* eslint-disable require-jsdoc */\nconst showHideNav = (evt) => {\n  const navMenu = document.querySelector(\".layout-nav\");\n\n  evt.preventDefault();\n  navMenu.classList.toggle(\"is-nav-open\");\n}\n\nexport default function toggleNav() {\n  const navTrigger = document.querySelector(\".menu-trigger\");\n  if (navTrigger) {\n    navTrigger.addEventListener(\"click\", showHideNav);\n  }\n}\n","$(() => {\n  const $scope = $(\"#welcome-notification-details\");\n\n  const $sendNotificationCheckbox = $(\n    \"#organization_send_welcome_notification\",\n    $scope\n  );\n\n  const $customizeCheckbox = $(\n    \"#organization_customize_welcome_notification\",\n    $scope\n  );\n\n  const toggleVisibility = () => {\n    if ($sendNotificationCheckbox.is(\":checked\")) {\n      $(\".send-welcome-notification-details\", $scope).show();\n    } else {\n      $(\".send-welcome-notification-details\", $scope).hide();\n    }\n\n    if ($customizeCheckbox.is(\":checked\")) {\n      $(\".customize-welcome-notification-details\", $scope).show();\n    } else {\n      $(\".customize-welcome-notification-details\", $scope).hide();\n    }\n  };\n\n  $($sendNotificationCheckbox).click(() => toggleVisibility());\n  $($customizeCheckbox).click(() => toggleVisibility());\n\n  toggleVisibility();\n});\n","$(() => {\n  const $wrapper = $(\".slug\");\n  const $input = $wrapper.find(\"input\");\n  const $target = $wrapper.find(\"span.slug-url-value\");\n\n  $input.on(\"keyup\", (event) => {\n    $target.html(event.target.value);\n  });\n});\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}