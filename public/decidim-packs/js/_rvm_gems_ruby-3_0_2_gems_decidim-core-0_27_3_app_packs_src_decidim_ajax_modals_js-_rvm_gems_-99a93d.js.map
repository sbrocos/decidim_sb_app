{"version":3,"file":"js/_rvm_gems_ruby-3_0_2_gems_decidim-core-0_27_3_app_packs_src_decidim_ajax_modals_js-_rvm_gems_-99a93d.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAMA;AACA;AACA;AAGA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvLA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AC9QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAOA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAQA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAKA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAMA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAOA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;AClWA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACJA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAQA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AA5QA;AACA;AAAA;AAAA;AAAA;AAAA;AA8QA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;AC1TA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACzIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1LA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAEA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAqCA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;ACtj2DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AAAA;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;;AAEA;AACA;;AAKA;AACA;AAKA;AACA;AACA;AAKA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AAGA;AACA;AAEA;AACA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;;AAGA;AACA;AAEA;AAAA;AAEA;AAIA;AAIA;AAAA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3PA;;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/ajax_modals.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/check_boxes_tree.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/data_picker.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/delayed.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/form_datepicker.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/form_filter.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/foundation-datepicker/js/locales/foundation-datepicker.lb.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/foundation_datepicker_locales.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/gallery.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/history.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/input_character_counter.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/input_hashtags.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/input_mentions.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/session_timeouter.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/vendor/foundation-datepicker.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/vendor/tribute.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/vizzs/areachart.js","webpack://decidim-sb-app/../../../.rvm/gems/ruby-3.0.2/gems/decidim-core-0.27.3/app/packs/src/decidim/vizzs/index.js"],"sourcesContent":["$(() => {\n  $(document).on(\"click\", \"a[data-open-url],button[data-open-url]\", (event) => {\n    event.preventDefault();\n    const link = event.currentTarget;\n    const $modal = $(`#${link.dataset.open}`);\n    $modal.html(\"<div class='loading-spinner'></div>\");\n    $.ajax({\n      type: \"get\",\n      url: link.dataset.openUrl,\n      success: (html) => {\n        const $html = $(html);\n        $modal.html($html);\n        $html.foundation();\n      },\n      error: function (request, status, error) {\n        $modal.html(`<h3>${status}</h3><p>${error}</p>`);\n      }\n    });\n  });\n});\n","/**\n * CheckBoxesTree component.\n */\nexport default class CheckBoxesTree {\n  constructor() {\n    this.checkboxesTree = document.querySelectorAll(\"[data-checkboxes-tree]\");\n    if (!this.checkboxesTree) {\n      return;\n    }\n\n    this.globalChecks = document.querySelectorAll(\"[data-global-checkbox] input\");\n    this.globalChecks.forEach((global) => {\n      if (global.value === \"\") {\n        global.classList.add(\"ignore-filter\")\n      }\n    });\n    this.checkGlobalCheck();\n\n    // Event listeners\n    this.checkboxesTree.forEach((input) => input.addEventListener(\"click\", (event) => this.checkTheCheckBoxes(event.target)));\n    document.querySelectorAll(\"[data-children-checkbox] input\").forEach((input) => {\n      input.addEventListener(\"change\", (event) => this.checkTheCheckParent(event.target));\n    });\n\n    // Review parent checkboxes on initial load\n    document.querySelectorAll(\"[data-children-checkbox] input\").forEach((input) => {\n      this.checkTheCheckParent(input);\n    });\n  }\n\n  /**\n   * Set checkboxes as checked if included in given values\n   * @public\n   * @param {Array} checkboxes - array of checkboxs to check\n   * @param {Array} values - values of checkboxes that should be checked\n   * @returns {Void} - Returns nothing.\n   */\n  updateChecked(checkboxes, values) {\n    checkboxes.each((index, checkbox) => {\n      if ((checkbox.value === \"\" && values.length === 1) || (checkbox.value !== \"\" && values.includes(checkbox.value))) {\n        checkbox.checked = true;\n        this.checkTheCheckBoxes(checkbox);\n        this.checkTheCheckParent(checkbox);\n      }\n    });\n  }\n\n  /**\n   * Set the container form(s) for the component, to disable ignored filters before submitting them\n   * @public\n   * @param {query} theForm - form or forms where the component will be used\n   * @returns {Void} - Returns nothing.\n   */\n  setContainerForm(theForm) {\n    theForm.on(\"submit ajax:before\", () => {\n      theForm.find(\".ignore-filters input, input.ignore-filter\").each((idx, elem) => {\n        elem.disabled = true;\n      });\n    });\n\n    theForm.on(\"ajax:send\", () => {\n      theForm.find(\".ignore-filters input, input.ignore-filter\").each((idx, elem) => {\n        elem.disabled = false;\n      });\n    });\n  }\n\n  /**\n   * Handles the click action on any checkbox.\n   * @private\n   * @param {Input} target - the input that has been checked\n   * @returns {Void} - Returns nothing.\n   */\n  checkTheCheckBoxes(target) {\n    // Quis custodiet ipsos custodes?\n    const targetChecks = target.dataset.checkboxesTree;\n    const checkStatus = target.checked;\n    const allChecks = document.querySelectorAll(`#${targetChecks} input[type='checkbox']`);\n\n    allChecks.forEach((input) => {\n      input.checked = checkStatus;\n      input.indeterminate = false;\n      input.classList.add(\"ignore-filter\");\n    });\n  }\n\n  /**\n   * Update global checkboxes state when the current selection changes\n   * @private\n   * @returns {Void} - Returns nothing.\n   */\n  checkGlobalCheck() {\n    this.globalChecks.forEach((global) => {\n      const checksContext = global.dataset.checkboxesTree;\n      const totalInputs = document.querySelectorAll(\n        `#${checksContext} input[type='checkbox']`\n      );\n      const checkedInputs = document.querySelectorAll(\n        `#${checksContext} input[type='checkbox']:checked`\n      );\n      const indeterminateInputs = Array.from(totalInputs).filter((checkbox) => checkbox.indeterminate)\n\n      if (checkedInputs.length === 0 && indeterminateInputs.length === 0) {\n        global.checked = false;\n        global.indeterminate = false;\n      } else if (checkedInputs.length === totalInputs.length && indeterminateInputs.length === 0) {\n        global.checked = true;\n        global.indeterminate = false;\n      } else {\n        global.checked = true;\n        global.indeterminate = true;\n      }\n\n      totalInputs.forEach((input) => {\n        if (global.indeterminate && !input.indeterminate) {\n          input.classList.remove(\"ignore-filter\");\n        } else {\n          input.classList.add(\"ignore-filter\");\n        }\n        const subfilters = input.parentNode.parentNode.nextElementSibling;\n        if (subfilters && subfilters.classList.contains(\"filters__subfilters\")) {\n          if (input.indeterminate) {\n            subfilters.classList.remove(\"ignore-filters\");\n          } else {\n            subfilters.classList.add(\"ignore-filters\");\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Update children checkboxes state when the current selection changes\n   * @private\n   * @param {Input} input - the checkbox to check its parent\n   * @returns {Void} - Returns nothing.\n   */\n  checkTheCheckParent(input) {\n    const checkBoxContext = $(input).parents(\".filters__subfilters\").attr(\"id\");\n    if (!checkBoxContext) {\n      this.checkGlobalCheck();\n      return;\n    }\n\n    const parentCheck = document.querySelector(\n      `[data-checkboxes-tree=${checkBoxContext}]`\n    );\n    const totalCheckSiblings = document.querySelectorAll(\n      `#${checkBoxContext} > div > [data-children-checkbox] > input, #${checkBoxContext} > [data-children-checkbox] > input`\n    );\n    const checkedSiblings = document.querySelectorAll(\n      `#${checkBoxContext} > div > [data-children-checkbox] > input:checked, #${checkBoxContext} > [data-children-checkbox] > input:checked`\n    );\n    const indeterminateSiblings = Array.from(totalCheckSiblings).filter((checkbox) => checkbox.indeterminate)\n\n    if (checkedSiblings.length === 0 && indeterminateSiblings.length === 0) {\n      parentCheck.checked = false;\n      parentCheck.indeterminate = false;\n    } else if (checkedSiblings.length === totalCheckSiblings.length && indeterminateSiblings.length === 0) {\n      parentCheck.checked = true;\n      parentCheck.indeterminate = false;\n    } else {\n      parentCheck.checked = true;\n      parentCheck.indeterminate = true;\n    }\n\n    totalCheckSiblings.forEach((sibling) => {\n      if (parent.indeterminate && !sibling.indeterminate) {\n        sibling.classList.remove(\"ignore-filter\");\n      } else {\n        sibling.classList.add(\"ignore-filter\");\n      }\n      const subfilters = sibling.parentNode.parentNode.nextElementSibling;\n      if (subfilters && subfilters.classList.contains(\"filters__subfilters\")) {\n        if (sibling.indeterminate) {\n          subfilters.classList.remove(\"ignore-filters\");\n        } else {\n          subfilters.classList.add(\"ignore-filters\");\n        }\n      }\n    });\n\n    this.checkTheCheckParent(parentCheck);\n  }\n}\n","export default class DataPicker {\n  constructor(pickers) {\n    this.modal = this._createModalContainer();\n    this.modal.appendTo($(\"body\"));\n    this.current = null;\n\n    pickers.each((_index, picker) => {\n      this.activate(picker);\n    });\n  }\n\n  activate(picker) {\n    let $picker = $(picker);\n\n    this._setCurrentPicker($picker, null);\n\n    let input = \"hidden\",\n        name = this.current.name,\n        values = this.current.values;\n\n    if (this.current.multiple) {\n      name += \"[]\";\n    }\n\n    $(\"div\", values).each((_index2, div) => {\n      let value = $(\"a\", div).data(\"picker-value\");\n      $(div).prepend($(`<input type=\"${input}\" checked name=\"${name}\" value=\"${value}\"/>`));\n    });\n\n    $picker.on(\"click\", \"a\", (event) => {\n      event.preventDefault();\n      if ($picker.hasClass(\"disabled\")) {\n        return;\n      }\n      const isMultiPicker = $picker.hasClass(\"picker-multiple\");\n\n      if ($(this._targetFromEvent(event)).hasClass(\"picker-prompt\") || !isMultiPicker) {\n        this._openPicker($picker, this._targetFromEvent(event));\n      }  else if (this._targetFromEvent(event).tagName === \"A\") {\n        this._removeValue($picker, this._targetFromEvent(event).parentNode);\n      } else {\n        this._removeValue($picker, this._targetFromEvent(event));\n      }\n    });\n\n    $picker.on(\"click\", \"input\", (event) => {\n      this._removeValue($picker, this._targetFromEvent(event));\n    });\n\n    if (this.current.autosort) {\n      this._sort();\n    }\n  }\n\n  enabled(picker, value) {\n    $(picker).toggleClass(\"disabled\", !value);\n    $(\"input\", picker).attr(\"disabled\", !value);\n  }\n\n  clear(picker) {\n    $(\".picker-values\", picker).html(\"\");\n  }\n\n  save(picker) {\n    return $(\".picker-values div:has(input:checked)\", picker).map((_index, div) => {\n      let $link = $(\"a\", div);\n      return {\n        value: $(\"input\", div).val(),\n        text: $link.text(),\n        url: $link.attr(\"href\")\n      };\n    }).get();\n  }\n\n  load(picker, savedData) {\n    this._setCurrentPicker($(picker), null);\n    $.each(savedData, (_index, data) => {\n      this._choose(data, { interactive: false, modify: false });\n    });\n    if (this.current.autosort) {\n      this._sort();\n    }\n  }\n\n  _createModalContainer() {\n    // Add a header because we are referencing the title element with\n    // `aria-labelledby`. If the title doesn't exist, the \"labelled by\"\n    // reference is incorrect.\n    const headerHtml = '<div class=\"scope-picker picker-header\"><h6 id=\"data_picker-title\" class=\"h2\"></h6></div>';\n\n    return $(`<div class=\"small reveal\" id=\"data_picker-modal\" aria-hidden=\"true\" aria-live=\"assertive\" role=\"dialog\" aria-labelledby=\"data_picker-title\" data-reveal data-multiple-opened=\"true\">\n             <div class=\"data_picker-modal-content\">${headerHtml}</div>\n             <button class=\"close-button\" data-close type=\"button\" data-reveal-id=\"data_picker-modal\"><span aria-hidden=\"true\">&times;</span></button>\n             </div>`);\n  }\n\n  _openPicker($picker, target) {\n    this._setCurrentPicker($picker, target);\n    this._load($(\"a\", target).attr(\"href\"));\n  }\n\n  _setCurrentPicker($picker, target) {\n    let $target = false;\n    if (target && !$(target).hasClass(\"picker-prompt\")) {\n      $target = $(target);\n    }\n\n    this.current = {\n      picker: $picker,\n      name: $picker.data(\"picker-name\"),\n      values: $picker.find(\".picker-values\"),\n      multiple: $picker.hasClass(\"picker-multiple\"),\n      autosort: $picker.hasClass(\"picker-multiple\") && $picker.hasClass(\"picker-autosort\"),\n      target: $target\n    };\n  }\n\n  _load(url) {\n    $.ajax(url).done((resp) => {\n      let modalContent = $(\".data_picker-modal-content\", this.modal);\n      modalContent.html(resp);\n      this._handleLinks(modalContent);\n      this._handleCheckboxes(modalContent);\n      this.modal.foundation(\"open\");\n    });\n  }\n\n  _handleLinks(content) {\n    $(\"a\", content).each((_index, link) => {\n      let $link = $(link);\n      $link.click((event) => {\n        event.preventDefault();\n        if ($link.data(\"close\") || $link.data(\"close\") === \"\") {\n          return;\n        }\n\n        let chooseUrl = $link.attr(\"href\");\n        if (chooseUrl) {\n          if (typeof $link.data(\"picker-choose\") === \"undefined\") {\n            this._load(chooseUrl);\n          } else {\n            this._choose(\n              { url: chooseUrl, value: $link.data(\"picker-value\") || \"\", text: $link.data(\"picker-text\") || \"\" }\n            );\n          }\n        }\n      });\n    });\n  }\n\n  _handleCheckboxes(content) {\n    $(\"input[type=checkbox][data-picker-choose]\", content).each((_index, checkbox) => {\n      const $checkbox = $(checkbox);\n      checkbox.checked = this._targetFromValue($checkbox.val()) !== null;\n    }).change((event) => {\n      const $checkbox = $(event.target);\n      if (event.target.checked) {\n        this._choose(\n          { url: $checkbox.data(\"picker-url\"), value: $checkbox.val() || \"\", text: $checkbox.data(\"picker-text\") || \"\" },\n          { modify: false, close: false }\n        );\n      }\n      else {\n        this._removeValue(this.current.picker, this._targetFromValue($checkbox.val()));\n      }\n    });\n  }\n\n  _choose(data, opts = {}) {\n    const options = Object.assign({ interactive: true, modify: true, close: true }, opts);\n\n    let dataText = this._escape(data.text);\n    let choosenOption = null;\n\n    if (!this.current.target && options.modify) {\n      this.current.target = this._targetFromValue(data.value);\n    }\n\n    // Add or update value appearance\n    if (this.current.target && options.modify) {\n      let link = $(\"a\", this.current.target);\n      link.data(\"picker-value\", data.value);\n      link.attr(\"href\", data.url);\n      choosenOption = this.current.target;\n      if (this.current.multiple) {\n        link.html(`&times;&nbsp;${dataText}`);\n      } else {\n        link.text(dataText);\n      }\n    } else {\n      let input = \"hidden\",\n          name = this.current.name;\n\n      if (this.current.multiple) {\n        name += \"[]\";\n        choosenOption = $(`<div><input type=\"${input}\" checked name=\"${name}\"/><a href=\"${data.url}\" data-picker-value=\"${data.value}\" class=\"label primary\">&times;&nbsp;${dataText}</a></div>`);\n      } else {\n        choosenOption = $(`<div><input type=\"${input}\" checked name=\"${name}\"/><a href=\"${data.url}\" data-picker-value=\"${data.value}\">${dataText}</a></div>`);\n      }\n      choosenOption.appendTo(this.current.values);\n\n      if (!this.current.target) {\n        this.current.target = choosenOption;\n      }\n    }\n\n    // Set input value\n    let $input = $(\"input\", choosenOption);\n    $input.attr(\"value\", data.value);\n\n    if (this.current.autosort) {\n      this._sort();\n    }\n\n    if (options.interactive) {\n      // Raise changed event\n      $input.trigger(\"change\");\n      this._removeErrors();\n\n      if (options.close) {\n        this._close();\n      }\n    }\n  }\n\n  _sort() {\n    const values = $(\".picker-values\", this.current.picker);\n    values.children().sort((item1, item2) => $(\"input\", item1).val() - $(\"input\", item2).val()).detach().appendTo(values);\n  }\n\n  _close() {\n    // Close modal and unset target element\n    this.modal.foundation(\"close\");\n    this.current.target = null;\n  }\n\n  _removeValue($picker, target) {\n    if (target) {\n      this._setCurrentPicker($picker, target);\n      // Fadeout (with time) doesn't work in system tests\n      let fadeoutTime = 500;\n      if (navigator && navigator.webdriver) {\n        fadeoutTime = 0;\n      }\n      this.current.target.fadeOut(fadeoutTime, () => {\n        this.current.target.remove();\n        this.current.target = null;\n      });\n    }\n  }\n\n  _removeErrors() {\n    let parent = this.current.picker.parent();\n    $(\".is-invalid-input\", parent).removeClass(\"is-invalid-input\");\n    $(\".is-invalid-label\", parent).removeClass(\"is-invalid-label\");\n    $(\".form-error.is-visible\", parent).removeClass(\"is-visible\");\n  }\n\n  _escape(str) {\n    return str.replace(/[\\u00A0-\\u9999<>&]/gim, function (char) {\n      return `&#${char.charCodeAt(0)};`;\n    });\n  }\n\n  _targetFromEvent(event) {\n    return event.target.parentNode;\n  }\n\n  _targetFromValue(value) {\n    return $(`[data-picker-value=${value}]`, this.current.picker).parent()[0] || null;\n  }\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * @param {Object} context - the context for the called function.\n * @param {Function} func - the function to be executed.\n * @param {int} wait - number of milliseconds to wait before executing the function.\n * @private\n * @returns {Void} - Returns nothing.\n */\nexport default function delayed(context, func, wait) {\n  let timeout = null;\n\n  return function(...args) {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      timeout = null;\n      Reflect.apply(func, context, args);\n    }, wait);\n  }\n}\n","/* eslint-disable require-jsdoc */\n\nexport default function formDatePicker() {\n  $(\"[data-datepicker]\").each((_index, node) => {\n    const language = $(\"html\").attr(\"lang\") || \"en\";\n    const initialDate = $(node).data(\"startdate\") || \"\";\n    const pickTime = $(node).data(\"timepicker\") === \"\";\n    const languageProps = $(node).fdatepicker.dates[language] && $(node).fdatepicker.dates[language].format;\n    let format = $(node).data(\"date-format\") || languageProps || \"mm/dd/yyyy\";\n\n    $(node).fdatepicker({\n      format,\n      initialDate,\n      language,\n      pickTime,\n      disableDblClickSelection: true,\n      leftArrow: \"<<\",\n      rightArrow: \">>\"\n    });\n  });\n}\n","/* eslint-disable no-div-regex, no-useless-escape, no-param-reassign, id-length */\n/* eslint max-lines: [\"error\", {\"max\": 350, \"skipBlankLines\": true}] */\n\n/**\n * A plain Javascript component that handles the form filter.\n * @class\n * @augments Component\n */\n\nimport delayed from \"src/decidim/delayed\"\nimport CheckBoxesTree from \"src/decidim/check_boxes_tree\"\nimport { registerCallback, unregisterCallback, pushState, replaceState, state } from \"src/decidim/history\"\nimport DataPicker from \"src/decidim/data_picker\"\n\nexport default class FormFilterComponent {\n  constructor($form) {\n    this.$form = $form;\n    this.id = this.$form.attr(\"id\") || this._getUID();\n    this.mounted = false;\n    this.changeEvents = true;\n    this.theCheckBoxesTree = new CheckBoxesTree();\n    this.theDataPicker = window.theDataPicker || new DataPicker($(\".data-picker\"));\n\n    this._updateInitialState();\n    this._onFormChange = delayed(this, this._onFormChange.bind(this));\n    this._onFormSubmit = delayed(this, this._onFormSubmit.bind(this));\n    this._onPopState = this._onPopState.bind(this);\n\n    if (window.Decidim.PopStateHandler) {\n      this.popStateSubmiter = false;\n    } else {\n      this.popStateSubmiter = true;\n      window.Decidim.PopStateHandler = this.id;\n    }\n  }\n\n  /**\n   * Handles the logic for unmounting the component\n   * @public\n   * @returns {Void} - Returns nothing\n   */\n  unmountComponent() {\n    if (this.mounted) {\n      this.mounted = false;\n      this.$form.off(\"change\", \"input, select\", this._onFormChange);\n      this.$form.off(\"submit\", this._onFormSubmit);\n\n      unregisterCallback(`filters-${this.id}`)\n    }\n  }\n\n  /**\n   * Handles the logic for mounting the component\n   * @public\n   * @returns {Void} - Returns nothing\n   */\n  mountComponent() {\n    if (this.$form.length > 0 && !this.mounted) {\n      this.mounted = true;\n      let queue = 0;\n\n      let contentContainer = $(this.$form.closest(\".filters\").parent().find(\".skip\").attr(\"href\"));\n      if (contentContainer.length === 0 && this.$form.data(\"remoteFill\")) {\n        contentContainer = this.$form.data(\"remoteFill\");\n      }\n      this.$form.on(\"change\", \"input:not([data-disable-dynamic-change]), select:not([data-disable-dynamic-change])\", this._onFormChange);\n      this.$form.on(\"submit\", this._onFormSubmit);\n\n      this.currentFormRequest = null;\n      this.$form.on(\"ajax:beforeSend\", (e) => {\n        if (this.currentFormRequest) {\n          this.currentFormRequest.abort();\n        }\n        this.currentFormRequest = e.originalEvent.detail[0];\n        queue += 1;\n        if (queue > 0 && contentContainer.length > 0 && !contentContainer.hasClass(\"spinner-container\")) {\n          contentContainer.addClass(\"spinner-container\");\n        }\n      });\n\n      this.$form.on(\"ajax:success\", () => {\n        queue -= 1;\n        if (queue <= 0 && contentContainer.length > 0) {\n          contentContainer.removeClass(\"spinner-container\");\n        }\n      });\n\n      this.$form.on(\"ajax:error\", () => {\n        queue -= 1;\n        if (queue <= 0 && contentContainer.length > 0) {\n          contentContainer.removeClass(\"spinner-container\");\n        }\n        this.$form.find(\".spinner-container\").addClass(\"hide\");\n      });\n\n      this.theCheckBoxesTree.setContainerForm(this.$form);\n\n      registerCallback(`filters-${this.id}`, (currentState) => {\n        this._onPopState(currentState);\n      });\n    }\n  }\n\n  /**\n   * Sets path in the browser history with the initial filters state, to allow to restoring it when using browser history.\n   * @private\n   * @returns {Void} - Returns nothing.\n   */\n  _updateInitialState() {\n    const [initialPath, initialState] = this._currentStateAndPath();\n    initialState._path = initialPath\n    replaceState(null, initialState);\n  }\n\n  /**\n   * Finds the current location.\n   * @param {boolean} withHost - include the host part in the returned location\n   * @private\n   * @returns {String} - Returns the current location.\n   */\n  _getLocation(withHost = true) {\n    const currentState = state();\n    let path = \"\";\n\n    if (currentState && currentState._path) {\n      path = currentState._path;\n    } else {\n      path = window.location.pathname + window.location.search + window.location.hash;\n    }\n\n    if (withHost) {\n      return window.location.origin + path;\n    }\n    return path;\n  }\n\n  /**\n   * Parse current location and get filter values.\n   * @private\n   * @returns {Object} - An object where a key correspond to a filter field\n   *                     and the value is the current value for the filter.\n   */\n  _parseLocationFilterValues() {\n    // Every location param is constructed like this: filter[key]=value\n    let regexpResult = decodeURIComponent(this._getLocation()).match(/filter\\[([^\\]]*)\\](?:\\[\\])?=([^&]*)/g);\n\n    // The RegExp g flag returns null or an array of coincidences. It doesn't return the match groups\n    if (regexpResult) {\n      const filterParams = regexpResult.reduce((acc, result) => {\n        const [, key, array, value] = result.match(/filter\\[([^\\]]*)\\](\\[\\])?=([^&]*)/);\n        if (array) {\n          if (!acc[key]) {\n            acc[key] = [];\n          }\n          acc[key].push(value);\n        } else {\n          acc[key] = value;\n        }\n        return acc;\n      }, {});\n\n      return filterParams;\n    }\n\n    return null;\n  }\n\n  /**\n   * Parse current location and get the current order.\n   * @private\n   * @returns {string} - The current order\n   */\n  _parseLocationOrderValue() {\n    const url = this._getLocation();\n    const match = url.match(/order=([^&]*)/);\n    const $orderMenu = this.$form.find(\".order-by .menu\");\n    let order = $orderMenu.find(\".menu a:first\").data(\"order\");\n\n    if (match) {\n      order = match[1];\n    }\n\n    return order;\n  }\n\n  /**\n   * Clears the form to start with a clean state.\n   * @private\n   * @returns {Void} - Returns nothing.\n   */\n  _clearForm() {\n    this.$form.find(\"input[type=checkbox]\").each((index, element) => {\n      element.checked = element.indeterminate = false;\n    });\n    this.$form.find(\"input[type=radio]\").attr(\"checked\", false);\n    this.$form.find(\".data-picker\").each((_index, picker) => {\n      this.theDataPicker.clear(picker);\n    });\n\n    // This ensure the form is reset in a valid state where a fieldset of\n    // radio buttons has the first selected.\n    this.$form.find(\"fieldset input[type=radio]:first\").each(function () {\n      // I need the this to iterate a jQuery collection\n      $(this)[0].checked = true; // eslint-disable-line no-invalid-this\n    });\n  }\n\n  /**\n   * Handles the logic when going back to a previous state in the filter form.\n   * @private\n   * @param {Object} currentState - state stored along with location URL\n   * @returns {Void} - Returns nothing.\n   */\n  _onPopState(currentState) {\n    this.changeEvents = false;\n    this._clearForm();\n\n    const filterParams = this._parseLocationFilterValues();\n    const currentOrder = this._parseLocationOrderValue();\n\n    this.$form.find(\"input.order_filter\").val(currentOrder);\n\n    if (filterParams) {\n      const fieldIds = Object.keys(filterParams);\n\n      // Iterate the filter params and set the correct form values\n      fieldIds.forEach((fieldName) => {\n        let value = filterParams[fieldName];\n\n        if (Array.isArray(value)) {\n          let checkboxes = this.$form.find(`input[type=checkbox][name=\"filter[${fieldName}][]\"]`);\n          this.theCheckBoxesTree.updateChecked(checkboxes, value);\n        } else {\n          this.$form.find(`*[name=\"filter[${fieldName}]\"]`).each((index, element) => {\n            switch (element.type) {\n            case \"hidden\":\n              break;\n            case \"radio\":\n            case \"checkbox\":\n              element.checked = value === element.value;\n              break;\n            default:\n              element.value = value;\n            }\n          });\n        }\n      });\n    }\n\n    // Retrieves picker information for selected values (value, text and link) from the state object\n    $(\".data-picker\", this.$form).each((_index, picker) => {\n      let pickerState = currentState[picker.id];\n      if (pickerState) {\n        this.theDataPicker.load(picker, pickerState);\n      }\n    })\n\n    // Only one instance should submit the form on browser history navigation\n    if (this.popStateSubmiter) {\n      Rails.fire(this.$form[0], \"submit\", { from: \"pop\" });\n    }\n\n    this.changeEvents = true;\n  }\n\n  /**\n   * Handles the logic to decide whether the form should be submitted or not\n   * after a form change event. The form is only submitted when changes have\n   * occurred.\n   * @private\n   * @returns {Void} - Returns nothing.\n   */\n  _onFormChange() {\n    if (!this.changeEvents) {\n      return;\n    }\n\n    const [newPath] = this._currentStateAndPath();\n    const path = this._getLocation(false);\n\n    if (newPath === path) {\n      return;\n    }\n\n    Rails.fire(this.$form[0], \"submit\");\n  }\n\n  /**\n   * Saves the current state of the search on form submit to update the search\n   * parameters to the URL and store the picker states.\n   * @private\n   * @param {jQuery.Event} ev The event that caused the form to submit.\n   * @returns {Void} - Returns nothing.\n   */\n  _onFormSubmit(ev) {\n    const eventDetail = ev.originalEvent.detail;\n    if (eventDetail && eventDetail.from === \"pop\") {\n      return;\n    }\n\n    const [newPath, newState] = this._currentStateAndPath();\n\n    pushState(newPath, newState);\n    this._saveFilters(newPath);\n  }\n\n  /**\n   * Calculates the path and the state associated to the filters inputs.\n   * @private\n   * @returns {Array} - Returns an array with the path and the state for the current filters state.\n   */\n  _currentStateAndPath() {\n    const formAction = this.$form.attr(\"action\");\n    const params = this.$form.find(\":not(.ignore-filters)\").find(\"select:not(.ignore-filter), input:not(.ignore-filter)\").serialize();\n\n    let path = \"\";\n    let currentState = {};\n\n    if (formAction.indexOf(\"?\") < 0) {\n      path = `${formAction}?${params}`;\n    } else {\n      path = `${formAction}&${params}`;\n    }\n\n    // Stores picker information for selected values (value, text and link) in the currentState object\n    $(\".data-picker\", this.$form).each((_index, picker) => {\n      currentState[picker.id] = this.theDataPicker.save(picker);\n    })\n\n    return [path, currentState];\n  }\n\n  /**\n   * Generates a unique identifier for the form.\n   * @private\n   * @returns {String} - Returns a unique identifier\n   */\n  _getUID() {\n    return `filter-form-${new Date().getUTCMilliseconds()}-${Math.floor(Math.random() * 10000000)}`;\n  }\n\n  /**\n   * Saves the changed filters on sessionStorage API.\n   * @private\n   * @param {string} pathWithQueryStrings - path with all the query strings for filter. To be used with backToListLink().\n   * @returns {Void} - Returns nothing.\n   */\n  _saveFilters(pathWithQueryStrings) {\n    if (!window.sessionStorage) {\n      return;\n    }\n\n    const pathName = this.$form.attr(\"action\");\n    sessionStorage.setItem(\"filteredParams\", JSON.stringify({[pathName]: pathWithQueryStrings}));\n  }\n\n}\n","/**\n * Luxembourgish localisation\n */\n;(function(jQuery) {\n  jQuery.fn.fdatepicker.dates.lb = {\n    days: [\"Sonndeg\", \"Méindeg\", \"Dënschdeg\", \"Mëttwoch\", \"Donneschdeg\", \"Freideg\", \"Samschdeg\", \"Sonndeg\"],\n    daysShort: [\"Son\", \"Méi\", \"Dën\", \"Mët\", \"Don\", \"Fre\", \"Sam\", \"Son\"],\n    daysMin: [\"So\", \"Mé\", \"Dë\", \"Më\", \"Do\", \"Fr\", \"Sa\", \"So\"],\n    months: [\"Januar\", \"Februar\", \"Mäerz\", \"Abrëll\", \"Mee\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    monthsShort: [\"Jan\", \"Febr\", \"Mrz\", \"Abr\", \"Mee\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Okt\", \"Nov\", \"Dez\"],\n    today: \"Haut\"\n  };\n}(jQuery));\n","import \"foundation-datepicker/js/locales/foundation-datepicker.ar\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.az\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.bg\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.bs\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.ca\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.cs\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.cy\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.da\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.de\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.el\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.en-GB\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.eo\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.es\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.et\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.eu\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.fa\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.fi\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.fo\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.fr-CH\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.fr\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.gl\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.he\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.hr\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.hu\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.hy\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.id\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.is\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.it-CH\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.it\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.ja\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.ka\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.kh\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.kk\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.ko\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.kr\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.lv\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.me\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.mk\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.mn\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.ms\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.nb\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.nl-BE\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.nl\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.no\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.pl\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.pt-br\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.pt\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.ro\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.rs\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.rs-latin\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.ru\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.sk\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.sl\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.sq\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.sr\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.sr-latin\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.sv\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.sw\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.th\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.tr\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.uk\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.vi\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.zh-CN\"\nimport \"foundation-datepicker/js/locales/foundation-datepicker.zh-TW\"\n\nimport \"src/decidim/foundation-datepicker/js/locales/foundation-datepicker.lb\"\n\n","$(() => {\n  $(\".gallery__container\").on(\"closed.zf.callout\", (event) => {\n    $(event.target).remove();\n  });\n});\n","/* eslint-disable require-jsdoc */\n/* eslint-disable no-prototype-builtins, no-restricted-syntax, no-param-reassign */\n\nlet callbacks = {};\n\nexport default function registerCallback(callbackId, callback) {\n  callbacks[callbackId] = callback;\n}\n\nconst unregisterCallback = (callbackId) => {\n  callbacks[callbackId] = null;\n}\n\nconst pushState = (url, state = null) => {\n  if (window.history) {\n    window.history.pushState(state, null, url);\n  }\n};\n\nconst replaceState = (url, state = null) => {\n  if (window.history) {\n    window.history.replaceState(state, null,  url);\n  }\n};\n\nconst state = () => {\n  if (window.history) {\n    return window.history.state;\n  }\n  return null;\n};\n\nwindow.onpopstate = (event) => {\n  // Ensure the event is caused by user action\n  if (event.isTrusted) {\n    for (let callbackId in callbacks) {\n      if (callbacks.hasOwnProperty(callbackId)) {\n        callbacks[callbackId](event.state);\n      }\n    }\n  }\n}\n\nexport { registerCallback, unregisterCallback, pushState, replaceState, state };\n","/* eslint max-lines: [\"error\", {\"max\": 350, \"skipBlankLines\": true}] */\n\nconst COUNT_KEY = \"%count%\";\n// How often SR announces the message in relation to maximum characters. E.g.\n// if max characters is 1000, screen reader announces the remaining characters\n// every 100 (= 0.1 * 1000) characters. This will be \"floored\" to the closest\n// 100 if the maximum characters > 100. E.g. if max characters is 5500, the\n// threshold is 500 (= Math.floor(550 / 100) * 100). With 100 or less\n// characters, this ratio is omitted and the announce threshold is always set to\n// 10.\nconst SR_ANNOUNCE_THRESHOLD_RATIO = 0.1;\n// The number of characters left after which every keystroke will be announced.\nconst SR_ANNOUNCE_EVERY_THRESHOLD = 10;\nconst DEFAULT_MESSAGES = {\n  charactersAtLeast: {\n    one: `at least ${COUNT_KEY} character`,\n    other: `at least ${COUNT_KEY} characters`\n  },\n  charactersLeft: {\n    one: `${COUNT_KEY} character left`,\n    other: `${COUNT_KEY} characters left`\n  }\n};\nlet MESSAGES = DEFAULT_MESSAGES;\n\nexport default class InputCharacterCounter {\n  static configureMessages(messages) {\n    MESSAGES = $.extend(DEFAULT_MESSAGES, messages);\n  }\n\n  constructor(input) {\n    this.$input = input;\n    this.$target = $(this.$input.data(\"remaining-characters\"));\n    this.minCharacters = parseInt(this.$input.attr(\"minlength\"), 10);\n    this.maxCharacters = parseInt(this.$input.attr(\"maxlength\"), 10);\n    this.describeByCounter = typeof this.$input.attr(\"aria-describedby\") === \"undefined\";\n\n    // Define the closest length for the input \"gaps\" defined by the threshold.\n    if (this.maxCharacters > 10) {\n      if (this.maxCharacters > 100) {\n        this.announceThreshold = Math.floor(this.maxCharacters * SR_ANNOUNCE_THRESHOLD_RATIO);\n      } else {\n        this.announceThreshold = 10;\n      }\n\n      // The number of characters left after which every keystroke will be announced.\n      this.announceEveryThreshold = SR_ANNOUNCE_EVERY_THRESHOLD;\n    } else {\n      this.announceThreshold = 1;\n      this.announceEveryThreshold = 1;\n    }\n\n    let targetId = this.$target.attr(\"id\");\n    if (typeof targetId === \"undefined\") {\n      if (this.$input.attr(\"id\") && this.$input.attr(\"id\").length > 0) {\n        targetId = `${this.$input.attr(\"id\")}_characters`;\n      } else {\n        targetId = `characters_${Math.random().toString(36).substr(2, 9)}`;\n      }\n    }\n\n    if (this.$target.length > 0) {\n      this.$target.attr(\"id\", targetId)\n    } else {\n      this.$target = $(`<span id=\"${targetId}\" class=\"form-input-extra-before\" />`)\n\n      // If input is a hidden for WYSIWYG editor add it at the end\n      if (this.$input.parent().is(\".editor\")) {\n        this.$input.parent().after(this.$target);\n      }\n      // Prefix and suffix columns are wrapped in columns, so put the\n      // character counter before that.\n      else if (\n        this.$input.parent().is(\".columns\") &&\n        this.$input.parent().parent().is(\".row\")\n      ) {\n        this.$input.parent().parent().after(this.$target);\n      } else {\n        this.$input.after(this.$target);\n      }\n    }\n\n    if (this.$target.length > 0 && (this.maxCharacters > 0 || this.minCharacters > 0)) {\n      // Create the screen reader target element. We don't want to constantly\n      // announce every change to screen reader, only occasionally.\n      this.$srTarget = $(\n        `<span role=\"status\" id=\"${targetId}_sr\" class=\"show-for-sr remaining-character-count-sr\" />`\n      );\n      this.$target.before(this.$srTarget);\n      this.$target.attr(\"aria-hidden\", \"true\");\n\n      this.$userInput = this.$input;\n\n      // In WYSIWYG editors (Quill) we need to find the active editor from the\n      // DOM node. Quill has the experimental \"find\" method that should work\n      // fine in this case\n      if (Quill && this.$input.parent().is(\".editor\")) {\n        // Wait until the next javascript loop so Quill editors are created\n        setTimeout(() => {\n          this.editor = Quill.find(this.$input.siblings(\".editor-container\")[0]);\n          this.$userInput = $(this.editor.root);\n          this.initialize();\n        });\n      } else {\n        this.initialize();\n      }\n    }\n  }\n\n  initialize() {\n    this.updateInputLength();\n    this.previousInputLength = this.inputLength;\n\n    this.bindEvents();\n    this.setDescribedBy(true);\n  }\n\n  setDescribedBy(active) {\n    if (!this.describeByCounter) {\n      return;\n    }\n\n    if (active) {\n      this.$userInput.attr(\"aria-describedby\", this.$srTarget.attr(\"id\"));\n    } else {\n      this.$userInput.removeAttr(\"aria-describedby\");\n    }\n  }\n\n  bindEvents() {\n    if (this.editor) {\n      this.editor.on(\"text-change\", () => {\n        this.handleInput();\n      });\n    } else {\n      this.$userInput.on(\"input\", () => {\n        this.handleInput();\n      });\n    }\n\n    this.$userInput.on(\"keyup\", () => {\n      this.updateStatus();\n    });\n    this.$userInput.on(\"focus\", () => {\n      this.updateScreenReaderStatus();\n    });\n    this.$userInput.on(\"blur\", () => {\n      this.updateScreenReaderStatus();\n      this.setDescribedBy(true);\n    });\n    if (this.$userInput.get(0) !== null) {\n      this.$userInput.get(0).addEventListener(\"emoji.added\", () => {\n        this.updateStatus();\n      });\n    }\n    this.updateStatus();\n    this.updateScreenReaderStatus();\n  }\n\n  getInputLength() {\n    return this.inputLength;\n  }\n\n  updateInputLength() {\n    this.previousInputLength = this.inputLength;\n    if (this.editor) {\n      this.inputLength = this.editor.getLength();\n    } else {\n      this.inputLength = this.$input.val().length;\n    }\n  }\n\n  handleInput() {\n    this.updateInputLength();\n    this.checkScreenReaderUpdate();\n    // If the input is \"described by\" the character counter, some screen\n    // readers (NVDA) announce the status twice when it is updated. By\n    // removing the aria-describedby attribute while the user is typing makes\n    // the screen reader announce the status only once.\n    this.setDescribedBy(false);\n  }\n\n  /**\n   * This compares the current inputLength to the previous value and decides\n   * whether the user is currently adding or deleting characters from the view.\n   *\n   * @returns {String} The input direction either \"ins\" for insert or \"del\" for\n   *   delete.\n   */\n  getInputDirection() {\n    if (this.inputLength < this.previousInputLength) {\n      return \"del\";\n    }\n\n    return \"ins\";\n  }\n\n  getScreenReaderLength() {\n    const currentLength = this.getInputLength();\n    if (this.maxCharacters < 10) {\n      return currentLength;\n    } else if (this.maxCharacters - currentLength <= this.announceEveryThreshold) {\n      return currentLength;\n    }\n\n    const srLength = currentLength - currentLength % this.announceThreshold;\n\n    // Prevent the screen reader telling too many characters left if the user\n    // deletes a characters. This can cause confusing experience e.g. when the\n    // user is closing the maximum amount of characters, so if the previous\n    // announcement was \"10 characters left\" and the user removes one character,\n    // the screen reader would announce \"100 characters left\" next time (when\n    // they actually have only 11 characters left). Similar when they are\n    // deleting a character at 900 characters, the screen reader would announce\n    // \"1000 characters left\" even when they only have 901 characters left.\n    if (this.getInputDirection() === \"del\") {\n      // The first branch makes sure that if the SR length matches the actual\n      // length, it will be always announced.\n      if (srLength === currentLength) {\n        return srLength;\n      // The second branch checks that if we are at the final threshold, we\n      // should not announce \"0 characters left\" when the user deletes more than\n      // the \"announce after every stroke\" limit (this.announceEveryThreshold).\n      } else if (this.maxCharacters - srLength === this.announceThreshold) {\n        return this.announcedAt || currentLength;\n      // The third branch checks that when deleting characters, we should\n      // announce the next threshold to get accurate annoucement. E.g. when we\n      // have 750 characters left and the user deletes 100 characters at once,\n      // we should announce \"700 characters left\" after that deletion.\n      } else if (srLength < currentLength) {\n        return srLength + this.announceThreshold;\n      }\n    // This fixes an issue in the following situation:\n    // 1. 750 characters left\n    // 2. Delete 100 characters in a row\n    // 3. SR: \"800 characters left\" (actual 850)\n    // 4. Type one additional character\n    // 5. Without this, SR would announce \"900 characters left\" = confusing\n    } else if (srLength < this.announcedAt) {\n      return this.announcedAt;\n    }\n\n    return srLength;\n  }\n\n  getMessages(currentLength = null) {\n    const showMessages = [];\n    let inputLength = currentLength;\n    if (inputLength === null) {\n      inputLength = this.getInputLength()\n    }\n\n    if (this.minCharacters > 0) {\n      let message = MESSAGES.charactersAtLeast.other;\n      if (this.minCharacters === 1) {\n        message = MESSAGES.charactersAtLeast.one;\n      }\n      showMessages.push(message.replace(COUNT_KEY, this.minCharacters));\n    }\n\n    if (this.maxCharacters > 0) {\n      const remaining = this.maxCharacters - inputLength;\n      let message = MESSAGES.charactersLeft.other;\n      if (remaining === 1) {\n        message = MESSAGES.charactersLeft.one;\n      }\n      this.$input[0].dispatchEvent(\n        new CustomEvent(\"characterCounter\", {detail: {remaining: remaining}})\n      );\n      showMessages.push(message.replace(COUNT_KEY, remaining));\n    }\n\n    return showMessages;\n  }\n\n  updateStatus() {\n    this.$target.text(this.getMessages().join(\", \"));\n  }\n\n  checkScreenReaderUpdate() {\n    if (this.maxCharacters < 1) {\n      return;\n    }\n\n    const currentLength = this.getScreenReaderLength();\n    if (currentLength === this.announcedAt) {\n      return;\n    }\n\n    this.announcedAt = currentLength;\n    this.updateScreenReaderStatus(currentLength);\n  }\n\n  updateScreenReaderStatus(currentLength = null) {\n    this.$srTarget.text(this.getMessages(currentLength).join(\", \"));\n  }\n}\n\nconst createCharacterCounter = ($input) => {\n  if (typeof $input !== \"undefined\" && $input.length) {\n    $input.data(\"remaining-characters-counter\", new InputCharacterCounter($input));\n  }\n}\n\n$(() => {\n  $(\"input[type='text'], textarea, .editor>input[type='hidden']\").each((_i, elem) => {\n    const $input = $(elem);\n\n    if (!$input.is(\"[minlength]\") && !$input.is(\"[maxlength]\")) {\n      return;\n    }\n\n    createCharacterCounter($input);\n  });\n});\n\nexport {InputCharacterCounter, createCharacterCounter};\n","/* eslint no-unused-vars: 0 */\nimport Tribute from \"src/decidim/vendor/tribute\"\n\n$(() => {\n  const $hashtagContainer = $(\".js-hashtags\");\n  const nodatafound = $hashtagContainer.attr(\"data-noresults\");\n\n  let noMatchTemplate = null\n  if (nodatafound) {\n    noMatchTemplate = () => `<li>${nodatafound}</li>`;\n  }\n\n  // Listener for the event triggered by quilljs\n  let cursor = \"\";\n  $hashtagContainer.on(\"quill-position\", function(event) {\n    if (event.detail !== null) {\n      // When replacing the text content after selecting a hashtag, we only need\n      // to know the hashtag's start position as that is the point which we want\n      // to replace.\n      let quill = event.target.__quill;\n      if (quill.getText(event.detail.index - 1, 1) === \"#\") {\n        cursor = event.detail.index;\n      }\n    }\n  });\n\n  /* eslint no-use-before-define: [\"error\", { \"variables\": false }]*/\n  let remoteSearch = function(text, cb) {\n    $.post(\"/api\", {query: `{hashtags(name:\"${text}\") {name}}`}).\n\n      then((response) => {\n        let data = response.data.hashtags || {};\n        cb(data)\n      }).fail(function() {\n        cb([])\n      }).always(() => {\n      // This function runs Tribute every single time you type something\n      // So we must evalute DOM properties after each\n        const $parent = $(tribute.current.element).parent()\n        $parent.addClass(\"is-active\")\n\n        // We need to move the container to the wrapper selected\n        const $tribute = $parent.find(\".tribute-container\");\n        // Remove the inline styles, relative to absolute positioning\n        $tribute.removeAttr(\"style\");\n      })\n  };\n\n  // tribute.js docs - http://github.com/zurb/tribute\n  /* global Tribute*/\n  let tribute = new Tribute({\n    trigger: \"#\",\n    values: function (text, cb) {\n      remoteSearch(text, (hashtags) => cb(hashtags));\n    },\n    positionMenu: true,\n    menuContainer: null,\n    fillAttr: \"name\",\n    noMatchTemplate: noMatchTemplate,\n    lookup: (item) => item.name,\n    selectTemplate: function(item) {\n      if (typeof item === \"undefined\") {\n        return null;\n      }\n      if (this.range.isContentEditable(this.current.element)) {\n        // Check quill.js\n        if ($(this.current.element).hasClass(\"ql-editor\")) {\n          let editorContainer = $(this.current.element).parent().get(0);\n          let quill = editorContainer.__quill;\n          quill.insertText(cursor - 1, `#${item.original.name} `, Quill.sources.API);\n          // cursor position + hashtag length + \"#\" sign + space\n          let position = cursor + item.original.name.length + 2;\n\n          let next = 0;\n          if (quill.getLength() > position) {\n            next = position\n          } else {\n            next = quill.getLength() - 1\n          }\n          // Workaround https://github.com/quilljs/quill/issues/731\n          setTimeout(function () {\n            quill.setSelection(next, 0);\n          }, 500);\n\n          return \"\"\n        }\n        return `<span contenteditable=\"false\">#${item.original.name}</span>`;\n      }\n      return `#${item.original.name}`;\n    },\n    menuItemTemplate: function(item) {\n      let tpl = `<strong>${item.original.name}</strong>`;\n      return tpl;\n    }\n  });\n\n  // Tribute needs to be attached to the `.ql-editor` element as said at:\n  // https://github.com/quilljs/quill/issues/1816\n  //\n  // For this reason we need to wait a bit for quill to initialize itself.\n  setTimeout(function() {\n    $hashtagContainer.each((index, item) => {\n      let $qlEditor = $(\".ql-editor\", item);\n      if ($qlEditor.length > 0) {\n        tribute.attach($qlEditor);\n      } else {\n        tribute.attach(item);\n      }\n    });\n  }, 1000);\n\n  // DOM manipulation\n  $hashtagContainer.on(\"focusin\", (event) => {\n    // Set the parent container relative to the current element\n\n    tribute.menuContainer = event.target.parentNode;\n  });\n  $hashtagContainer.on(\"focusout\", (event) => {\n    let $parent = $(event.target).parent();\n\n    if ($parent.hasClass(\"is-active\")) {\n      $parent.removeClass(\"is-active\");\n    }\n  });\n  $hashtagContainer.on(\"input\", (event) => {\n    let $parent = $(event.target).parent();\n\n    if (tribute.isActive) {\n      // We need to move the container to the wrapper selected\n      let $tribute = $(\".tribute-container\");\n      $tribute.appendTo($parent);\n      // Parent adaptation\n      $parent.addClass(\"is-active\");\n    } else {\n      $parent.removeClass(\"is-active\");\n    }\n  });\n});\n","/* eslint no-unused-vars: 0 */\nimport Tribute from \"src/decidim/vendor/tribute\"\n\n$(() => {\n  const $mentionContainer = $(\".js-mentions\");\n  const nodatafound = $mentionContainer.attr(\"data-noresults\");\n\n  let noMatchTemplate = null\n  if (nodatafound) {\n    noMatchTemplate = () => `<li>${nodatafound}</li>`;\n  }\n\n  // Listener for the event triggered by quilljs\n  let cursor = \"\";\n  $mentionContainer.on(\"quill-position\", (event) => {\n    if (event.detail !== null) {\n      // When replacing the text content after selecting a hashtag, we only need\n      // to know the hashtag's start position as that is the point which we want\n      // to replace.\n      let quill = event.target.__quill;\n      if (quill.getText(event.detail.index - 1, 1) === \"@\") {\n        cursor = event.detail.index;\n      }\n    }\n  });\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds\n  /* eslint no-invalid-this: 0 */\n  /* eslint consistent-this: 0 */\n  /* eslint prefer-reflect: 0 */\n  const debounce = function(callback, wait) {\n    let timeout = null;\n    return (...args) => {\n      const context = this;\n      clearTimeout(timeout);\n      timeout = setTimeout(() => callback.apply(context, args), wait);\n    };\n  }\n\n  /* eslint no-use-before-define: [\"error\", { \"variables\": false }]*/\n  let remoteSearch = function(text, cb) {\n    let query = `{users(filter:{wildcard:\"${text}\"}){nickname,name,avatarUrl,__typename,...on UserGroup{membersCount}}}`;\n    $.post(\"/api\", {query: query}).\n      then((response) => {\n        let data = response.data.users || {};\n        cb(data)\n      }).fail(function() {\n        cb([])\n      }).always(() => {\n      // This function runs Tribute every single time you type something\n      // So we must evalute DOM properties after each\n        const $parent = $(tribute.current.element).parent();\n        $parent.addClass(\"is-active\");\n\n        // We need to move the container to the wrapper selected\n        const $tribute = $parent.find(\".tribute-container\");\n        // Remove the inline styles, relative to absolute positioning\n        $tribute.removeAttr(\"style\");\n      })\n  };\n\n  // tribute.js docs - http://github.com/zurb/tribute\n  /* global Tribute*/\n  let tribute = new Tribute({\n    trigger: \"@\",\n    // avoid overloading the API if the user types too fast\n    values: debounce(function (text, cb) {\n      remoteSearch(text, (users) => cb(users));\n    }, 250),\n    positionMenu: true,\n    menuContainer: null,\n    allowSpaces: true,\n    menuItemLimit: 5,\n    fillAttr: \"nickname\",\n    selectClass: \"highlight\",\n    noMatchTemplate: noMatchTemplate,\n    lookup: (item) => item.nickname + item.name,\n    selectTemplate: function(item) {\n      if (typeof item === \"undefined\") {\n        return null;\n      }\n      if (this.range.isContentEditable(this.current.element)) {\n        // Check quill.js\n        if ($(this.current.element).hasClass(\"ql-editor\")) {\n          let editorContainer = $(this.current.element).parent().get(0);\n          let quill = editorContainer.__quill;\n          quill.insertText(cursor - 1, `${item.original.nickname} `, Quill.sources.API);\n          // cursor position + nickname length + \"@\" sign + space\n          let position = cursor + item.original.nickname.length + 2\n\n          let next = 0;\n          if (quill.getLength() > position) {\n            next = position\n          } else {\n            next = quill.getLength() - 1\n          }\n          // Workaround https://github.com/quilljs/quill/issues/731\n          setTimeout(function () {\n            quill.setSelection(next, 0);\n          }, 500);\n\n          return \"\"\n        }\n        return `<span contenteditable=\"false\">${item.original.nickname}</span>`;\n      }\n      return item.original.nickname;\n    },\n    menuItemTemplate: function(item) {\n      let svg = \"\";\n      if (window.Decidim && item.original.__typename === \"UserGroup\") {\n        const iconsPath =  window.Decidim.config.get(\"icons_path\");\n\n        svg = `<span class=\"is-group\">${item.original.membersCount}x <svg class=\"icon--members icon\"><use href=\"${iconsPath}#icon-members\"/></svg></span>`;\n      }\n      return `<div class=\"tribute-item ${item.original.__typename}\">\n      <span class=\"author__avatar\"><img src=\"${item.original.avatarUrl}\" alt=\"author-avatar\"></span>\n        <strong>${item.original.nickname}</strong>\n        <small>${item.original.name}</small>\n        ${svg}\n      </div>`;\n    }\n  });\n\n  let setupEvents = function($element) {\n    // DOM manipulation\n    $element.on(\"focusin\", (event) => {\n      // Set the parent container relative to the current element\n      tribute.menuContainer = event.target.parentNode;\n    });\n    $element.on(\"focusout\", (event) => {\n      let $parent = $(event.target).parent();\n\n      if ($parent.hasClass(\"is-active\")) {\n        $parent.removeClass(\"is-active\");\n      }\n    });\n    $element.on(\"input\", (event) => {\n      let $parent = $(event.target).parent();\n\n      if (tribute.isActive) {\n        // We need to move the container to the wrapper selected\n        let $tribute = $(\".tribute-container\");\n        $tribute.appendTo($parent);\n\n        // Parent adaptation\n        $parent.addClass(\"is-active\");\n      } else {\n        $parent.removeClass(\"is-active\");\n      }\n    });\n  };\n\n  setupEvents($mentionContainer);\n\n  // This allows external libraries (like React) to use the component\n  // by simply firing and event targeting the element where to attach Tribute\n  $(document).on(\"attach-mentions-element\", (event, element) => {\n    if (!element) {\n      return;\n    }\n    tribute.attach(element);\n    // Due a bug in Tribute, re-add menu to DOM if it has been removed\n    // See https://github.com/zurb/tribute/issues/140\n    if (tribute.menu && !document.body.contains(tribute.menu)) {\n      tribute.range.getDocument().body.appendChild(tribute.menu);\n    }\n    setupEvents($(element));\n  });\n\n  // tribute.attach($mentionContainer);\n  // Tribute needs to be attached to the `.ql-editor` element as said at:\n  // https://github.com/quilljs/quill/issues/1816\n  //\n  // For this reason we need to wait a bit for quill to initialize itself.\n  setTimeout(function() {\n    $mentionContainer.each((index, item) => {\n      let $qlEditor = $(\".ql-editor\", item);\n      if ($qlEditor.length > 0) {\n        tribute.attach($qlEditor);\n      } else {\n        tribute.attach(item);\n      }\n    });\n  }, 1000);\n});\n\n","import dayjs from \"dayjs\"\n\n$(() => {\n  let sessionTimeOutEnabled = true;\n  const $timeoutModal = $(\"#timeoutModal\");\n  const timeoutInSeconds = parseInt($timeoutModal.data(\"session-timeout\"), 10);\n  const secondsUntilTimeoutPath = $timeoutModal.data(\"seconds-until-timeout-path\");\n  const heartbeatPath = $timeoutModal.data(\"heartbeat-path\");\n  const interval = parseInt($timeoutModal.data(\"session-timeout-interval\"), 10);\n  const preventTimeOutSeconds = $timeoutModal.data(\"prevent-timeout-seconds\");\n  let endsAt = dayjs().add(timeoutInSeconds, \"seconds\");\n  let lastAction = dayjs();\n  const $continueSessionButton = $(\"#continueSession\");\n  let lastActivityCheck = dayjs();\n  // 5 * 60 seconds = 5 Minutes\n  const activityCheckInterval = 5 * 60;\n  const preventTimeOutUntil = dayjs().add(preventTimeOutSeconds, \"seconds\");\n\n  // Ajax request is made at timeout_modal.html.erb\n  $continueSessionButton.on(\"click\", () => {\n    $timeoutModal.foundation(\"close\");\n    // In admin panel we have to hide all overlays\n    $(\".reveal-overlay\").css(\"display\", \"none\");\n    lastActivityCheck = dayjs();\n  })\n\n  if (isNaN(interval)) {\n    return;\n  }\n  if (!timeoutInSeconds) {\n    return;\n  }\n\n  const disableSessionTimeout = () => {\n    sessionTimeOutEnabled = false;\n  }\n\n  const enableSessionTimeout = () => {\n    sessionTimeOutEnabled = true;\n  }\n\n  const setTimer = (secondsUntilExpiration) => {\n    if (!secondsUntilExpiration) {\n      return;\n    }\n    endsAt = dayjs().add(secondsUntilExpiration, \"seconds\");\n  }\n\n  const sessionTimeLeft = () => {\n    return $.ajax({\n      method: \"GET\",\n      url: secondsUntilTimeoutPath,\n      contentType: \"application/json\",\n      headers: {\n        \"X-CSRF-Token\": $(\"meta[name=csrf-token]\").attr(\"content\")\n      }\n    });\n  }\n\n  const heartbeat = () => {\n    return $.ajax({\n      method: \"POST\",\n      url: heartbeatPath,\n      contentType: \"application/javascript\"\n    });\n  }\n\n  const userBeenActiveSince = (seconds) => {\n    return (dayjs() - lastAction) / 1000 < seconds;\n  }\n\n  const exitInterval = setInterval(() => {\n    const timeSinceLastActivityCheckInSeconds = Math.round((dayjs() - lastActivityCheck) / 1000);\n\n    const popupOpen = $(\"#timeoutModal\").parent().css(\"display\") === \"block\";\n    if (!popupOpen && timeSinceLastActivityCheckInSeconds >= activityCheckInterval) {\n      lastActivityCheck = dayjs();\n      if (userBeenActiveSince(activityCheckInterval)) {\n        heartbeat();\n        return;\n      }\n    }\n\n    const timeRemaining = Math.round((endsAt - dayjs()) / 1000);\n    if (timeRemaining > 170) {\n      return;\n    }\n\n    if (dayjs() < preventTimeOutUntil) {\n      heartbeat();\n      return;\n    }\n\n    sessionTimeLeft().then((result) => {\n      const secondsUntilSessionExpires = result.seconds_remaining;\n      setTimer(secondsUntilSessionExpires);\n\n      if (!sessionTimeOutEnabled) {\n        heartbeat();\n      } else if (secondsUntilSessionExpires <= 90) {\n        $timeoutModal.find(\"#reveal-hidden-sign-out\")[0].click();\n      } else if (secondsUntilSessionExpires <= 150) {\n        $timeoutModal.foundation(\"open\");\n      }\n    });\n  }, interval);\n\n  $(document).mousemove(() => {\n    lastAction = dayjs();\n  })\n  $(document).scroll(() => {\n    lastAction = dayjs();\n  })\n  $(document).keypress(() => {\n    lastAction = dayjs();\n  })\n\n  // Devise restarts its own timer on ajax requests,\n  // so here we restart our.\n  $(document).on(\"ajax:complete\", () => {\n    setTimer(timeoutInSeconds);\n  });\n\n  $(document).ajaxComplete((_event, _xhr, settings) => {\n    if (settings && settings.url === secondsUntilTimeoutPath) {\n      return;\n    }\n    setTimer(timeoutInSeconds);\n  });\n\n  window.addEventListener(\"beforeunload\", () => {\n    clearInterval(exitInterval);\n    return;\n  });\n\n  window.Decidim.enableSessionTimeout = enableSessionTimeout\n  window.Decidim.disableSessionTimeout = disableSessionTimeout\n});\n","/* eslint-disable */\n\n/* =========================================================\n * foundation-datepicker.js\n * Copyright 2015 Peter Beno, najlepsiwebdesigner@gmail.com, @benopeter\n * project website http://foundation-datepicker.peterbeno.com\n * ========================================================= */\n\n// This file is a modified version of the original file\n// See\n//  - https://github.com/decidim/decidim/pull/1207\n//  - https://github.com/decidim/decidim/pull/2512\n//  - https://github.com/decidim/decidim/pull/3515\n\n!(function($) {\n\n  function UTCDate() {\n    return new Date(Date.UTC(...arguments));\n  }\n\n  function UTCToday() {\n    let today = new Date();\n    return UTCDate(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate());\n  }\n\n  let Datepicker = function(element, options) {\n    let that = this;\n\n    this.element = $(element);\n    this.autoShow = (options.autoShow == undefined ? true : options.autoShow);\n    this.appendTo = options.appendTo || \"body\";\n    this.closeButton = options.closeButton;\n    this.language = options.language || this.element.data(\"date-language\") || \"en\";\n    this.language = this.language in dates ? this.language : this.language.split(\"-\")[0]; // Check if \"de-DE\" style date is available, if not language should fallback to 2 letter code eg \"de\"\n    this.language = this.language in dates ? this.language : \"en\";\n    this.isRTL = dates[this.language].rtl || false;\n    this.format = DPGlobal.parseFormat(options.format || this.element.data(\"date-format\") || dates[this.language].format || \"mm/dd/yyyy\");\n    this.formatText = options.format || this.element.data(\"date-format\") || dates[this.language].format || \"mm/dd/yyyy\";\n    this.isInline = false;\n    this.isInput = this.element.is(\"input\");\n    this.component = this.element.is(\".date\") ? this.element.find(\".prefix, .postfix\") : false;\n    this.hasInput = this.component && this.element.find(\"input\").length;\n    this.disableDblClickSelection = options.disableDblClickSelection;\n    this.onRender = options.onRender || function() {};\n    if (this.component && this.component.length === 0) {\n      this.component = false;\n    }\n    this.linkField = options.linkField || this.element.data(\"link-field\") || false;\n    this.linkFormat = DPGlobal.parseFormat(options.linkFormat || this.element.data(\"link-format\") || \"yyyy-mm-dd hh:ii:ss\");\n    this.minuteStep = options.minuteStep || this.element.data(\"minute-step\") || 5;\n    this.pickerPosition = options.pickerPosition || this.element.data(\"picker-position\") || \"bottom-right\";\n    this.initialDate = options.initialDate || null;\n    this.faCSSprefix = options.faCSSprefix || \"fa\";\n    this.leftArrow = options.leftArrow || `<i class=\"${this.faCSSprefix} ${this.faCSSprefix}-chevron-left fi-arrow-left\"/>`;\n    this.rightArrow = options.rightArrow || `<i class=\"${this.faCSSprefix} ${this.faCSSprefix}-chevron-right fi-arrow-right\"/>`;\n    this.closeIcon = options.closeIcon || `<i class=\"${this.faCSSprefix} ${this.faCSSprefix}-remove ${this.faCSSprefix}-times fi-x\"></i>`;\n\n\n    this.minView = 0;\n    if (\"minView\" in options) {\n      this.minView = options.minView;\n    } else if (\"minView\" in this.element.data()) {\n      this.minView = this.element.data(\"min-view\");\n    }\n    this.minView = DPGlobal.convertViewMode(this.minView);\n\n    this.maxView = DPGlobal.modes.length - 1;\n    if (\"maxView\" in options) {\n      this.maxView = options.maxView;\n    } else if (\"maxView\" in this.element.data()) {\n      this.maxView = this.element.data(\"max-view\");\n    }\n    this.maxView = DPGlobal.convertViewMode(this.maxView);\n\n    this.startViewMode = \"month\";\n    if (\"startView\" in options) {\n      this.startViewMode = options.startView;\n    } else if (\"startView\" in this.element.data()) {\n      this.startViewMode = this.element.data(\"start-view\");\n    }\n    this.startViewMode = DPGlobal.convertViewMode(this.startViewMode);\n    this.viewMode = this.startViewMode;\n\n    if (!(\"minView\" in options) && !(\"maxView\" in options) && !(this.element.data(\"min-view\")) && !(this.element.data(\"max-view\"))) {\n      this.pickTime = false;\n      if (\"pickTime\" in options) {\n        this.pickTime = options.pickTime;\n      }\n      if (this.pickTime == true) {\n        this.minView = 0;\n        this.maxView = 4;\n      } else {\n        this.minView = 2;\n        this.maxView = 4;\n      }\n    }\n\n    this.forceParse = true;\n    if (\"forceParse\" in options) {\n      this.forceParse = options.forceParse;\n    } else if (\"dateForceParse\" in this.element.data()) {\n      this.forceParse = this.element.data(\"date-force-parse\");\n    }\n\n\n    this.picker = $(DPGlobal.template(this.leftArrow, this.rightArrow, this.closeIcon)).\n      appendTo(this.isInline ? this.element : this.appendTo).\n      on({\n        click: $.proxy(this.click, this),\n        mousedown: $.proxy(this.mousedown, this)\n      });\n    if (this.closeButton) {\n      this.picker.find(\"a.datepicker-close\").show();\n    } else {\n      this.picker.find(\"a.datepicker-close\").hide();\n    }\n\n    if (this.isInline) {\n      this.picker.addClass(\"datepicker-inline\");\n    } else {\n      this.picker.addClass(\"datepicker-dropdown dropdown-menu\");\n    }\n    if (this.isRTL) {\n      this.picker.addClass(\"datepicker-rtl\");\n\n      this.picker.find(\".date-switch\").each(function() {\n        $(this).parent().prepend($(this).siblings(\".next\"));\n        $(this).parent().append($(this).siblings(\".prev\"));\n      })\n      this.picker.find(\".prev, .next\").toggleClass(\"prev next\");\n\n    }\n    $(document).on(\"mousedown\", function(e) {\n      if (that.isInput && e.target === that.element[0]) {\n        return;\n      }\n\n      // Clicked outside the datepicker, hide it\n      if ($(e.target).closest(\".datepicker.datepicker-inline, .datepicker.datepicker-dropdown\").length === 0) {\n        that.hide();\n      }\n    });\n\n    this.autoclose = true;\n    if (\"autoclose\" in options) {\n      this.autoclose = options.autoclose;\n    } else if (\"dateAutoclose\" in this.element.data()) {\n      this.autoclose = this.element.data(\"date-autoclose\");\n    }\n\n    this.keyboardNavigation = true;\n    if (\"keyboardNavigation\" in options) {\n      this.keyboardNavigation = options.keyboardNavigation;\n    } else if (\"dateKeyboardNavigation\" in this.element.data()) {\n      this.keyboardNavigation = this.element.data(\"date-keyboard-navigation\");\n    }\n\n    this.todayBtn = (options.todayBtn || this.element.data(\"date-today-btn\") || false);\n    this.todayHighlight = (options.todayHighlight || this.element.data(\"date-today-highlight\") || false);\n\n    this.calendarWeeks = false;\n    if (\"calendarWeeks\" in options) {\n      this.calendarWeeks = options.calendarWeeks;\n    } else if (\"dateCalendarWeeks\" in this.element.data()) {\n      this.calendarWeeks = this.element.data(\"date-calendar-weeks\");\n    }\n    if (this.calendarWeeks)\n    {this.picker.find(\"tfoot th.today\").\n      attr(\"colspan\", function(i, val) {\n        return parseInt(val) + 1;\n      });}\n\n    this.weekStart = ((options.weekStart || this.element.data(\"date-weekstart\") || dates[this.language].weekStart || 0) % 7);\n    this.weekEnd = ((this.weekStart + 6) % 7);\n    this.startDate = -Infinity;\n    this.endDate = Infinity;\n    this.daysOfWeekDisabled = [];\n    this.datesDisabled = [];\n    this.setStartDate(options.startDate || this.element.data(\"date-startdate\"));\n    this.setEndDate(options.endDate || this.element.data(\"date-enddate\"));\n    this.setDaysOfWeekDisabled(options.daysOfWeekDisabled || this.element.data(\"date-days-of-week-disabled\"));\n    this.setDatesDisabled(options.datesDisabled || this.element.data(\"dates-disabled\"));\n\n    if (this.initialDate != null) {\n      this.date = this.viewDate = DPGlobal.parseDate(this.initialDate, this.format, this.language);\n      this.setValue();\n    }\n\n    this.fillDow();\n    this.fillMonths();\n    this.update();\n\n    this.showMode();\n\n    if (this.isInline) {\n      this.show();\n    }\n\n    this._attachEvents();\n  };\n\n  Datepicker.prototype = {\n    constructor: Datepicker,\n\n    _events: [],\n    _attachEvents: function() {\n      this._detachEvents();\n      if (this.isInput) { // single input\n        if (!this.keyboardNavigation) {\n          this._events = [\n            [this.element, {\n              focus: (this.autoShow) ? $.proxy(this.show, this) : function() {}\n            }]\n          ];\n        } else {\n          this._events = [\n            [this.element, {\n              focus: (this.autoShow) ? $.proxy(this.show, this) : function() {},\n              keyup: $.proxy(this.update, this),\n              keydown: $.proxy(this.keydown, this),\n              click: (this.element.attr(\"readonly\")) ? $.proxy(this.show, this) : function() {}\n            }]\n          ];\n        }\n      }\n      else if (this.component && this.hasInput) { // component: input + button\n        this._events = [\n          // For components that are not readonly, allow keyboard nav\n          [this.element.find(\"input\"), {\n            focus: (this.autoShow) ? $.proxy(this.show, this) : function() {},\n            keyup: $.proxy(this.update, this),\n            keydown: $.proxy(this.keydown, this)\n          }],\n          [this.component, {\n            click: $.proxy(this.show, this)\n          }]\n        ];\n      } else if (this.element.is(\"div\")) { // inline datepicker\n        this.isInline = true;\n      } else {\n        this._events = [\n          [this.element, {\n            click: $.proxy(this.show, this)\n          }]\n        ];\n      }\n\n      if (this.disableDblClickSelection) {\n        this._events[this._events.length] = [\n          this.element, {\n            dblclick: function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              $(this).blur()\n            }\n          }\n        ];\n      }\n\n      for (var el, ev, i = 0; i < this._events.length; i++) {\n        el = this._events[i][0];\n        ev = this._events[i][1];\n        el.on(ev);\n      }\n    },\n    _detachEvents: function() {\n      for (var el, ev, i = 0; i < this._events.length; i++) {\n        el = this._events[i][0];\n        ev = this._events[i][1];\n        el.off(ev);\n      }\n      this._events = [];\n    },\n\n    show: function(e) {\n      this.picker.show();\n      this.height = this.component ? this.component.outerHeight() : this.element.outerHeight();\n      this.update();\n      this.place();\n      $(window).on(\"resize\", $.proxy(this.place, this));\n      if (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      this.element.trigger({\n        type: \"show\",\n        date: this.date\n      });\n    },\n\n    hide: function(e) {\n      if (this.isInline) {return;}\n      if (!this.picker.is(\":visible\")) {return;}\n      this.picker.hide();\n      $(window).off(\"resize\", this.place);\n      this.viewMode = this.startViewMode;\n      this.showMode();\n      if (!this.isInput) {\n        $(document).off(\"mousedown\", this.hide);\n      }\n\n      if (\n        this.forceParse &&\n                (\n                  this.isInput && this.element.val() ||\n                    this.hasInput && this.element.find(\"input\").val()\n                )\n      )\n      {this.setValue();}\n      this.element.trigger({\n        type: \"hide\",\n        date: this.date\n      });\n    },\n\n    remove: function() {\n      this._detachEvents();\n      this.picker.remove();\n      delete this.element.data().datepicker;\n    },\n\n    getDate: function() {\n      let d = this.getUTCDate();\n      return new Date(d.getTime() + (d.getTimezoneOffset() * 60000));\n    },\n\n    getUTCDate: function() {\n      return this.date;\n    },\n\n    setDate: function(d) {\n      this.setUTCDate(new Date(d.getTime() - (d.getTimezoneOffset() * 60000)));\n    },\n\n    setUTCDate: function(d) {\n      this.date = d;\n      this.setValue();\n    },\n\n    setValue: function() {\n      let formatted = this.getFormattedDate();\n      if (!this.isInput) {\n        if (this.component) {\n          this.element.find(\"input\").val(formatted);\n        }\n        this.element.data(\"date\", formatted);\n      } else {\n        this.element.val(formatted);\n      }\n    },\n\n    getFormattedDate: function(format) {\n      if (format === undefined)\n      {format = this.format;}\n      return DPGlobal.formatDate(this.date, format, this.language);\n    },\n\n    setStartDate: function(startDate) {\n      this.startDate = startDate || -Infinity;\n      if (this.startDate !== -Infinity) {\n        this.startDate = DPGlobal.parseDate(this.startDate, this.format, this.language);\n      }\n      this.update();\n      this.updateNavArrows();\n    },\n\n    setEndDate: function(endDate) {\n      this.endDate = endDate || Infinity;\n      if (this.endDate !== Infinity) {\n        this.endDate = DPGlobal.parseDate(this.endDate, this.format, this.language);\n      }\n      this.update();\n      this.updateNavArrows();\n    },\n\n    setDaysOfWeekDisabled: function(daysOfWeekDisabled) {\n      this.daysOfWeekDisabled = daysOfWeekDisabled || [];\n      if (!$.isArray(this.daysOfWeekDisabled)) {\n        this.daysOfWeekDisabled = this.daysOfWeekDisabled.split(/,\\s*/);\n      }\n      this.daysOfWeekDisabled = $.map(this.daysOfWeekDisabled, function(d) {\n        return parseInt(d, 10);\n      });\n      this.update();\n      this.updateNavArrows();\n    },\n\n    setDatesDisabled: function(datesDisabled) {\n      this.datesDisabled = datesDisabled || [];\n      if (!$.isArray(this.datesDisabled)) {\n        this.datesDisabled = this.datesDisabled.split(/,\\s*/);\n      }\n      this.datesDisabled = $.map(this.datesDisabled, function(d) {\n        return DPGlobal.parseDate(d, this.format, this.language).valueOf();\n      });\n      this.update();\n      this.updateNavArrows();\n    },\n\n    place: function() {\n      if (this.isInline) {return;}\n      let zIndexes = [];\n      this.element.parents().map(function() {\n        if ($(this).css(\"z-index\") != \"auto\") {\n          zIndexes.push(parseInt($(this).css(\"z-index\")));\n        }\n      });\n      let zIndex = zIndexes.sort(function(a, b) { return a - b; }).pop() + 10;\n      let textbox = this.component ? this.component : this.element;\n      let offset = textbox.offset();\n      let height = textbox.outerHeight() + parseInt(textbox.css(\"margin-top\"));\n      let width = textbox.outerWidth() + parseInt(textbox.css(\"margin-left\"));\n      let fullOffsetTop = offset.top + height;\n      let offsetLeft = offset.left;\n      this.picker.removeClass(\"datepicker-top datepicker-bottom\");\n      // can we show it on top?\n      let canShowTop = ($(window).scrollTop() < offset.top - this.picker.outerHeight());\n      let canShowBottom = (fullOffsetTop + this.picker.outerHeight()) < $(window).scrollTop() + $(window).height();\n      // If the datepicker is going to be below the window, show it on top of the input if it fits\n      if (!canShowBottom && canShowTop) {\n        fullOffsetTop = offset.top - this.picker.outerHeight();\n        this.picker.addClass(\"datepicker-top\");\n      }\n      else {\n        // Scroll up if we cannot show it on bottom or top (for mobile devices)\n        if (!canShowBottom) {$(window).scrollTop(offset.top);}\n        this.picker.addClass(\"datepicker-bottom\");\n      }\n\n      // if the datepicker is going to go past the right side of the window, we want\n      // to set the right position so the datepicker lines up with the textbox\n      if (offset.left + this.picker.width() >= $(window).width()) {\n        offsetLeft = (offset.left + width) - this.picker.width();\n      }\n      this.picker.css({\n        top: fullOffsetTop,\n        left: offsetLeft,\n        zIndex: zIndex\n      });\n    },\n\n    update: function() {\n      let date,\n          fromArgs = false;\n      let currentVal = this.isInput ? this.element.val() : this.element.data(\"date\") || this.element.find(\"input\").val();\n      if (arguments && arguments.length && (typeof arguments[0] === \"string\" || arguments[0] instanceof Date)) {\n        date = arguments[0];\n        fromArgs = true;\n      }\n      else {\n        date = this.isInput ? this.element.val() : this.element.data(\"date\") || this.element.find(\"input\").val();\n      }\n\n      this.date = DPGlobal.parseDate(date, this.format, this.language);\n\n      if (fromArgs) {\n        this.setValue();\n      } else if (currentVal == \"\") {\n        this.element.trigger({\n          type: \"changeDate\",\n          date: null\n        });\n      }\n\n      if (this.date < this.startDate) {\n        this.viewDate = new Date(this.startDate.valueOf());\n      } else if (this.date > this.endDate) {\n        this.viewDate = new Date(this.endDate.valueOf());\n      } else {\n        this.viewDate = new Date(this.date.valueOf());\n      }\n      this.fill();\n    },\n\n    fillDow: function() {\n      let dowCnt = this.weekStart,\n          html = \"<tr>\";\n      if (this.calendarWeeks) {\n        let cell = '<th class=\"cw\">&nbsp;</th>';\n        html += cell;\n        this.picker.find(\".datepicker-days thead tr:first-child\").prepend(cell);\n      }\n      while (dowCnt < this.weekStart + 7) {\n        html += `<th class=\"dow\">${dates[this.language].daysMin[(dowCnt++) % 7]}</th>`;\n      }\n      html += \"</tr>\";\n      this.picker.find(\".datepicker-days thead\").append(html);\n    },\n\n    fillMonths: function() {\n      let html = \"\",\n          i = 0;\n      while (i < 12) {\n        html += `<span class=\"month\">${dates[this.language].monthsShort[i++]}</span>`;\n      }\n      this.picker.find(\".datepicker-months td\").html(html);\n    },\n\n    fill: function() {\n      if (this.date == null || this.viewDate == null) {\n        return;\n      }\n\n      let d = new Date(this.viewDate.valueOf()),\n          year = d.getUTCFullYear(),\n          month = d.getUTCMonth(),\n          dayMonth = d.getUTCDate(),\n          hours = d.getUTCHours(),\n          minutes = d.getUTCMinutes(),\n          startYear = this.startDate !== -Infinity ? this.startDate.getUTCFullYear() : -Infinity,\n          startMonth = this.startDate !== -Infinity ? this.startDate.getUTCMonth() : -Infinity,\n          endYear = this.endDate !== Infinity ? this.endDate.getUTCFullYear() : Infinity,\n          endMonth = this.endDate !== Infinity ? this.endDate.getUTCMonth() : Infinity,\n          currentDate = this.date && UTCDate(this.date.getUTCFullYear(), this.date.getUTCMonth(), this.date.getUTCDate()).valueOf(),\n          today = new Date(),\n          titleFormat = dates[this.language].titleFormat || dates.en.titleFormat;\n      // this.picker.find('.datepicker-days thead th.date-switch')\n      //          .text(DPGlobal.formatDate(new UTCDate(year, month), titleFormat, this.language));\n\n      this.picker.find(\".datepicker-days thead th:eq(1)\").\n        text(`${dates[this.language].months[month]} ${year}`);\n      this.picker.find(\".datepicker-hours thead th:eq(1)\").\n        text(`${dayMonth} ${dates[this.language].months[month]} ${year}`);\n      this.picker.find(\".datepicker-minutes thead th:eq(1)\").\n        text(`${dayMonth} ${dates[this.language].months[month]} ${year}`);\n\n\n      this.picker.find(\"tfoot th.today\").\n        text(dates[this.language].today).\n        toggle(this.todayBtn !== false);\n      this.updateNavArrows();\n      this.fillMonths();\n      let prevMonth = UTCDate(year, month - 1, 28, 0, 0, 0, 0),\n          day = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());\n      prevMonth.setUTCDate(day);\n      prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.weekStart + 7) % 7);\n      let nextMonth = new Date(prevMonth.valueOf());\n      nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);\n      nextMonth = nextMonth.valueOf();\n      let html = [];\n      let clsName;\n      while (prevMonth.valueOf() < nextMonth) {\n        if (prevMonth.getUTCDay() == this.weekStart) {\n          html.push(\"<tr>\");\n          if (this.calendarWeeks) {\n            // adapted from https://github.com/timrwood/moment/blob/master/moment.js#L128\n            let a = new Date(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth(), prevMonth.getUTCDate() - prevMonth.getDay() + 10 - (this.weekStart && this.weekStart % 7 < 5 && 7)),\n                b = new Date(a.getFullYear(), 0, 4),\n                calWeek = ~~((a - b) / 864e5 / 7 + 1.5);\n            html.push(`<td class=\"cw\">${calWeek}</td>`);\n          }\n        }\n        clsName = ` ${this.onRender(prevMonth)} `;\n        if (prevMonth.getUTCFullYear() < year || (prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() < month)) {\n          clsName += \" old\";\n        } else if (prevMonth.getUTCFullYear() > year || (prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() > month)) {\n          clsName += \" new\";\n        }\n        // Compare internal UTC date with local today, not UTC today\n        if (this.todayHighlight &&\n                    prevMonth.getUTCFullYear() == today.getFullYear() &&\n                    prevMonth.getUTCMonth() == today.getMonth() &&\n                    prevMonth.getUTCDate() == today.getDate()) {\n          clsName += \" today\";\n        }\n        if (currentDate && prevMonth.valueOf() == currentDate) {\n          clsName += \" active\";\n        }\n        if (prevMonth.valueOf() < this.startDate || prevMonth.valueOf() > this.endDate ||\n                    $.inArray(prevMonth.getUTCDay(), this.daysOfWeekDisabled) !== -1 ||\n                    $.inArray(prevMonth.valueOf(), this.datesDisabled) !== -1) {\n          clsName += \" disabled\";\n        }\n        html.push(`<td class=\"day${clsName}\">${prevMonth.getUTCDate()}</td>`);\n        if (prevMonth.getUTCDay() == this.weekEnd) {\n          html.push(\"</tr>\");\n        }\n        prevMonth.setUTCDate(prevMonth.getUTCDate() + 1);\n      }\n      this.picker.find(\".datepicker-days tbody\").empty().append(html.join(\"\"));\n\n      html = [];\n      for (var i = 0; i < 24; i++) {\n        var actual = UTCDate(year, month, dayMonth, i);\n        clsName = \"\";\n        // We want the previous hour for the startDate\n        if ((actual.valueOf() + 3600000) < this.startDate || actual.valueOf() > this.endDate) {\n          clsName += \" disabled\";\n        } else if (hours == i) {\n          clsName += \" active\";\n        }\n        html.push(`<span class=\"hour${clsName}\">${i}:00</span>`);\n      }\n      this.picker.find(\".datepicker-hours td\").html(html.join(\"\"));\n\n      html = [];\n      for (var i = 0; i < 60; i += this.minuteStep) {\n        var actual = UTCDate(year, month, dayMonth, hours, i);\n        clsName = \"\";\n        if (actual.valueOf() < this.startDate || actual.valueOf() > this.endDate) {\n          clsName += \" disabled\";\n        } else if (Math.floor(minutes / this.minuteStep) == Math.floor(i / this.minuteStep)) {\n          clsName += \" active\";\n        }\n        html.push(`<span class=\"minute${clsName}\">${hours}:${i < 10 ? `0${i}` : i}</span>`);\n      }\n      this.picker.find(\".datepicker-minutes td\").html(html.join(\"\"));\n\n\n      let currentYear = this.date && this.date.getUTCFullYear();\n      let months = this.picker.find(\".datepicker-months\").\n        find(\"th:eq(1)\").\n        text(year).\n        end().\n        find(\"span\").removeClass(\"active\");\n      if (currentYear && currentYear == year) {\n        months.eq(this.date.getUTCMonth()).addClass(\"active\");\n      }\n      if (year < startYear || year > endYear) {\n        months.addClass(\"disabled\");\n      }\n      if (year == startYear) {\n        months.slice(0, startMonth).addClass(\"disabled\");\n      }\n      if (year == endYear) {\n        months.slice(endMonth + 1).addClass(\"disabled\");\n      }\n\n      html = \"\";\n      year = parseInt(year / 10, 10) * 10;\n      let yearCont = this.picker.find(\".datepicker-years\").\n        find(\"th:eq(1)\").\n        text(`${year}-${year + 9}`).\n        end().\n        find(\"td\");\n      year -= 1;\n      for (var i = -1; i < 11; i++) {\n        html += `<span class=\"year${i == -1 || i == 10 ? \" old\" : \"\"}${currentYear == year ? \" active\" : \"\"}${year < startYear || year > endYear ? \" disabled\" : \"\"}\">${year}</span>`;\n        year += 1;\n      }\n      yearCont.html(html);\n    },\n\n    updateNavArrows: function() {\n      let d = new Date(this.viewDate),\n          year = d.getUTCFullYear(),\n          month = d.getUTCMonth(),\n          day = d.getUTCDate(),\n          hour = d.getUTCHours();\n      switch (this.viewMode) {\n      case 0:\n        if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear() && month <= this.startDate.getUTCMonth() && day <= this.startDate.getUTCDate() && hour <= this.startDate.getUTCHours()) {\n          this.picker.find(\".prev\").css({\n            visibility: \"hidden\"\n          });\n        } else {\n          this.picker.find(\".prev\").css({\n            visibility: \"visible\"\n          });\n        }\n        if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear() && month >= this.endDate.getUTCMonth() && day >= this.endDate.getUTCDate() && hour >= this.endDate.getUTCHours()) {\n          this.picker.find(\".next\").css({\n            visibility: \"hidden\"\n          });\n        } else {\n          this.picker.find(\".next\").css({\n            visibility: \"visible\"\n          });\n        }\n        break;\n      case 1:\n        if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear() && month <= this.startDate.getUTCMonth() && day <= this.startDate.getUTCDate()) {\n          this.picker.find(\".prev\").css({\n            visibility: \"hidden\"\n          });\n        } else {\n          this.picker.find(\".prev\").css({\n            visibility: \"visible\"\n          });\n        }\n        if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear() && month >= this.endDate.getUTCMonth() && day >= this.endDate.getUTCDate()) {\n          this.picker.find(\".next\").css({\n            visibility: \"hidden\"\n          });\n        } else {\n          this.picker.find(\".next\").css({\n            visibility: \"visible\"\n          });\n        }\n        break;\n      case 2:\n        if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear() && month <= this.startDate.getUTCMonth()) {\n          this.picker.find(\".prev\").css({\n            visibility: \"hidden\"\n          });\n        } else {\n          this.picker.find(\".prev\").css({\n            visibility: \"visible\"\n          });\n        }\n        if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear() && month >= this.endDate.getUTCMonth()) {\n          this.picker.find(\".next\").css({\n            visibility: \"hidden\"\n          });\n        } else {\n          this.picker.find(\".next\").css({\n            visibility: \"visible\"\n          });\n        }\n        break;\n      case 3:\n      case 4:\n        if (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()) {\n          this.picker.find(\".prev\").css({\n            visibility: \"hidden\"\n          });\n        } else {\n          this.picker.find(\".prev\").css({\n            visibility: \"visible\"\n          });\n        }\n        if (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()) {\n          this.picker.find(\".next\").css({\n            visibility: \"hidden\"\n          });\n        } else {\n          this.picker.find(\".next\").css({\n            visibility: \"visible\"\n          });\n        }\n        break;\n      }\n    },\n\n    click: function(e) {\n      e.stopPropagation();\n      e.preventDefault();\n\n      if ($(e.target).hasClass(\"datepicker-close\") || $(e.target).parent().hasClass(\"datepicker-close\")) {\n        this.hide();\n      }\n\n      let target = $(e.target).closest(\"span, td, th\");\n      if (target.length == 1) {\n        if (target.is(\".disabled\")) {\n          this.element.trigger({\n            type: \"outOfRange\",\n            date: this.viewDate,\n            startDate: this.startDate,\n            endDate: this.endDate\n          });\n          return;\n        }\n\n        switch (target[0].nodeName.toLowerCase()) {\n        case \"th\":\n          switch (target[0].className) {\n          case \"date-switch\":\n            this.showMode(1);\n            break;\n          case \"prev\":\n          case \"next\":\n            var dir = DPGlobal.modes[this.viewMode].navStep * (target[0].className == \"prev\" ? -1 : 1);\n            switch (this.viewMode) {\n            case 0:\n              this.viewDate = this.moveHour(this.viewDate, dir);\n              break;\n            case 1:\n              this.viewDate = this.moveDate(this.viewDate, dir);\n              break;\n            case 2:\n              this.viewDate = this.moveMonth(this.viewDate, dir);\n              break;\n            case 3:\n            case 4:\n              this.viewDate = this.moveYear(this.viewDate, dir);\n              break;\n            }\n            this.fill();\n            break;\n          case \"today\":\n            var date = new Date();\n            date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());\n\n            this.viewMode = this.startViewMode;\n            this.showMode(0);\n            this._setDate(date);\n            break;\n          }\n          break;\n        case \"span\":\n          if (!target.is(\".disabled\")) {\n            if (target.is(\".month\")) {\n              if (this.minView === 3) {\n                var month = target.parent().find(\"span\").index(target) || 0;\n                var year = this.viewDate.getUTCFullYear(),\n                    day = 1,\n                    hours = this.viewDate.getUTCHours(),\n                    minutes = this.viewDate.getUTCMinutes(),\n                    seconds = this.viewDate.getUTCSeconds();\n                this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));\n              } else {\n                this.viewDate.setUTCDate(1);\n                var month = target.parent().find(\"span\").index(target);\n                this.viewDate.setUTCMonth(month);\n                this.element.trigger({\n                  type: \"changeMonth\",\n                  date: this.viewDate\n                });\n              }\n            } else if (target.is(\".year\")) {\n              if (this.minView === 4) {\n                var year = parseInt(target.text(), 10) || 0;\n                var month = 0,\n                    day = 1,\n                    hours = this.viewDate.getUTCHours(),\n                    minutes = this.viewDate.getUTCMinutes(),\n                    seconds = this.viewDate.getUTCSeconds();\n                this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));\n              } else {\n                this.viewDate.setUTCDate(1);\n                var year = parseInt(target.text(), 10) || 0;\n                this.viewDate.setUTCFullYear(year);\n                this.element.trigger({\n                  type: \"changeYear\",\n                  date: this.viewDate\n                });\n              }\n            } else if (target.is(\".hour\")) {\n              var hours = parseInt(target.text(), 10) || 0;\n              var year = this.viewDate.getUTCFullYear(),\n                  month = this.viewDate.getUTCMonth(),\n                  day = this.viewDate.getUTCDate(),\n                  minutes = this.viewDate.getUTCMinutes(),\n                  seconds = this.viewDate.getUTCSeconds();\n              this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));\n            } else if (target.is(\".minute\")) {\n              var minutes = parseInt(target.text().substr(target.text().indexOf(\":\") + 1), 10) || 0;\n              var year = this.viewDate.getUTCFullYear(),\n                  month = this.viewDate.getUTCMonth(),\n                  day = this.viewDate.getUTCDate(),\n                  hours = this.viewDate.getUTCHours(),\n                  seconds = this.viewDate.getUTCSeconds();\n              this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));\n            }\n\n\n            if (this.viewMode != 0) {\n\n\n              var oldViewMode = this.viewMode;\n              this.showMode(-1);\n              this.fill();\n              if (oldViewMode == this.viewMode && this.autoclose) {\n                this.hide();\n              }\n            } else {\n              this.fill();\n              if (this.autoclose) {\n                this.hide();\n              }\n            }\n          }\n          break;\n        case \"td\":\n\n\n          if (target.is(\".day\") && !target.is(\".disabled\")) {\n            var day = parseInt(target.text(), 10) || 1;\n            var year = this.viewDate.getUTCFullYear(),\n                month = this.viewDate.getUTCMonth(),\n                hours = this.viewDate.getUTCHours(),\n                minutes = this.viewDate.getUTCMinutes(),\n                seconds = this.viewDate.getUTCSeconds();\n            if (target.is(\".old\")) {\n              if (month === 0) {\n                month = 11;\n                year -= 1;\n              } else {\n                month -= 1;\n              }\n            } else if (target.is(\".new\")) {\n              if (month == 11) {\n                month = 0;\n                year += 1;\n              } else {\n                month += 1;\n              }\n            }\n            this._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));\n          }\n\n\n          var oldViewMode = this.viewMode;\n\n\n          this.showMode(-1);\n\n\n          this.fill();\n          if (oldViewMode == this.viewMode && this.autoclose) {\n            this.hide();\n          }\n          break;\n        }\n      }\n    },\n\n    _setDate: function(date, which) {\n\n      if (!which || which == \"date\")\n      {this.date = date;}\n      if (!which || which == \"view\")\n      {this.viewDate = date;}\n      this.fill();\n      this.setValue();\n      this.element.trigger({\n        type: \"changeDate\",\n        date: this.date\n      });\n      let element;\n      if (this.isInput) {\n        element = this.element;\n      } else if (this.component) {\n        element = this.element.find(\"input\");\n      }\n      if (element) {\n        element.change();\n        if (this.autoclose && (!which || which == \"date\")) {\n          // this.hide();\n        }\n      }\n    },\n\n    moveHour: function(date, dir) {\n      if (!dir) {return date;}\n      let new_date = new Date(date.valueOf());\n      dir = dir > 0 ? 1 : -1;\n      new_date.setUTCHours(new_date.getUTCHours() + dir);\n      return new_date;\n    },\n\n    moveDate: function(date, dir) {\n      if (!dir) {return date;}\n      let new_date = new Date(date.valueOf());\n      dir = dir > 0 ? 1 : -1;\n      new_date.setUTCDate(new_date.getUTCDate() + dir);\n      return new_date;\n    },\n\n    moveMonth: function(date, dir) {\n      if (!dir) {return date;}\n      let new_date = new Date(date.valueOf()),\n          day = new_date.getUTCDate(),\n          month = new_date.getUTCMonth(),\n          mag = Math.abs(dir),\n          new_month, test;\n      dir = dir > 0 ? 1 : -1;\n      if (mag == 1) {\n        test = dir == -1\n        // If going back one month, make sure month is not current month\n        // (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)\n          ? function() {\n            return new_date.getUTCMonth() == month;\n          }\n        // If going forward one month, make sure month is as expected\n        // (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)\n          : function() {\n            return new_date.getUTCMonth() != new_month;\n          };\n        new_month = month + dir;\n        new_date.setUTCMonth(new_month);\n        // Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11\n        if (new_month < 0 || new_month > 11)\n        {new_month = (new_month + 12) % 12;}\n      } else {\n        // For magnitudes >1, move one month at a time...\n        for (let i = 0; i < mag; i++)\n        // ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...\n        {new_date = this.moveMonth(new_date, dir);}\n        // ...then reset the day, keeping it in the new month\n        new_month = new_date.getUTCMonth();\n        new_date.setUTCDate(day);\n        test = function() {\n          return new_month != new_date.getUTCMonth();\n        };\n      }\n      // Common date-resetting loop -- if date is beyond end of month, make it\n      // end of month\n      while (test()) {\n        new_date.setUTCDate(--day);\n        new_date.setUTCMonth(new_month);\n      }\n      return new_date;\n    },\n\n    moveYear: function(date, dir) {\n      return this.moveMonth(date, dir * 12);\n    },\n\n    dateWithinRange: function(date) {\n      return date >= this.startDate && date <= this.endDate;\n    },\n\n    keydown: function(e) {\n      if (!this.keyboardNavigation) {\n        return true;\n      }\n      if (this.picker.is(\":not(:visible)\")) {\n        if (e.keyCode == 27) // allow escape to hide and re-show picker\n        {this.show();}\n        return;\n      }\n      let dateChanged = false,\n          day, dir, month,\n          newDate, newViewDate;\n      switch (e.keyCode) {\n      case 27: // escape\n        this.hide();\n        e.preventDefault();\n        break;\n      case 37: // left\n      case 39: // right\n        if (!this.keyboardNavigation) {break;}\n        dir = e.keyCode == 37 ? -1 : 1;\n        if (e.ctrlKey) {\n          newDate = this.moveYear(this.date, dir);\n          newViewDate = this.moveYear(this.viewDate, dir);\n        } else if (e.shiftKey) {\n          newDate = this.moveMonth(this.date, dir);\n          newViewDate = this.moveMonth(this.viewDate, dir);\n        } else {\n          newDate = new Date(this.date.valueOf());\n          newDate.setUTCDate(this.date.getUTCDate() + dir);\n          newViewDate = new Date(this.viewDate.valueOf());\n          newViewDate.setUTCDate(this.viewDate.getUTCDate() + dir);\n        }\n        if (this.dateWithinRange(newDate)) {\n          this.date = newDate;\n          this.viewDate = newViewDate;\n          this.setValue();\n          this.update();\n          e.preventDefault();\n          dateChanged = true;\n        }\n        break;\n      case 38: // up\n      case 40: // down\n        if (!this.keyboardNavigation) {break;}\n        dir = e.keyCode == 38 ? -1 : 1;\n        if (e.ctrlKey) {\n          newDate = this.moveYear(this.date, dir);\n          newViewDate = this.moveYear(this.viewDate, dir);\n        } else if (e.shiftKey) {\n          newDate = this.moveMonth(this.date, dir);\n          newViewDate = this.moveMonth(this.viewDate, dir);\n        } else {\n          newDate = new Date(this.date.valueOf());\n          newDate.setUTCDate(this.date.getUTCDate() + dir * 7);\n          newViewDate = new Date(this.viewDate.valueOf());\n          newViewDate.setUTCDate(this.viewDate.getUTCDate() + dir * 7);\n        }\n        if (this.dateWithinRange(newDate)) {\n          this.date = newDate;\n          this.viewDate = newViewDate;\n          this.setValue();\n          this.update();\n          e.preventDefault();\n          dateChanged = true;\n        }\n        break;\n      case 13: // enter\n        this.hide();\n        e.preventDefault();\n        break;\n      case 9: // tab\n        this.hide();\n        break;\n      }\n      if (dateChanged) {\n        this.element.trigger({\n          type: \"changeDate\",\n          date: this.date\n        });\n        let element;\n        if (this.isInput) {\n          element = this.element;\n        } else if (this.component) {\n          element = this.element.find(\"input\");\n        }\n        if (element) {\n          element.change();\n        }\n      }\n    },\n\n    showMode: function(dir) {\n\n      if (dir) {\n        let newViewMode = Math.max(0, Math.min(DPGlobal.modes.length - 1, this.viewMode + dir));\n        if (newViewMode >= this.minView && newViewMode <= this.maxView) {\n          this.viewMode = newViewMode;\n        }\n      }\n\n      /*\n                vitalets: fixing bug of very special conditions:\n                jquery 1.7.1 + webkit + show inline datepicker in bootstrap popover.\n                Method show() does not set display css correctly and datepicker is not shown.\n                Changed to .css('display', 'block') solve the problem.\n                See https://github.com/vitalets/x-editable/issues/37\n\n                In jquery 1.7.2+ everything works fine.\n            */\n      // this.picker.find('>div').hide().filter('.datepicker-'+DPGlobal.modes[this.viewMode].clsName).show();\n      this.picker.find(\">div\").hide().filter(`.datepicker-${DPGlobal.modes[this.viewMode].clsName}`).css(\"display\", \"block\");\n      this.updateNavArrows();\n    },\n\n    changeViewDate: function(date) {\n      this.date = date;\n      this.viewDate = date;\n      this.fill();\n    },\n\n    reset: function(e) {\n      this._setDate(null, \"date\");\n    }\n  };\n\n  $.fn.fdatepicker = function(option) {\n    let args = Array(...arguments);\n    args.shift();\n    return this.each(function() {\n      let $this = $(this),\n          data = $this.data(\"datepicker\"),\n          options = typeof option === \"object\" && option;\n      if (!data) {\n        $this.data(\"datepicker\", (data = new Datepicker(this, $.extend({}, $.fn.fdatepicker.defaults, options))));\n      }\n      if (typeof option === \"string\" && typeof data[option] === \"function\") {\n        data[option](...args);\n      }\n    });\n  };\n\n  $.fn.fdatepicker.defaults = {\n    onRender: function(date) {\n      return \"\";\n    }\n  };\n  $.fn.fdatepicker.Constructor = Datepicker;\n  var dates = $.fn.fdatepicker.dates = {\n    \"en\": {\n      days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n      daysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n      daysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n      months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      today: \"Today\",\n      titleFormat: \"MM yyyy\"\n    }\n  };\n\n  var DPGlobal = {\n    modes: [{\n      clsName: \"minutes\",\n      navFnc: \"Hours\",\n      navStep: 1\n    }, {\n      clsName: \"hours\",\n      navFnc: \"Date\",\n      navStep: 1\n    }, {\n      clsName: \"days\",\n      navFnc: \"Month\",\n      navStep: 1\n    }, {\n      clsName: \"months\",\n      navFnc: \"FullYear\",\n      navStep: 1\n    }, {\n      clsName: \"years\",\n      navFnc: \"FullYear\",\n      navStep: 10\n    }],\n    isLeapYear: function(year) {\n      return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0));\n    },\n    getDaysInMonth: function(year, month) {\n      return [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\n    },\n    validParts: /hh?|ii?|ss?|dd?|mm?|MM?|yy(?:yy)?/g,\n    nonpunctuation: /[^ -\\/:-@\\[\\u3400-\\u9fff-`{-~\\t\\n\\r]+/g,\n    parseFormat: function(format) {\n      // IE treats \\0 as a string end in inputs (truncating the value),\n      // so it's a bad format delimiter, anyway\n      let separators = format.replace(this.validParts, \"\\0\").split(\"\\0\"),\n          parts = format.match(this.validParts);\n      if (!separators || !separators.length || !parts || parts.length === 0) {\n        throw new Error(\"Invalid date format.\");\n      }\n      this.formatText = format;\n      return {\n        separators: separators,\n        parts: parts\n      };\n    },\n    parseDate: function(date, format, language) {\n      if (date instanceof Date) {return new Date(date.valueOf() - date.getTimezoneOffset() * 60000);}\n      if (/^\\d{4}\\-\\d{1,2}\\-\\d{1,2}$/.test(date)) {\n        format = this.parseFormat(\"yyyy-mm-dd\");\n      }\n      if (/^\\d{4}\\-\\d{1,2}\\-\\d{1,2}[T ]\\d{1,2}\\:\\d{1,2}$/.test(date)) {\n        format = this.parseFormat(\"yyyy-mm-dd hh:ii\");\n      }\n      if (/^\\d{4}\\-\\d{1,2}\\-\\d{1,2}[T ]\\d{1,2}\\:\\d{1,2}\\:\\d{1,2}[Z]{0,1}$/.test(date)) {\n        format = this.parseFormat(\"yyyy-mm-dd hh:ii:ss\");\n      }\n      if (/^[-+]\\d+[dmwy]([\\s,]+[-+]\\d+[dmwy])*$/.test(date)) {\n        var part_re = /([-+]\\d+)([dmwy])/,\n            parts = date.match(/([-+]\\d+)([dmwy])/g),\n            part, dir;\n        date = new Date();\n        for (var i = 0; i < parts.length; i++) {\n          part = part_re.exec(parts[i]);\n          dir = parseInt(part[1]);\n          switch (part[2]) {\n          case \"d\":\n            date.setUTCDate(date.getUTCDate() + dir);\n            break;\n          case \"m\":\n            date = Datetimepicker.prototype.moveMonth.call(Datetimepicker.prototype, date, dir);\n            break;\n          case \"w\":\n            date.setUTCDate(date.getUTCDate() + dir * 7);\n            break;\n          case \"y\":\n            date = Datetimepicker.prototype.moveYear.call(Datetimepicker.prototype, date, dir);\n            break;\n          }\n        }\n        return UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n      }\n      var parts = date && date.match(this.nonpunctuation) || [],\n          date = new Date(),\n          parsed = {},\n          setters_order = [\"hh\", \"h\", \"ii\", \"i\", \"ss\", \"s\", \"yyyy\", \"yy\", \"M\", \"MM\", \"m\", \"mm\", \"d\", \"dd\"],\n          setters_map = {\n            hh: function(d, v) {\n              return d.setUTCHours(v);\n            },\n            h: function(d, v) {\n              return d.setUTCHours(v);\n            },\n            ii: function(d, v) {\n              return d.setUTCMinutes(v);\n            },\n            i: function(d, v) {\n              return d.setUTCMinutes(v);\n            },\n            ss: function(d, v) {\n              return d.setUTCSeconds(v);\n            },\n            s: function(d, v) {\n              return d.setUTCSeconds(v);\n            },\n            yyyy: function(d, v) {\n              return d.setUTCFullYear(v);\n            },\n            yy: function(d, v) {\n              return d.setUTCFullYear(2000 + v);\n            },\n            m: function(d, v) {\n              v -= 1;\n              while (v < 0) {v += 12;}\n              v %= 12;\n              d.setUTCMonth(v);\n              while (d.getUTCMonth() != v)\n              {d.setUTCDate(d.getUTCDate() - 1);}\n              return d;\n            },\n            d: function(d, v) {\n              return d.setUTCDate(v);\n            }\n          },\n          val, filtered, part;\n      setters_map.M = setters_map.MM = setters_map.mm = setters_map.m;\n      setters_map.dd = setters_map.d;\n      date = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0); // date.getHours(), date.getMinutes(), date.getSeconds());\n      if (parts.length == format.parts.length) {\n        for (var i = 0, cnt = format.parts.length; i < cnt; i++) {\n          val = parseInt(parts[i], 10);\n          part = format.parts[i];\n          if (isNaN(val)) {\n            switch (part) {\n            case \"MM\":\n              filtered = $(dates[language].months).filter(function() {\n                let m = this.slice(0, parts[i].length),\n                    p = parts[i].slice(0, m.length);\n                return m == p;\n              });\n              val = $.inArray(filtered[0], dates[language].months) + 1;\n              break;\n            case \"M\":\n              filtered = $(dates[language].monthsShort).filter(function() {\n                let m = this.slice(0, parts[i].length),\n                    p = parts[i].slice(0, m.length);\n                return m == p;\n              });\n              val = $.inArray(filtered[0], dates[language].monthsShort) + 1;\n              break;\n            }\n          }\n          parsed[part] = val;\n        }\n        for (var i = 0, s; i < setters_order.length; i++) {\n          s = setters_order[i];\n          if (s in parsed && !isNaN(parsed[s]))\n          {setters_map[s](date, parsed[s])}\n        }\n      }\n      return date;\n    },\n    formatDate: function(date, format, language) {\n      if (date == null) {\n        return \"\";\n      }\n      let val = {\n        h: date.getUTCHours(),\n        i: date.getUTCMinutes(),\n        s: date.getUTCSeconds(),\n        d: date.getUTCDate(),\n        m: date.getUTCMonth() + 1,\n        M: dates[language].monthsShort[date.getUTCMonth()],\n        MM: dates[language].months[date.getUTCMonth()],\n        yy: date.getUTCFullYear().toString().substring(2),\n        yyyy: date.getUTCFullYear()\n      };\n      val.hh = (val.h < 10 ? \"0\" : \"\") + val.h;\n      val.ii = (val.i < 10 ? \"0\" : \"\") + val.i;\n      val.ss = (val.s < 10 ? \"0\" : \"\") + val.s;\n      val.dd = (val.d < 10 ? \"0\" : \"\") + val.d;\n      val.mm = (val.m < 10 ? \"0\" : \"\") + val.m;\n      var date = [],\n          seps = $.extend([], format.separators);\n      for (let i = 0, cnt = format.parts.length; i < cnt; i++) {\n        if (seps.length)\n        {date.push(seps.shift())}\n        date.push(val[format.parts[i]]);\n      }\n      return date.join(\"\");\n    },\n    convertViewMode: function(viewMode) {\n      switch (viewMode) {\n      case 4:\n      case \"decade\":\n        viewMode = 4;\n        break;\n      case 3:\n      case \"year\":\n        viewMode = 3;\n        break;\n      case 2:\n      case \"month\":\n        viewMode = 2;\n        break;\n      case 1:\n      case \"day\":\n        viewMode = 1;\n        break;\n      case 0:\n      case \"hour\":\n        viewMode = 0;\n        break;\n      }\n\n      return viewMode;\n    },\n    headTemplate: function(leftArrow, rightArrow) {return (`${\"<thead>\" +\n            \"<tr>\" +\n            '<th class=\"prev\">'}${leftArrow}</th>` +\n            \"<th colspan=\\\"5\\\" class=\\\"date-switch\\\"></th>\" +\n            `<th class=\"next\">${rightArrow}</th>` +\n            \"</tr>\" +\n            \"</thead>\")},\n    contTemplate: '<tbody><tr><td colspan=\"7\"></td></tr></tbody>',\n    footTemplate: '<tfoot><tr><th colspan=\"7\" class=\"today\"></th></tr></tfoot>'\n  };\n  DPGlobal.template = function(leftArrow, rightArrow, closeIcon) {return (`${'<div class=\"datepicker\">' +\n        '<div class=\"datepicker-minutes\">' +\n        '<table class=\" table-condensed\">'}${\n    DPGlobal.headTemplate(leftArrow, rightArrow)\n  }${DPGlobal.contTemplate\n  }${DPGlobal.footTemplate\n  }</table>` +\n        \"</div>\" +\n        \"<div class=\\\"datepicker-hours\\\">\" +\n        `<table class=\" table-condensed\">${\n          DPGlobal.headTemplate(leftArrow, rightArrow)\n        }${DPGlobal.contTemplate\n        }${DPGlobal.footTemplate\n        }</table>` +\n        \"</div>\" +\n        \"<div class=\\\"datepicker-days\\\">\" +\n        `<table class=\" table-condensed\">${\n          DPGlobal.headTemplate(leftArrow, rightArrow)\n        }<tbody></tbody>${\n          DPGlobal.footTemplate\n        }</table>` +\n        \"</div>\" +\n        \"<div class=\\\"datepicker-months\\\">\" +\n        `<table class=\"table-condensed\">${\n          DPGlobal.headTemplate(leftArrow, rightArrow)\n        }${DPGlobal.contTemplate\n        }${DPGlobal.footTemplate\n        }</table>` +\n        \"</div>\" +\n        \"<div class=\\\"datepicker-years\\\">\" +\n        `<table class=\"table-condensed\">${\n          DPGlobal.headTemplate(leftArrow, rightArrow)\n        }${DPGlobal.contTemplate\n        }${DPGlobal.footTemplate\n        }</table>` +\n        \"</div>\" +\n        `<a class=\"button datepicker-close tiny alert right\" style=\"width:auto;\">${closeIcon}</a>` +\n        \"</div>\")};\n\n  $.fn.fdatepicker.DPGlobal = DPGlobal;\n\n}(window.jQuery));\n","/* eslint-disable */\n\n/*\n  Modified file from the original tribute.js\n  Adding inside click event the conditional if the li element has no disabled-tribute-element class name. if true, then it must continue with normal behaviour.\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Tribute = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nrequire(\"./utils\");\n\nvar _TributeEvents = _interopRequireDefault(require(\"./TributeEvents\"));\n\nvar _TributeMenuEvents = _interopRequireDefault(require(\"./TributeMenuEvents\"));\n\nvar _TributeRange = _interopRequireDefault(require(\"./TributeRange\"));\n\nvar _TributeSearch = _interopRequireDefault(require(\"./TributeSearch\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Tribute =\n/*#__PURE__*/\nfunction () {\n  function Tribute(_ref) {\n    var _this = this;\n\n    var _ref$values = _ref.values,\n        values = _ref$values === void 0 ? null : _ref$values,\n        _ref$iframe = _ref.iframe,\n        iframe = _ref$iframe === void 0 ? null : _ref$iframe,\n        _ref$selectClass = _ref.selectClass,\n        selectClass = _ref$selectClass === void 0 ? 'highlight' : _ref$selectClass,\n        _ref$trigger = _ref.trigger,\n        trigger = _ref$trigger === void 0 ? '@' : _ref$trigger,\n        _ref$autocompleteMode = _ref.autocompleteMode,\n        autocompleteMode = _ref$autocompleteMode === void 0 ? false : _ref$autocompleteMode,\n        _ref$selectTemplate = _ref.selectTemplate,\n        selectTemplate = _ref$selectTemplate === void 0 ? null : _ref$selectTemplate,\n        _ref$menuItemTemplate = _ref.menuItemTemplate,\n        menuItemTemplate = _ref$menuItemTemplate === void 0 ? null : _ref$menuItemTemplate,\n        _ref$lookup = _ref.lookup,\n        lookup = _ref$lookup === void 0 ? 'key' : _ref$lookup,\n        _ref$fillAttr = _ref.fillAttr,\n        fillAttr = _ref$fillAttr === void 0 ? 'value' : _ref$fillAttr,\n        _ref$collection = _ref.collection,\n        collection = _ref$collection === void 0 ? null : _ref$collection,\n        _ref$menuContainer = _ref.menuContainer,\n        menuContainer = _ref$menuContainer === void 0 ? null : _ref$menuContainer,\n        _ref$noMatchTemplate = _ref.noMatchTemplate,\n        noMatchTemplate = _ref$noMatchTemplate === void 0 ? null : _ref$noMatchTemplate,\n        _ref$requireLeadingSp = _ref.requireLeadingSpace,\n        requireLeadingSpace = _ref$requireLeadingSp === void 0 ? true : _ref$requireLeadingSp,\n        _ref$allowSpaces = _ref.allowSpaces,\n        allowSpaces = _ref$allowSpaces === void 0 ? false : _ref$allowSpaces,\n        _ref$replaceTextSuffi = _ref.replaceTextSuffix,\n        replaceTextSuffix = _ref$replaceTextSuffi === void 0 ? null : _ref$replaceTextSuffi,\n        _ref$positionMenu = _ref.positionMenu,\n        positionMenu = _ref$positionMenu === void 0 ? true : _ref$positionMenu,\n        _ref$spaceSelectsMatc = _ref.spaceSelectsMatch,\n        spaceSelectsMatch = _ref$spaceSelectsMatc === void 0 ? false : _ref$spaceSelectsMatc,\n        _ref$searchOpts = _ref.searchOpts,\n        searchOpts = _ref$searchOpts === void 0 ? {} : _ref$searchOpts,\n        _ref$menuItemLimit = _ref.menuItemLimit,\n        menuItemLimit = _ref$menuItemLimit === void 0 ? null : _ref$menuItemLimit;\n\n    _classCallCheck(this, Tribute);\n\n    this.autocompleteMode = autocompleteMode;\n    this.menuSelected = 0;\n    this.current = {};\n    this.inputEvent = false;\n    this.isActive = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.hasTrailingSpace = false;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n\n    if (this.autocompleteMode) {\n      trigger = '';\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [{\n        // symbol that starts the lookup\n        trigger: trigger,\n        // is it wrapped in an iframe\n        iframe: iframe,\n        // class applied to selected item\n        selectClass: selectClass,\n        // function called on select that retuns the content to insert\n        selectTemplate: (selectTemplate || Tribute.defaultSelectTemplate).bind(this),\n        // function called that returns content for an item\n        menuItemTemplate: (menuItemTemplate || Tribute.defaultMenuItemTemplate).bind(this),\n        // function called when menu is empty, disables hiding of menu.\n        noMatchTemplate: function (t) {\n          if (typeof t === 'function') {\n            return t.bind(_this);\n          }\n\n          return noMatchTemplate || function () {\n            return '';\n          }.bind(_this);\n        }(noMatchTemplate),\n        // column to search against in the object\n        lookup: lookup,\n        // column that contains the content to insert by default\n        fillAttr: fillAttr,\n        // array of objects or a function returning an array of objects\n        values: values,\n        requireLeadingSpace: requireLeadingSpace,\n        searchOpts: searchOpts,\n        menuItemLimit: menuItemLimit\n      }];\n    } else if (collection) {\n      if (this.autocompleteMode) console.warn('Tribute in autocomplete mode does not work for collections');\n      this.collection = collection.map(function (item) {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          selectTemplate: (item.selectTemplate || Tribute.defaultSelectTemplate).bind(_this),\n          menuItemTemplate: (item.menuItemTemplate || Tribute.defaultMenuItemTemplate).bind(_this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: function (t) {\n            if (typeof t === 'function') {\n              return t.bind(_this);\n            }\n\n            return null;\n          }(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit\n        };\n      });\n    } else {\n      throw new Error('[Tribute] No collection specified.');\n    }\n\n    new _TributeRange[\"default\"](this);\n    new _TributeEvents[\"default\"](this);\n    new _TributeMenuEvents[\"default\"](this);\n    new _TributeSearch[\"default\"](this);\n  }\n\n  _createClass(Tribute, [{\n    key: \"triggers\",\n    value: function triggers() {\n      return this.collection.map(function (config) {\n        return config.trigger;\n      });\n    }\n  }, {\n    key: \"attach\",\n    value: function attach(el) {\n      if (!el) {\n        throw new Error('[Tribute] Must pass in a DOM node or NodeList.');\n      } // Check if it is a jQuery collection\n\n\n      if (typeof jQuery !== 'undefined' && el instanceof jQuery) {\n        el = el.get();\n      } // Is el an Array/Array-like object?\n\n\n      if (el.constructor === NodeList || el.constructor === HTMLCollection || el.constructor === Array) {\n        var length = el.length;\n\n        for (var i = 0; i < length; ++i) {\n          this._attach(el[i]);\n        }\n      } else {\n        this._attach(el);\n      }\n    }\n  }, {\n    key: \"_attach\",\n    value: function _attach(el) {\n      if (el.hasAttribute('data-tribute')) {\n        console.warn('Tribute was already bound to ' + el.nodeName);\n      }\n\n      this.ensureEditable(el);\n      this.events.bind(el);\n      el.setAttribute('data-tribute', true);\n    }\n  }, {\n    key: \"ensureEditable\",\n    value: function ensureEditable(element) {\n      if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n        if (element.contentEditable) {\n          element.contentEditable = true;\n        } else {\n          throw new Error('[Tribute] Cannot bind to ' + element.nodeName);\n        }\n      }\n    }\n  }, {\n    key: \"createMenu\",\n    value: function createMenu() {\n      var wrapper = this.range.getDocument().createElement('div'),\n          ul = this.range.getDocument().createElement('ul');\n      wrapper.className = 'tribute-container';\n      wrapper.setAttribute('aria-expanded','true');\n      ul.setAttribute('id','results');\n      wrapper.appendChild(ul);\n\n      if (this.menuContainer) {\n        return this.menuContainer.appendChild(wrapper);\n      }\n\n      return this.range.getDocument().body.appendChild(wrapper);\n    }\n  }, {\n    key: \"showMenuFor\",\n    value: function showMenuFor(element, scrollTo) {\n      var _this2 = this;\n\n      // Only proceed if menu isn't already shown for the current element & mentionText\n      if (this.isActive && this.current.element === element && this.current.mentionText === this.currentMentionTextSnapshot) {\n        return;\n      }\n\n      this.currentMentionTextSnapshot = this.current.mentionText; // create the menu if it doesn't exist.\n\n      if (!this.menu) {\n        this.menu = this.createMenu();\n        element.tributeMenu = this.menu;\n        this.menuEvents.bind(this.menu);\n      }\n\n      this.isActive = true;\n      this.menuSelected = 0;\n\n      if (!this.current.mentionText) {\n        this.current.mentionText = '';\n      }\n\n      var processValues = function processValues(values) {\n        // Tribute may not be active any more by the time the value callback returns\n        if (!_this2.isActive) {\n          return;\n        }\n\n        var items = _this2.search.filter(_this2.current.mentionText, values, {\n          pre: _this2.current.collection.searchOpts.pre || '<span>',\n          post: _this2.current.collection.searchOpts.post || '</span>',\n          skip: _this2.current.collection.searchOpts.skip,\n          extract: function extract(el) {\n            if (typeof _this2.current.collection.lookup === 'string') {\n              return el[_this2.current.collection.lookup];\n            } else if (typeof _this2.current.collection.lookup === 'function') {\n              return _this2.current.collection.lookup(el, _this2.current.mentionText);\n            } else {\n              throw new Error('Invalid lookup attribute, lookup must be string or function.');\n            }\n          }\n        });\n\n        if (_this2.current.collection.menuItemLimit) {\n          items = items.slice(0, _this2.current.collection.menuItemLimit);\n        }\n\n        _this2.current.filteredItems = items;\n\n        var ul = _this2.menu.querySelector('ul');\n\n        _this2.range.positionMenuAtCaret(scrollTo);\n\n        if (!items.length) {\n          var noMatchEvent = new CustomEvent('tribute-no-match', {\n            detail: _this2.menu\n          });\n\n          _this2.current.element.dispatchEvent(noMatchEvent);\n\n          if (typeof _this2.current.collection.noMatchTemplate === 'function' && !_this2.current.collection.noMatchTemplate() || !_this2.current.collection.noMatchTemplate) {\n            _this2.hideMenu();\n          } else {\n            typeof _this2.current.collection.noMatchTemplate === 'function' ? ul.innerHTML = _this2.current.collection.noMatchTemplate() : ul.innerHTML = _this2.current.collection.noMatchTemplate;\n          }\n\n          return;\n        }\n\n        ul.innerHTML = '';\n\n        var fragment = _this2.range.getDocument().createDocumentFragment();\n\n        items.forEach(function (item, index) {\n          var li = _this2.range.getDocument().createElement('li');\n          li.setAttribute('role', 'option');\n          li.setAttribute('data-index', index);\n          li.addEventListener('mousemove', function (e) {\n            var _this2$_findLiTarget = _this2._findLiTarget(e.target),\n                _this2$_findLiTarget2 = _slicedToArray(_this2$_findLiTarget, 2),\n                li = _this2$_findLiTarget2[0],\n                index = _this2$_findLiTarget2[1];\n\n            if (e.movementY !== 0) {\n              _this2.events.setActiveLi(index);\n            }\n          });\n\n          if (_this2.menuSelected === index) {\n            li.className = _this2.current.collection.selectClass;\n          }\n\n          li.innerHTML = _this2.current.collection.menuItemTemplate(item);\n          fragment.appendChild(li);\n        });\n        ul.appendChild(fragment);\n      };\n\n      if (typeof this.current.collection.values === 'function') {\n        this.current.collection.values(this.current.mentionText, processValues);\n      } else {\n        processValues(this.current.collection.values);\n      }\n    }\n  }, {\n    key: \"_findLiTarget\",\n    value: function _findLiTarget(el) {\n      if (!el) return [];\n      var index = el.getAttribute('data-index');\n      return !index ? this._findLiTarget(el.parentNode) : [el, index];\n    }\n  }, {\n    key: \"showMenuForCollection\",\n    value: function showMenuForCollection(element, collectionIndex) {\n      if (element !== document.activeElement) {\n        this.placeCaretAtEnd(element);\n      }\n\n      this.current.collection = this.collection[collectionIndex || 0];\n      this.current.externalTrigger = true;\n      this.current.element = element;\n      if (element.isContentEditable) this.insertTextAtCursor(this.current.collection.trigger);else this.insertAtCaret(element, this.current.collection.trigger);\n      this.showMenuFor(element);\n    } // TODO: make sure this works for inputs/textareas\n\n  }, {\n    key: \"placeCaretAtEnd\",\n    value: function placeCaretAtEnd(el) {\n      el.focus();\n\n      if (typeof window.getSelection != \"undefined\" && typeof document.createRange != \"undefined\") {\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        range.collapse(false);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n      } else if (typeof document.body.createTextRange != \"undefined\") {\n        var textRange = document.body.createTextRange();\n        textRange.moveToElementText(el);\n        textRange.collapse(false);\n        textRange.select();\n      }\n    } // for contenteditable\n\n  }, {\n    key: \"insertTextAtCursor\",\n    value: function insertTextAtCursor(text) {\n      var sel, range, html;\n      sel = window.getSelection();\n      range = sel.getRangeAt(0);\n      range.deleteContents();\n      var textNode = document.createTextNode(text);\n      range.insertNode(textNode);\n      range.selectNodeContents(textNode);\n      range.collapse(false);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } // for regular inputs\n\n  }, {\n    key: \"insertAtCaret\",\n    value: function insertAtCaret(textarea, text) {\n      var scrollPos = textarea.scrollTop;\n      var caretPos = textarea.selectionStart;\n      var front = textarea.value.substring(0, caretPos);\n      var back = textarea.value.substring(textarea.selectionEnd, textarea.value.length);\n      textarea.value = front + text + back;\n      caretPos = caretPos + text.length;\n      textarea.selectionStart = caretPos;\n      textarea.selectionEnd = caretPos;\n      textarea.focus();\n      textarea.scrollTop = scrollPos;\n    }\n  }, {\n    key: \"hideMenu\",\n    value: function hideMenu() {\n      if (this.menu) {\n        this.menu.style.cssText = 'display: none;';\n        this.isActive = false;\n        this.menuSelected = 0;\n        this.current = {};\n      }\n    }\n  }, {\n    key: \"selectItemAtIndex\",\n    value: function selectItemAtIndex(index, originalEvent) {\n      index = parseInt(index);\n      if (typeof index !== 'number' || isNaN(index)) return;\n      var item = this.current.filteredItems[index];\n      var content = this.current.collection.selectTemplate(item);\n      if (content !== null) this.replaceText(content, originalEvent, item);\n    }\n  }, {\n    key: \"replaceText\",\n    value: function replaceText(content, originalEvent, item) {\n      this.range.replaceTriggerText(content, true, true, originalEvent, item);\n    }\n  }, {\n    key: \"_append\",\n    value: function _append(collection, newValues, replace) {\n      if (typeof collection.values === 'function') {\n        throw new Error('Unable to append to values, as it is a function.');\n      } else if (!replace) {\n        collection.values = collection.values.concat(newValues);\n      } else {\n        collection.values = newValues;\n      }\n    }\n  }, {\n    key: \"append\",\n    value: function append(collectionIndex, newValues, replace) {\n      var index = parseInt(collectionIndex);\n      if (typeof index !== 'number') throw new Error('please provide an index for the collection to update.');\n      var collection = this.collection[index];\n\n      this._append(collection, newValues, replace);\n    }\n  }, {\n    key: \"appendCurrent\",\n    value: function appendCurrent(newValues, replace) {\n      if (this.isActive) {\n        this._append(this.current.collection, newValues, replace);\n      } else {\n        throw new Error('No active state. Please use append instead and pass an index.');\n      }\n    }\n  }, {\n    key: \"detach\",\n    value: function detach(el) {\n      if (!el) {\n        throw new Error('[Tribute] Must pass in a DOM node or NodeList.');\n      } // Check if it is a jQuery collection\n\n\n      if (typeof jQuery !== 'undefined' && el instanceof jQuery) {\n        el = el.get();\n      } // Is el an Array/Array-like object?\n\n\n      if (el.constructor === NodeList || el.constructor === HTMLCollection || el.constructor === Array) {\n        var length = el.length;\n\n        for (var i = 0; i < length; ++i) {\n          this._detach(el[i]);\n        }\n      } else {\n        this._detach(el);\n      }\n    }\n  }, {\n    key: \"_detach\",\n    value: function _detach(el) {\n      var _this3 = this;\n\n      this.events.unbind(el);\n\n      if (el.tributeMenu) {\n        this.menuEvents.unbind(el.tributeMenu);\n      }\n\n      setTimeout(function () {\n        el.removeAttribute('data-tribute');\n        _this3.isActive = false;\n\n        if (el.tributeMenu) {\n          el.tributeMenu.remove();\n        }\n      });\n    }\n  }], [{\n    key: \"defaultSelectTemplate\",\n    value: function defaultSelectTemplate(item) {\n      if (typeof item === 'undefined') return null;\n\n      if (this.range.isContentEditable(this.current.element)) {\n        return '<span class=\"tribute-mention\">' + (this.current.collection.trigger + item.original[this.current.collection.fillAttr]) + '</span>';\n      }\n\n      return this.current.collection.trigger + item.original[this.current.collection.fillAttr];\n    }\n  }, {\n    key: \"defaultMenuItemTemplate\",\n    value: function defaultMenuItemTemplate(matchItem) {\n      return matchItem.string;\n    }\n  }, {\n    key: \"inputTypes\",\n    value: function inputTypes() {\n      return ['TEXTAREA', 'INPUT'];\n    }\n  }]);\n\n  return Tribute;\n}();\n\nvar _default = Tribute;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;\n\n},{\"./TributeEvents\":2,\"./TributeMenuEvents\":3,\"./TributeRange\":4,\"./TributeSearch\":5,\"./utils\":7}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar TributeEvents =\n/*#__PURE__*/\nfunction () {\n  function TributeEvents(tribute) {\n    _classCallCheck(this, TributeEvents);\n\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  _createClass(TributeEvents, [{\n    key: \"bind\",\n    value: function bind(element) {\n      element.boundKeydown = this.keydown.bind(element, this);\n      element.boundKeyup = this.keyup.bind(element, this);\n      element.boundInput = this.input.bind(element, this);\n      element.addEventListener('keydown', element.boundKeydown, false);\n      element.addEventListener('keyup', element.boundKeyup, false);\n      element.addEventListener('input', element.boundInput, false);\n    }\n  }, {\n    key: \"unbind\",\n    value: function unbind(element) {\n      element.removeEventListener('keydown', element.boundKeydown, false);\n      element.removeEventListener('keyup', element.boundKeyup, false);\n      element.removeEventListener('input', element.boundInput, false);\n      delete element.boundKeydown;\n      delete element.boundKeyup;\n      delete element.boundInput;\n    }\n  }, {\n    key: \"keydown\",\n    value: function keydown(instance, event) {\n      if (instance.shouldDeactivate(event)) {\n        instance.tribute.isActive = false;\n        instance.tribute.hideMenu();\n      }\n\n      var element = this;\n      instance.commandEvent = false;\n      TributeEvents.keys().forEach(function (o) {\n        if (o.key === event.keyCode) {\n          instance.commandEvent = true;\n          instance.callbacks()[o.value.toLowerCase()](event, element);\n        }\n      });\n    }\n  }, {\n    key: \"input\",\n    value: function input(instance, event) {\n      instance.inputEvent = true;\n      instance.keyup.call(this, instance, event);\n    }\n  }, {\n    key: \"click\",\n    value: function click(instance, event) {\n      var tribute = instance.tribute;\n\n      if (tribute.menu && tribute.menu.contains(event.target)) {\n        var li = event.target;\n        event.preventDefault();\n        event.stopPropagation();\n\n        while (li.nodeName.toLowerCase() !== 'li') {\n          li = li.parentNode;\n\n          if (!li || li === tribute.menu) {\n            throw new Error('cannot find the <li> container for the click');\n          }\n        }\n\n        if (li.getElementsByClassName(\"disabled-tribute-element\")[0]==undefined){\n          tribute.selectItemAtIndex(li.getAttribute('data-index'), event);\n          tribute.hideMenu(); // TODO: should fire with externalTrigger and target is outside of menu\n        }\n      } else if (tribute.current.element && !tribute.current.externalTrigger) {\n        tribute.current.externalTrigger = false;\n        setTimeout(function () {\n          return tribute.hideMenu();\n        });\n      }\n    }\n  }, {\n    key: \"keyup\",\n    value: function keyup(instance, event) {\n      if (instance.inputEvent) {\n        instance.inputEvent = false;\n      }\n\n      instance.updateSelection(this);\n      if (event.keyCode === 27) return;\n\n      if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\n        instance.tribute.hasTrailingSpace = false;\n        instance.commandEvent = true;\n        instance.callbacks()[\"space\"](event, this);\n        return;\n      }\n\n      if (!instance.tribute.isActive) {\n        if (instance.tribute.autocompleteMode) {\n          instance.callbacks().triggerChar(event, this, '');\n        } else {\n          var keyCode = instance.getKeyCode(instance, this, event);\n          if (isNaN(keyCode) || !keyCode) return;\n          var trigger = instance.tribute.triggers().find(function (trigger) {\n            return trigger.charCodeAt(0) === keyCode;\n          });\n\n          if (typeof trigger !== 'undefined') {\n            instance.callbacks().triggerChar(event, this, trigger);\n          }\n        }\n      }\n\n      if ((instance.tribute.current.trigger || instance.tribute.autocompleteMode) && instance.commandEvent === false || instance.tribute.isActive && event.keyCode === 8) {\n        instance.tribute.showMenuFor(this, true);\n      }\n    }\n  }, {\n    key: \"shouldDeactivate\",\n    value: function shouldDeactivate(event) {\n      if (!this.tribute.isActive) return false;\n\n      if (this.tribute.current.mentionText.length === 0) {\n        var eventKeyPressed = false;\n        TributeEvents.keys().forEach(function (o) {\n          if (event.keyCode === o.key) eventKeyPressed = true;\n        });\n        return !eventKeyPressed;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getKeyCode\",\n    value: function getKeyCode(instance, el, event) {\n      var _char;\n\n      var tribute = instance.tribute;\n      var info = tribute.range.getTriggerInfo(false, tribute.hasTrailingSpace, true, tribute.allowSpaces, tribute.autocompleteMode);\n\n      if (info) {\n        return info.mentionTriggerChar.charCodeAt(0);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"updateSelection\",\n    value: function updateSelection(el) {\n      this.tribute.current.element = el;\n      var info = this.tribute.range.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode);\n\n      if (info) {\n        this.tribute.current.selectedPath = info.mentionSelectedPath;\n        this.tribute.current.mentionText = info.mentionText;\n        this.tribute.current.selectedOffset = info.mentionSelectedOffset;\n      }\n    }\n  }, {\n    key: \"callbacks\",\n    value: function callbacks() {\n      var _this = this;\n\n      return {\n        triggerChar: function triggerChar(e, el, trigger) {\n          var tribute = _this.tribute;\n          tribute.current.trigger = trigger;\n          var collectionItem = tribute.collection.find(function (item) {\n            return item.trigger === trigger;\n          });\n          tribute.current.collection = collectionItem;\n          if (tribute.inputEvent) tribute.showMenuFor(el, true);\n        },\n        enter: function enter(e, el) {\n          // choose selection\n          if (_this.tribute.isActive && _this.tribute.current.filteredItems) {\n            e.preventDefault();\n            e.stopPropagation();\n            setTimeout(function () {\n              _this.tribute.selectItemAtIndex(_this.tribute.menuSelected, e);\n\n              _this.tribute.hideMenu();\n            }, 0);\n          }\n        },\n        escape: function escape(e, el) {\n          if (_this.tribute.isActive) {\n            e.preventDefault();\n            e.stopPropagation();\n            _this.tribute.isActive = false;\n\n            _this.tribute.hideMenu();\n          }\n        },\n        tab: function tab(e, el) {\n          // choose first match\n          _this.callbacks().enter(e, el);\n        },\n        space: function space(e, el) {\n          if (_this.tribute.isActive) {\n            if (_this.tribute.spaceSelectsMatch) {\n              _this.callbacks().enter(e, el);\n            } else if (!_this.tribute.allowSpaces) {\n              e.stopPropagation();\n              setTimeout(function () {\n                _this.tribute.hideMenu();\n\n                _this.tribute.isActive = false;\n              }, 0);\n            }\n          }\n        },\n        up: function up(e, el) {\n          // navigate up ul\n          if (_this.tribute.isActive && _this.tribute.current.filteredItems) {\n            e.preventDefault();\n            e.stopPropagation();\n            var count = _this.tribute.current.filteredItems.length,\n                selected = _this.tribute.menuSelected;\n\n            if (count > selected && selected > 0) {\n              _this.tribute.menuSelected--;\n\n              _this.setActiveLi();\n            } else if (selected === 0) {\n              _this.tribute.menuSelected = count - 1;\n\n              _this.setActiveLi();\n\n              _this.tribute.menu.scrollTop = _this.tribute.menu.scrollHeight;\n            }\n          }\n        },\n        down: function down(e, el) {\n          // navigate down ul\n          if (_this.tribute.isActive && _this.tribute.current.filteredItems) {\n            e.preventDefault();\n            e.stopPropagation();\n            var count = _this.tribute.current.filteredItems.length - 1,\n                selected = _this.tribute.menuSelected;\n\n            if (count > selected) {\n              _this.tribute.menuSelected++;\n\n              _this.setActiveLi();\n            } else if (count === selected) {\n              _this.tribute.menuSelected = 0;\n\n              _this.setActiveLi();\n\n              _this.tribute.menu.scrollTop = 0;\n            }\n          }\n        },\n        \"delete\": function _delete(e, el) {\n          if (_this.tribute.isActive && _this.tribute.current.mentionText.length < 1) {\n            _this.tribute.hideMenu();\n          } else if (_this.tribute.isActive) {\n            _this.tribute.showMenuFor(el);\n          }\n        }\n      };\n    }\n  }, {\n    key: \"setActiveLi\",\n    value: function setActiveLi(index) {\n      var lis = this.tribute.menu.querySelectorAll('li'),\n          length = lis.length >>> 0;\n      if (index) this.tribute.menuSelected = parseInt(index);\n\n      for (var i = 0; i < length; i++) {\n        var li = lis[i];\n\n        if (i === this.tribute.menuSelected) {\n          li.classList.add(this.tribute.current.collection.selectClass);\n          var liClientRect = li.getBoundingClientRect();\n          var menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n          if (liClientRect.bottom > menuClientRect.bottom) {\n            var scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n            this.tribute.menu.scrollTop += scrollDistance;\n          } else if (liClientRect.top < menuClientRect.top) {\n            var _scrollDistance = menuClientRect.top - liClientRect.top;\n\n            this.tribute.menu.scrollTop -= _scrollDistance;\n          }\n        } else {\n          li.classList.remove(this.tribute.current.collection.selectClass);\n        }\n      }\n    }\n  }, {\n    key: \"getFullHeight\",\n    value: function getFullHeight(elem, includeMargin) {\n      var height = elem.getBoundingClientRect().height;\n\n      if (includeMargin) {\n        var style = elem.currentStyle || window.getComputedStyle(elem);\n        return height + parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n      }\n\n      return height;\n    }\n  }], [{\n    key: \"keys\",\n    value: function keys() {\n      return [{\n        key: 9,\n        value: 'TAB'\n      }, {\n        key: 8,\n        value: 'DELETE'\n      }, {\n        key: 13,\n        value: 'ENTER'\n      }, {\n        key: 27,\n        value: 'ESCAPE'\n      }, {\n        key: 32,\n        value: 'SPACE'\n      }, {\n        key: 38,\n        value: 'UP'\n      }, {\n        key: 40,\n        value: 'DOWN'\n      }];\n    }\n  }]);\n\n  return TributeEvents;\n}();\n\nvar _default = TributeEvents;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar TributeMenuEvents =\n/*#__PURE__*/\nfunction () {\n  function TributeMenuEvents(tribute) {\n    _classCallCheck(this, TributeMenuEvents);\n\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  _createClass(TributeMenuEvents, [{\n    key: \"bind\",\n    value: function bind(menu) {\n      var _this = this;\n\n      this.menuClickEvent = this.tribute.events.click.bind(null, this);\n      this.menuContainerScrollEvent = this.debounce(function () {\n        if (_this.tribute.isActive) {\n          _this.tribute.showMenuFor(_this.tribute.current.element, false);\n        }\n      }, 300, false);\n      this.windowResizeEvent = this.debounce(function () {\n        if (_this.tribute.isActive) {\n          _this.tribute.range.positionMenuAtCaret(true);\n        }\n      }, 300, false); // fixes IE11 issues with mousedown\n\n      this.tribute.range.getDocument().addEventListener('MSPointerDown', this.menuClickEvent, false);\n      this.tribute.range.getDocument().addEventListener('mousedown', this.menuClickEvent, false);\n      window.addEventListener('resize', this.windowResizeEvent);\n\n      if (this.menuContainer) {\n        this.menuContainer.addEventListener('scroll', this.menuContainerScrollEvent, false);\n      } else {\n        window.addEventListener('scroll', this.menuContainerScrollEvent);\n      }\n    }\n  }, {\n    key: \"unbind\",\n    value: function unbind(menu) {\n      this.tribute.range.getDocument().removeEventListener('mousedown', this.menuClickEvent, false);\n      this.tribute.range.getDocument().removeEventListener('MSPointerDown', this.menuClickEvent, false);\n      window.removeEventListener('resize', this.windowResizeEvent);\n\n      if (this.menuContainer) {\n        this.menuContainer.removeEventListener('scroll', this.menuContainerScrollEvent, false);\n      } else {\n        window.removeEventListener('scroll', this.menuContainerScrollEvent);\n      }\n    }\n  }, {\n    key: \"debounce\",\n    value: function debounce(func, wait, immediate) {\n      var _this2 = this,\n          _arguments = arguments;\n\n      var timeout;\n      return function () {\n        var context = _this2,\n            args = _arguments;\n\n        var later = function later() {\n          timeout = null;\n          if (!immediate) func.apply(context, args);\n        };\n\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n      };\n    }\n  }]);\n\n  return TributeMenuEvents;\n}();\n\nvar _default = TributeMenuEvents;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// Thanks to https://github.com/jeff-collins/ment.io\nvar TributeRange =\n/*#__PURE__*/\nfunction () {\n  function TributeRange(tribute) {\n    _classCallCheck(this, TributeRange);\n\n    this.tribute = tribute;\n    this.tribute.range = this;\n  }\n\n  _createClass(TributeRange, [{\n    key: \"getDocument\",\n    value: function getDocument() {\n      var iframe;\n\n      if (this.tribute.current.collection) {\n        iframe = this.tribute.current.collection.iframe;\n      }\n\n      if (!iframe) {\n        return document;\n      }\n\n      return iframe.contentWindow.document;\n    }\n  }, {\n    key: \"positionMenuAtCaret\",\n    value: function positionMenuAtCaret(scrollTo) {\n      var _this = this;\n\n      var context = this.tribute.current,\n          coordinates;\n      var info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode);\n\n      if (typeof info !== 'undefined') {\n        if (!this.tribute.positionMenu) {\n          this.tribute.menu.style.cssText = \"display: block;\";\n          return;\n        }\n\n        if (!this.isContentEditable(context.element)) {\n          coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element, info.mentionPosition);\n        } else {\n          coordinates = this.getContentEditableCaretPosition(info.mentionPosition);\n        }\n\n        this.tribute.menu.style.cssText = \"top: \".concat(coordinates.top, \"px;\\n                                     left: \").concat(coordinates.left, \"px;\\n                                     right: \").concat(coordinates.right, \"px;\\n                                     bottom: \").concat(coordinates.bottom, \"px;\\n                                     position: absolute;\\n                                     display: block;\");\n\n        if (coordinates.left === 'auto') {\n          this.tribute.menu.style.left = 'auto';\n        }\n\n        if (coordinates.top === 'auto') {\n          this.tribute.menu.style.top = 'auto';\n        }\n\n        if (scrollTo) this.scrollIntoView();\n        window.setTimeout(function () {\n          var menuDimensions = {\n            width: _this.tribute.menu.offsetWidth,\n            height: _this.tribute.menu.offsetHeight\n          };\n\n          var menuIsOffScreen = _this.isMenuOffScreen(coordinates, menuDimensions);\n\n          var menuIsOffScreenHorizontally = window.innerWidth > menuDimensions.width && (menuIsOffScreen.left || menuIsOffScreen.right);\n          var menuIsOffScreenVertically = window.innerHeight > menuDimensions.height && (menuIsOffScreen.top || menuIsOffScreen.bottom);\n\n          if (menuIsOffScreenHorizontally || menuIsOffScreenVertically) {\n            _this.tribute.menu.style.cssText = 'display: none';\n\n            _this.positionMenuAtCaret(scrollTo);\n          }\n        }, 0);\n      } else {\n        this.tribute.menu.style.cssText = 'display: none';\n      }\n    }\n  }, {\n    key: \"selectElement\",\n    value: function selectElement(targetElement, path, offset) {\n      var range;\n      var elem = targetElement;\n\n      if (path) {\n        for (var i = 0; i < path.length; i++) {\n          elem = elem.childNodes[path[i]];\n\n          if (elem === undefined) {\n            return;\n          }\n\n          while (elem.length < offset) {\n            offset -= elem.length;\n            elem = elem.nextSibling;\n          }\n\n          if (elem.childNodes.length === 0 && !elem.length) {\n            elem = elem.previousSibling;\n          }\n        }\n      }\n\n      var sel = this.getWindowSelection();\n      range = this.getDocument().createRange();\n      range.setStart(elem, offset);\n      range.setEnd(elem, offset);\n      range.collapse(true);\n\n      try {\n        sel.removeAllRanges();\n      } catch (error) {}\n\n      sel.addRange(range);\n      targetElement.focus();\n    }\n  }, {\n    key: \"replaceTriggerText\",\n    value: function replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\n      var info = this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode);\n\n      if (info !== undefined) {\n        var context = this.tribute.current;\n        var replaceEvent = new CustomEvent('tribute-replaced', {\n          detail: {\n            item: item,\n            instance: context,\n            context: info,\n            event: originalEvent\n          }\n        });\n\n        if (!this.isContentEditable(context.element)) {\n          var myField = this.tribute.current.element;\n          var textSuffix = typeof this.tribute.replaceTextSuffix == 'string' ? this.tribute.replaceTextSuffix : ' ';\n          text += textSuffix;\n          var startPos = info.mentionPosition;\n          var endPos = info.mentionPosition + info.mentionText.length + textSuffix.length;\n          myField.value = myField.value.substring(0, startPos) + text + myField.value.substring(endPos, myField.value.length);\n          myField.selectionStart = startPos + text.length;\n          myField.selectionEnd = startPos + text.length;\n        } else {\n          // add a space to the end of the pasted text\n          var _textSuffix = typeof this.tribute.replaceTextSuffix == 'string' ? this.tribute.replaceTextSuffix : '\\xA0';\n\n          text += _textSuffix;\n          this.pasteHtml(text, info.mentionPosition, info.mentionPosition + info.mentionText.length + !this.tribute.autocompleteMode);\n        }\n\n        context.element.dispatchEvent(replaceEvent);\n      }\n    }\n  }, {\n    key: \"pasteHtml\",\n    value: function pasteHtml(html, startPos, endPos) {\n      var range, sel;\n      sel = this.getWindowSelection();\n      range = this.getDocument().createRange();\n      range.setStart(sel.anchorNode, startPos);\n      range.setEnd(sel.anchorNode, endPos);\n      range.deleteContents();\n      var el = this.getDocument().createElement('div');\n      el.innerHTML = html;\n      var frag = this.getDocument().createDocumentFragment(),\n          node,\n          lastNode;\n\n      while (node = el.firstChild) {\n        lastNode = frag.appendChild(node);\n      }\n\n      range.insertNode(frag); // Preserve the selection\n\n      if (lastNode) {\n        range = range.cloneRange();\n        range.setStartAfter(lastNode);\n        range.collapse(true);\n        sel.removeAllRanges();\n        sel.addRange(range);\n      }\n    }\n  }, {\n    key: \"getWindowSelection\",\n    value: function getWindowSelection() {\n      if (this.tribute.collection.iframe) {\n        return this.tribute.collection.iframe.contentWindow.getSelection();\n      }\n\n      return window.getSelection();\n    }\n  }, {\n    key: \"getNodePositionInParent\",\n    value: function getNodePositionInParent(element) {\n      if (element.parentNode === null) {\n        return 0;\n      }\n\n      for (var i = 0; i < element.parentNode.childNodes.length; i++) {\n        var node = element.parentNode.childNodes[i];\n\n        if (node === element) {\n          return i;\n        }\n      }\n    }\n  }, {\n    key: \"getContentEditableSelectedPath\",\n    value: function getContentEditableSelectedPath(ctx) {\n      var sel = this.getWindowSelection();\n      var selected = sel.anchorNode;\n      var path = [];\n      var offset;\n\n      if (selected != null) {\n        var i;\n        var ce = selected.contentEditable;\n\n        while (selected !== null && ce !== 'true') {\n          i = this.getNodePositionInParent(selected);\n          path.push(i);\n          selected = selected.parentNode;\n\n          if (selected !== null) {\n            ce = selected.contentEditable;\n          }\n        }\n\n        path.reverse(); // getRangeAt may not exist, need alternative\n\n        offset = sel.getRangeAt(0).startOffset;\n        return {\n          selected: selected,\n          path: path,\n          offset: offset\n        };\n      }\n    }\n  }, {\n    key: \"getTextPrecedingCurrentSelection\",\n    value: function getTextPrecedingCurrentSelection() {\n      var context = this.tribute.current,\n          text = '';\n\n      if (!this.isContentEditable(context.element)) {\n        var textComponent = this.tribute.current.element;\n\n        if (textComponent) {\n          var startPos = textComponent.selectionStart;\n\n          if (textComponent.value && startPos >= 0) {\n            text = textComponent.value.substring(0, startPos);\n          }\n        }\n      } else {\n        var selectedElem = this.getWindowSelection().anchorNode;\n\n        if (selectedElem != null) {\n          var workingNodeContent = selectedElem.textContent;\n          var selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset;\n\n          if (workingNodeContent && selectStartOffset >= 0) {\n            text = workingNodeContent.substring(0, selectStartOffset);\n          }\n        }\n      }\n\n      return text;\n    }\n  }, {\n    key: \"getLastWordInText\",\n    value: function getLastWordInText(text) {\n      text = text.replace(/\\u00A0/g, ' '); // https://stackoverflow.com/questions/29850407/how-do-i-replace-unicode-character-u00a0-with-a-space-in-javascript\n\n      var wordsArray = text.split(/\\s+/);\n      var worldsCount = wordsArray.length - 1;\n      return wordsArray[worldsCount].trim();\n    }\n  }, {\n    key: \"getTriggerInfo\",\n    value: function getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\n      var _this2 = this;\n\n      var ctx = this.tribute.current;\n      var selected, path, offset;\n\n      if (!this.isContentEditable(ctx.element)) {\n        selected = this.tribute.current.element;\n      } else {\n        var selectionInfo = this.getContentEditableSelectedPath(ctx);\n\n        if (selectionInfo) {\n          selected = selectionInfo.selected;\n          path = selectionInfo.path;\n          offset = selectionInfo.offset;\n        }\n      }\n\n      var effectiveRange = this.getTextPrecedingCurrentSelection();\n      var lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange);\n\n      if (isAutocomplete) {\n        return {\n          mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\n          mentionText: lastWordOfEffectiveRange,\n          mentionSelectedElement: selected,\n          mentionSelectedPath: path,\n          mentionSelectedOffset: offset\n        };\n      }\n\n      if (effectiveRange !== undefined && effectiveRange !== null) {\n        var mostRecentTriggerCharPos = -1;\n        var triggerChar;\n        this.tribute.collection.forEach(function (config) {\n          var c = config.trigger;\n          var idx = config.requireLeadingSpace ? _this2.lastIndexWithLeadingSpace(effectiveRange, c) : effectiveRange.lastIndexOf(c);\n\n          if (idx > mostRecentTriggerCharPos) {\n            mostRecentTriggerCharPos = idx;\n            triggerChar = c;\n            requireLeadingSpace = config.requireLeadingSpace;\n          }\n        });\n\n        if (mostRecentTriggerCharPos >= 0 && (mostRecentTriggerCharPos === 0 || !requireLeadingSpace || /[\\xA0\\s]/g.test(effectiveRange.substring(mostRecentTriggerCharPos - 1, mostRecentTriggerCharPos)))) {\n          var currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + 1, effectiveRange.length);\n          triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + 1);\n          var firstSnippetChar = currentTriggerSnippet.substring(0, 1);\n          var leadingSpace = currentTriggerSnippet.length > 0 && (firstSnippetChar === ' ' || firstSnippetChar === '\\xA0');\n\n          if (hasTrailingSpace) {\n            currentTriggerSnippet = currentTriggerSnippet.trim();\n          }\n\n          var regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\n          this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\n\n          if (!leadingSpace && (menuAlreadyActive || !regex.test(currentTriggerSnippet))) {\n            return {\n              mentionPosition: mostRecentTriggerCharPos,\n              mentionText: currentTriggerSnippet,\n              mentionSelectedElement: selected,\n              mentionSelectedPath: path,\n              mentionSelectedOffset: offset,\n              mentionTriggerChar: triggerChar\n            };\n          }\n        }\n      }\n    }\n  }, {\n    key: \"lastIndexWithLeadingSpace\",\n    value: function lastIndexWithLeadingSpace(str, _char) {\n      var reversedStr = str.split('').reverse().join('');\n      var index = -1;\n\n      for (var cidx = 0, len = str.length; cidx < len; cidx++) {\n        var firstChar = cidx === str.length - 1;\n        var leadingSpace = /\\s/.test(reversedStr[cidx + 1]);\n        var match = _char === reversedStr[cidx];\n\n        if (match && (firstChar || leadingSpace)) {\n          index = str.length - 1 - cidx;\n          break;\n        }\n      }\n\n      return index;\n    }\n  }, {\n    key: \"isContentEditable\",\n    value: function isContentEditable(element) {\n      return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA';\n    }\n  }, {\n    key: \"isMenuOffScreen\",\n    value: function isMenuOffScreen(coordinates, menuDimensions) {\n      var windowWidth = window.innerWidth;\n      var windowHeight = window.innerHeight;\n      var doc = document.documentElement;\n      var windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n      var windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n      var menuTop = typeof coordinates.top === 'number' ? coordinates.top : windowTop + windowHeight - coordinates.bottom - menuDimensions.height;\n      var menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width;\n      var menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height;\n      var menuLeft = typeof coordinates.left === 'number' ? coordinates.left : windowLeft + windowWidth - coordinates.right - menuDimensions.width;\n      return {\n        top: menuTop < Math.floor(windowTop),\n        right: menuRight > Math.ceil(windowLeft + windowWidth),\n        bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n        left: menuLeft < Math.floor(windowLeft)\n      };\n    }\n  }, {\n    key: \"getMenuDimensions\",\n    value: function getMenuDimensions() {\n      // Width of the menu depends of its contents and position\n      // We must check what its width would be without any obstruction\n      // This way, we can achieve good positioning for flipping the menu\n      var dimensions = {\n        width: null,\n        height: null\n      };\n      this.tribute.menu.style.cssText = \"top: 0px;\\n                                 left: 0px;\\n                                 position: fixed;\\n                                 display: block;\\n                                 visibility; hidden;\";\n      dimensions.width = this.tribute.menu.offsetWidth;\n      dimensions.height = this.tribute.menu.offsetHeight;\n      this.tribute.menu.style.cssText = \"display: none;\";\n      return dimensions;\n    }\n  }, {\n    key: \"getTextAreaOrInputUnderlinePosition\",\n    value: function getTextAreaOrInputUnderlinePosition(element, position, flipped) {\n      var properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX', 'overflowY', 'borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch', 'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily', 'textAlign', 'textTransform', 'textIndent', 'textDecoration', 'letterSpacing', 'wordSpacing'];\n      var isFirefox = window.mozInnerScreenX !== null;\n      var div = this.getDocument().createElement('div');\n      div.id = 'input-textarea-caret-position-mirror-div';\n      this.getDocument().body.appendChild(div);\n      var style = div.style;\n      var computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle;\n      style.whiteSpace = 'pre-wrap';\n\n      if (element.nodeName !== 'INPUT') {\n        style.wordWrap = 'break-word';\n      } // position off-screen\n\n\n      style.position = 'absolute';\n      style.visibility = 'hidden'; // transfer the element's properties to the div\n\n      properties.forEach(function (prop) {\n        style[prop] = computed[prop];\n      });\n\n      if (isFirefox) {\n        style.width = \"\".concat(parseInt(computed.width) - 2, \"px\");\n        if (element.scrollHeight > parseInt(computed.height)) style.overflowY = 'scroll';\n      } else {\n        style.overflow = 'hidden';\n      }\n\n      div.textContent = element.value.substring(0, position);\n\n      if (element.nodeName === 'INPUT') {\n        div.textContent = div.textContent.replace(/\\s/g, ' ');\n      }\n\n      var span = this.getDocument().createElement('span');\n      span.textContent = element.value.substring(position) || '.';\n      div.appendChild(span);\n      var rect = element.getBoundingClientRect();\n      var doc = document.documentElement;\n      var windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n      var windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n      var top = 0;\n      var left = 0;\n\n      if (this.menuContainerIsBody) {\n        top = rect.top;\n        left = rect.left;\n      }\n\n      var coordinates = {\n        top: top + windowTop + span.offsetTop + parseInt(computed.borderTopWidth) + parseInt(computed.fontSize) - element.scrollTop,\n        left: left + windowLeft + span.offsetLeft + parseInt(computed.borderLeftWidth)\n      };\n      var windowWidth = window.innerWidth;\n      var windowHeight = window.innerHeight;\n      var menuDimensions = this.getMenuDimensions();\n      var menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions);\n\n      if (menuIsOffScreen.right) {\n        coordinates.right = windowWidth - coordinates.left;\n        coordinates.left = 'auto';\n      }\n\n      var parentHeight = this.tribute.menuContainer ? this.tribute.menuContainer.offsetHeight : this.getDocument().body.offsetHeight;\n\n      if (menuIsOffScreen.bottom) {\n        var parentRect = this.tribute.menuContainer ? this.tribute.menuContainer.getBoundingClientRect() : this.getDocument().body.getBoundingClientRect();\n        var scrollStillAvailable = parentHeight - (windowHeight - parentRect.top);\n        coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top - span.offsetTop);\n        coordinates.top = 'auto';\n      }\n\n      menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions);\n\n      if (menuIsOffScreen.left) {\n        coordinates.left = windowWidth > menuDimensions.width ? windowLeft + windowWidth - menuDimensions.width : windowLeft;\n        delete coordinates.right;\n      }\n\n      if (menuIsOffScreen.top) {\n        coordinates.top = windowHeight > menuDimensions.height ? windowTop + windowHeight - menuDimensions.height : windowTop;\n        delete coordinates.bottom;\n      }\n\n      this.getDocument().body.removeChild(div);\n      return coordinates;\n    }\n  }, {\n    key: \"getContentEditableCaretPosition\",\n    value: function getContentEditableCaretPosition(selectedNodePosition) {\n      var markerTextChar = '﻿';\n      var markerEl,\n          markerId = \"sel_\".concat(new Date().getTime(), \"_\").concat(Math.random().toString().substr(2));\n      var range;\n      var sel = this.getWindowSelection();\n      var prevRange = sel.getRangeAt(0);\n      range = this.getDocument().createRange();\n      range.setStart(sel.anchorNode, selectedNodePosition);\n      range.setEnd(sel.anchorNode, selectedNodePosition);\n      range.collapse(false); // Create the marker element containing a single invisible character using DOM methods and insert it\n\n      markerEl = this.getDocument().createElement('span');\n      markerEl.id = markerId;\n      markerEl.appendChild(this.getDocument().createTextNode(markerTextChar));\n      range.insertNode(markerEl);\n      sel.removeAllRanges();\n      sel.addRange(prevRange);\n      var rect = markerEl.getBoundingClientRect();\n      var doc = document.documentElement;\n      var windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n      var windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n      var left = 0;\n      var top = 0;\n\n      if (this.menuContainerIsBody) {\n        left = rect.left;\n        top = rect.top;\n      } else {\n        left = markerEl.offsetLeft;\n        top = markerEl.offsetTop;\n      }\n\n      var coordinates = {\n        left: left + windowLeft,\n        top: top + markerEl.offsetHeight + windowTop\n      };\n      var windowWidth = window.innerWidth;\n      var windowHeight = window.innerHeight;\n      var menuDimensions = this.getMenuDimensions();\n      var menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions);\n\n      if (menuIsOffScreen.right) {\n        coordinates.left = 'auto';\n        coordinates.right = windowWidth - rect.left - windowLeft;\n      }\n\n      var parentHeight = this.tribute.menuContainer ? this.tribute.menuContainer.offsetHeight : this.getDocument().body.offsetHeight;\n\n      if (menuIsOffScreen.bottom) {\n        var parentRect = this.tribute.menuContainer ? this.tribute.menuContainer.getBoundingClientRect() : this.getDocument().body.getBoundingClientRect();\n        var scrollStillAvailable = parentHeight - (windowHeight - parentRect.top);\n        coordinates.top = 'auto';\n        coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top);\n      }\n\n      menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions);\n\n      if (menuIsOffScreen.left) {\n        coordinates.left = windowWidth > menuDimensions.width ? windowLeft + windowWidth - menuDimensions.width : windowLeft;\n        delete coordinates.right;\n      }\n\n      if (menuIsOffScreen.top) {\n        coordinates.top = windowHeight > menuDimensions.height ? windowTop + windowHeight - menuDimensions.height : windowTop;\n        delete coordinates.bottom;\n      }\n\n      markerEl.parentNode.removeChild(markerEl);\n      return coordinates;\n    }\n  }, {\n    key: \"scrollIntoView\",\n    value: function scrollIntoView(elem) {\n      var reasonableBuffer = 20,\n          clientRect;\n      var maxScrollDisplacement = 100;\n      var e = this.menu;\n      if (typeof e === 'undefined') return;\n\n      while (clientRect === undefined || clientRect.height === 0) {\n        clientRect = e.getBoundingClientRect();\n\n        if (clientRect.height === 0) {\n          e = e.childNodes[0];\n\n          if (e === undefined || !e.getBoundingClientRect) {\n            return;\n          }\n        }\n      }\n\n      var elemTop = clientRect.top;\n      var elemBottom = elemTop + clientRect.height;\n\n      if (elemTop < 0) {\n        window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer);\n      } else if (elemBottom > window.innerHeight) {\n        var maxY = window.pageYOffset + clientRect.top - reasonableBuffer;\n\n        if (maxY - window.pageYOffset > maxScrollDisplacement) {\n          maxY = window.pageYOffset + maxScrollDisplacement;\n        }\n\n        var targetY = window.pageYOffset - (window.innerHeight - elemBottom);\n\n        if (targetY > maxY) {\n          targetY = maxY;\n        }\n\n        window.scrollTo(0, targetY);\n      }\n    }\n  }, {\n    key: \"menuContainerIsBody\",\n    get: function get() {\n      return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\n    }\n  }]);\n\n  return TributeRange;\n}();\n\nvar _default = TributeRange;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// Thanks to https://github.com/mattyork/fuzzy\nvar TributeSearch =\n/*#__PURE__*/\nfunction () {\n  function TributeSearch(tribute) {\n    _classCallCheck(this, TributeSearch);\n\n    this.tribute = tribute;\n    this.tribute.search = this;\n  }\n\n  _createClass(TributeSearch, [{\n    key: \"simpleFilter\",\n    value: function simpleFilter(pattern, array) {\n      var _this = this;\n\n      return array.filter(function (string) {\n        return _this.test(pattern, string);\n      });\n    }\n  }, {\n    key: \"test\",\n    value: function test(pattern, string) {\n      return this.match(pattern, string) !== null;\n    }\n  }, {\n    key: \"match\",\n    value: function match(pattern, string, opts) {\n      opts = opts || {};\n      var patternIdx = 0,\n          result = [],\n          len = string.length,\n          totalScore = 0,\n          currScore = 0,\n          pre = opts.pre || '',\n          post = opts.post || '',\n          compareString = opts.caseSensitive && string || string.toLowerCase(),\n          ch,\n          compareChar;\n\n      if (opts.skip) {\n        return {\n          rendered: string,\n          score: 0\n        };\n      }\n\n      pattern = opts.caseSensitive && pattern || pattern.toLowerCase();\n      var patternCache = this.traverse(compareString, pattern, 0, 0, []);\n\n      if (!patternCache) {\n        return null;\n      }\n\n      return {\n        rendered: this.render(string, patternCache.cache, pre, post),\n        score: patternCache.score\n      };\n    }\n  }, {\n    key: \"traverse\",\n    value: function traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n      // if the pattern search at end\n      if (pattern.length === patternIndex) {\n        // calculate score and copy the cache containing the indices where it's found\n        return {\n          score: this.calculateScore(patternCache),\n          cache: patternCache.slice()\n        };\n      } // if string at end or remaining pattern > remaining string\n\n\n      if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\n        return undefined;\n      }\n\n      var c = pattern[patternIndex];\n      var index = string.indexOf(c, stringIndex);\n      var best, temp;\n\n      while (index > -1) {\n        patternCache.push(index);\n        temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache);\n        patternCache.pop(); // if downstream traversal failed, return best answer so far\n\n        if (!temp) {\n          return best;\n        }\n\n        if (!best || best.score < temp.score) {\n          best = temp;\n        }\n\n        index = string.indexOf(c, index + 1);\n      }\n\n      return best;\n    }\n  }, {\n    key: \"calculateScore\",\n    value: function calculateScore(patternCache) {\n      var score = 0;\n      var temp = 1;\n      patternCache.forEach(function (index, i) {\n        if (i > 0) {\n          if (patternCache[i - 1] + 1 === index) {\n            temp += temp + 1;\n          } else {\n            temp = 1;\n          }\n        }\n\n        score += temp;\n      });\n      return score;\n    }\n  }, {\n    key: \"render\",\n    value: function render(string, indices, pre, post) {\n      var rendered = string.substring(0, indices[0]);\n      indices.forEach(function (index, i) {\n        rendered += pre + string[index] + post + string.substring(index + 1, indices[i + 1] ? indices[i + 1] : string.length);\n      });\n      return rendered;\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(pattern, arr, opts) {\n      var _this2 = this;\n\n      opts = opts || {};\n      return arr.reduce(function (prev, element, idx, arr) {\n        var str = element;\n\n        if (opts.extract) {\n          str = opts.extract(element);\n\n          if (!str) {\n            // take care of undefineds / nulls / etc.\n            str = '';\n          }\n        }\n\n        var rendered = _this2.match(pattern, str, opts);\n\n        if (rendered != null) {\n          prev[prev.length] = {\n            string: rendered.rendered,\n            score: rendered.score,\n            index: idx,\n            original: element\n          };\n        }\n\n        return prev;\n      }, []).sort(function (a, b) {\n        var compare = b.score - a.score;\n        if (compare) return compare;\n        return a.index - b.index;\n      });\n    }\n  }]);\n\n  return TributeSearch;\n}();\n\nvar _default = TributeSearch;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;\n\n},{}],6:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _Tribute = _interopRequireDefault(require(\"./Tribute\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n* Tribute.js\n* Native ES6 JavaScript @mention Plugin\n**/\nvar _default = _Tribute[\"default\"];\nexports[\"default\"] = _default;\nmodule.exports = exports.default;\n\n},{\"./Tribute\":1}],7:[function(require,module,exports){\n\"use strict\";\n\nif (!Array.prototype.find) {\n  Array.prototype.find = function (predicate) {\n    if (this === null) {\n      throw new TypeError('Array.prototype.find called on null or undefined');\n    }\n\n    if (typeof predicate !== 'function') {\n      throw new TypeError('predicate must be a function');\n    }\n\n    var list = Object(this);\n    var length = list.length >>> 0;\n    var thisArg = arguments[1];\n    var value;\n\n    for (var i = 0; i < length; i++) {\n      value = list[i];\n\n      if (predicate.call(thisArg, value, i, list)) {\n        return value;\n      }\n    }\n\n    return undefined;\n  };\n}\n\nif (window && typeof window.CustomEvent !== \"function\") {\n  var CustomEvent = function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  };\n\n  if (typeof window.Event !== 'undefined') {\n    CustomEvent.prototype = window.Event.prototype;\n  }\n\n  window.CustomEvent = CustomEvent;\n}\n\n},{}]},{},[6])(6)\n});\n","/* eslint-disable require-jsdoc, id-length, no-undefined, no-unused-vars, multiline-ternary, no-ternary, no-nested-ternary, no-invalid-this */\n/* eslint prefer-reflect: [\"error\", { \"exceptions\": [\"call\"] }] */\n/* eslint dot-location: [\"error\", \"property\"] */\n/* eslint no-unused-vars: 0 */\n\nimport { select, mouse } from \"d3-selection\";\nimport { min, max, extent, ascending, bisector } from \"d3-array\";\nimport { scaleTime, scaleLinear } from \"d3-scale\";\nimport { axisLeft, axisBottom } from \"d3-axis\";\nimport { timeMonth } from \"d3-time\";\nimport { timeFormat, isoParse } from \"d3-time-format\";\nimport { area, line } from \"d3-shape\";\n\n// lib\nexport default function areachart(opts = {}) {\n\n  const parseData = (data) => {\n    // format the data\n    data.forEach((d) => {\n      d.key = isoParse(d.key)\n      d.value = Number(d.value)\n    });\n\n    // order by date\n    return data.sort((x, y) => ascending(x.key, y.key))\n  }\n\n  // OPTIONAL: Helper function to accumulates all data values\n  const aggregate = (agg) => agg.map((item, index, array) => {\n    if (index > 0) {\n      item.value += array[index - 1].value\n    }\n    return item\n  })\n\n  // parse opts\n  let data = parseData(opts.data)\n  let title = opts.title\n  let objectName = opts.objectName || \"\"\n  let container = select(opts.container)\n  let showAxis = opts.axis || false\n  let ratio = (opts.ratio || \"\").split(\":\").reduce((a, b) => a / b) || (4 / 3)\n  let showTooltip = Object.is(opts.tip, undefined) ? true : opts.tip\n  let cumulative = opts.agg || false\n\n  if (cumulative) {\n    data = aggregate(data)\n  }\n\n  // set the dimensions and margins of the graph\n  let margin = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n\n  let width = Number(container.node().getBoundingClientRect().width) - margin.left - margin.right\n  let height = (width / ratio) - margin.top - margin.bottom\n  let titlePadding = min([width / 10, 32])\n\n  // set the ranges\n  let x = scaleTime().range([0, width]);\n  let y = scaleLinear().range([height, 0]);\n\n  // define the area\n  let _area = area()\n    .x((d) => x(d.key))\n    .y0(height)\n    .y1((d) => y(d.value));\n\n  // define the line\n  let valueline = line()\n    .x((d) => x(d.key))\n    .y((d) => y(d.value));\n\n  let svg = container.append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n  // scale the range of the data\n  x.domain(extent(data, (d) => d.key));\n  y.domain([0, max(data, (d) => d.value)]).nice();\n\n  // add the valueline path.\n  let topLine = svg.append(\"path\")\n    .data([data])\n    .attr(\"class\", \"line\")\n    .attr(\"d\", valueline)\n\n  // add the area\n  svg.append(\"path\")\n    .data([data])\n    .attr(\"class\", \"area\")\n    .attr(\"d\", _area)\n\n  if (showTooltip) {\n    // tooltip\n    let circle = svg.append(\"circle\")\n      .attr(\"class\", \"circle\")\n      .attr(\"r\", 6)\n      .style(\"display\", \"none\")\n\n    let tooltip = select(\"body\").append(\"div\")\n      .attr(\"id\", `${container.node().id}-tooltip`)\n      .attr(\"class\", \"chart-tooltip\")\n      .style(\"opacity\", 0)\n\n    svg\n      .on(\"mouseover\", () => {\n        circle.style(\"display\", null)\n        tooltip.style(\"opacity\", 1)\n      })\n      .on(\"mouseout\", () => {\n        circle.style(\"display\", \"none\")\n        tooltip.style(\"opacity\", 0)\n      })\n      .on(\"mousemove\", function() {\n        let x0 = x.invert(mouse(this)[0])\n        let i = bisector((d) => d.key).left(data, x0, 1)\n        let d0 = data[i - 1]\n        let d1 = data[i]\n        let d = (x0 - d0.key > d1.key - x0) ? d1 : d0\n\n        // svg position relative to document\n        let coords = {\n          x: window.pageXOffset + container.node().getBoundingClientRect().left,\n          y: window.pageYOffset + container.node().getBoundingClientRect().top\n        }\n\n        let tooltipContent = `\n          <div class=\"tooltip-content\">\n            ${timeFormat(\"%e %B %Y\")(d.key)}<br />\n            ${d.value.toLocaleString()} ${objectName}\n          </div>`\n\n        circle.attr(\"transform\", `translate(${x(d.key)},${y(d.value)})`)\n        tooltip.html(tooltipContent)\n          .style(\"left\", `${coords.x + x(d.key)}px`)\n          .style(\"top\", `${coords.y + y(d.value)}px`)\n      })\n  }\n\n  if (showAxis) {\n    let xAxis = axisBottom(x)\n      .ticks(timeMonth)\n      .tickFormat(timeFormat(\"%b %y\"))\n      .tickSize(-height)\n    let yAxis = axisLeft(y)\n      .ticks(5)\n      .tickSize(8)\n\n    let _xAxis = (g) => {\n      g.call(xAxis)\n      g.select(\".domain\").remove()\n      g.selectAll(\".tick line\").attr(\"class\", \"dashed\")\n      g.selectAll(\".tick text\").attr(\"y\", 6)\n    }\n    let _yAxis = (g) => {\n      g.call(yAxis)\n      g.select(\".domain\").remove()\n      g.select(\".tick:first-of-type\").remove()\n      g.selectAll(\".tick text\").attr(\"text-anchor\", \"start\").attr(\"x\", 6)\n    }\n\n    // custom X-Axis\n    svg.append(\"g\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(_xAxis);\n\n    // custom Y-Axis\n    svg.append(\"g\")\n      .call(_yAxis)\n\n    // last circle (current value)\n    let g = svg.append(\"g\")\n      .data([data])\n      .attr(\"transform\", (d) => `translate(${x(d[d.length - 1].key)},${y(d[d.length - 1].value)})`)\n\n    g.append(\"circle\")\n      .attr(\"class\", \"circle\")\n      .attr(\"r\", 8)\n\n    g.append(\"text\")\n      .attr(\"class\", \"sum\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"dx\", -8 * 2)\n      .text((d) => d[d.length - 1].value.toLocaleString())\n\n  } else {\n    // add the title group\n    let g = svg.append(\"g\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"transform\", `translate(${titlePadding},${titlePadding})`)\n\n    let titleLines = 0\n\n    if (title.length) {\n      g.append(\"text\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"class\", \"title\")\n        .text(title)\n        .call(function(fulltext, wrapwidth, start = 0) {\n          fulltext.each(function() {\n            let text = select(this)\n            let word = \"\"\n            let words = text.text().split(/\\s+/).reverse()\n            let _line = []\n            let lineNumber = 0\n            let lineHeight = 1.1\n            let _x = text.attr(\"x\")\n            let _y = text.attr(\"y\")\n            let dy = 0\n            let tspan = text.text(null)\n              .append(\"tspan\")\n              .attr(\"x\", _x)\n              .attr(\"y\", _y)\n              .attr(\"dy\", `${dy}em`)\n\n            /* eslint-disable no-cond-assign, no-plusplus */\n            while (word = words.pop()) {\n              _line.push(word);\n              tspan.text(_line.join(\" \"));\n              if (tspan.node().getComputedTextLength() > wrapwidth) {\n                _line.pop()\n                tspan.text(_line.join(\" \"))\n                _line = [word]\n                tspan = text.append(\"tspan\")\n                  .attr(\"x\", _x)\n                  .attr(\"y\", _y)\n                  .attr(\"dy\", `${(++lineNumber * lineHeight) + dy}em`)\n                  .text(word);\n              }\n            }\n\n            titleLines = lineNumber * lineHeight\n          });\n        }, width - (titlePadding * 2))\n    }\n\n    let fontSize = parseFloat(getComputedStyle(g.node()).fontSize);\n\n    g.append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"dy\", title.length ? (titlePadding * 2) + (titleLines * fontSize) : (titlePadding * 1.25))\n      .attr(\"class\", \"sum\")\n      .text(data[data.length - 1].value.toLocaleString())\n  }\n}\n","/* eslint-disable require-jsdoc, no-console */\n\nimport areachart from \"src/decidim/vizzs/areachart\"\n\n$(() => {\n\n  const metricsData = {};\n  const metricsContainer = {};\n  const metricsParams = {};\n\n  const query = () => {\n    let metricsQuery = `metrics(names: ${metricsParams.names}, space_type: \"${metricsParams.spaceType}\", space_id: ${metricsParams.spaceId}) { name history { key value } }`;\n    return {query: `{ ${metricsQuery} }`};\n  }\n\n  const parameterize = (metrics) => {\n    metricsParams.names = JSON.stringify(metrics || []);\n    metricsParams.spaceType = $(\"#metrics #metrics-space_type\").val() || null;\n    metricsParams.spaceId = $(\"#metrics #metrics-space_id\").val() || null;\n  }\n\n  const fetch = (metrics) => $.post(\"/api\", query(metrics));\n\n  const downloadMetricData = (event) => {\n    event.preventDefault();\n    let metricName = $(event.target).parents(\".metric-downloader\").data(\"metric\");\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n\n    csvContent += \"key,value\\r\\n\";\n    metricsData[metricName].forEach((metricData)  => {\n      csvContent += `${metricData.key},${metricData.value}\\r\\n`;\n    });\n\n    // Required for FF\n    let link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodeURI(csvContent));\n    link.setAttribute(\"download\", `${metricName}_metric_data.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  $(\".metric-chart:visible\").each((_index, container) => {\n    metricsContainer[$(container).data(\"metric\")] = container;\n  });\n  $(\".metric-downloader\").each((_index, container) => {\n    container.onclick = downloadMetricData;\n  });\n\n  if (!$.isEmptyObject(metricsContainer)) {\n    parameterize(Object.keys(metricsContainer))\n    fetch().then((response) => {\n      if (response.data) {\n        $.each(response.data.metrics, (_index, metricData) => {\n          let container = metricsContainer[metricData.name];\n          if (metricData.history.length === 0) {\n            $(container).remove();\n            return;\n          }\n          let info = $(container).data(\"info\");\n          metricsData[metricData.name] = $.extend(true, [], metricData.history);\n          areachart({\n            container: `#${container.id}`,\n            data: metricData.history,\n            title: info.title,\n            objectName: info.object,\n            ...$(container).data()\n          });\n        });\n      } else if (response.errors) {\n        console.log(\"Something wrong happened when fetching metrics:\");\n        $.each(response.errors, (_index, error) => {\n          console.log(error.message);\n        });\n        $(\"#metrics\").remove();\n      }\n    }).fail((err) => {\n      console.log(`Something wrong happened when fetching metrics: ${err.statusText}`);\n      $(\"#metrics\").remove();\n    });\n  }\n});\n"],"names":[],"sourceRoot":""}